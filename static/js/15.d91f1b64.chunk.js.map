{"version":3,"sources":["components/bonus/BonusParticipantsTable.js","pages/BonusSetView.js","components/HeaderBreadcrumbs.js","../node_modules/@material-ui/core/CardHeader/cardHeaderClasses.js","../node_modules/@material-ui/core/CardHeader/CardHeader.js","../node_modules/@material-ui/core/CardContent/cardContentClasses.js","../node_modules/@material-ui/core/CardContent/CardContent.js","../node_modules/@material-ui/core/TableHead/tableHeadClasses.js","../node_modules/@material-ui/core/TableHead/TableHead.js","../node_modules/@material-ui/core/TableRow/tableRowClasses.js","../node_modules/@material-ui/core/TableRow/TableRow.js","../node_modules/@material-ui/core/TableContainer/tableContainerClasses.js","../node_modules/@material-ui/core/TableContainer/TableContainer.js","../node_modules/@material-ui/core/Table/tableClasses.js","../node_modules/@material-ui/core/Table/Table.js","../node_modules/@material-ui/core/TableBody/tableBodyClasses.js","../node_modules/@material-ui/core/TableBody/TableBody.js","components/bonus/BonusWinnersTable.js","components/bonus/BonusListTable.js","components/bonus/BonusSetListTable.js"],"names":["TABLE_HEAD","id","label","alignRight","winnerList","Array","map","_","index","userId","name","faker","internet","userName","tickets","datatype","number","min","max","precision","bonusWon","acceptanceState","sample","BonusWinnersTable","theme","useTheme","Grid","container","spacing","sx","mt","item","xs","Typography","variant","Scrollbar","TableContainer","minWidth","Table","TableHead","TableRow","headCell","TableCell","align","TableBody","row","BonusSetView","themeStretch","useSettings","useParams","Page","title","Container","maxWidth","HeaderBreadcrumbs","heading","links","href","PATH_DASHBOARD","bonus","listBonusSet","BonusSetListTable","bonusList","brand","bonuses","endDate","Date","toDateString","ticketRules","averageValueOfSingleBonus","valueOfAllBonuses","winnerNumber","bonusTasksCompleted","numberOfParticipants","numberOfTickets","averageNumberOfUserTickets","sm","md","lg","Card","CardHeader","titleTypographyProps","textAlign","CardContent","Stack","direction","justifyContent","Box","height","mb","BonusListTable","availableQuantity","value","BonusParticipantsTable","action","moreLink","other","alignItems","flexGrow","gutterBottom","flexShrink","isString","target","noWrap","display","getCardHeaderUtilityClass","slot","generateUtilityClass","cardHeaderClasses","generateUtilityClasses","_excluded","CardHeaderRoot","styled","overridesResolver","props","styles","_extends","subheader","root","padding","CardHeaderAvatar","avatar","flex","marginRight","CardHeaderAction","alignSelf","marginTop","marginBottom","CardHeaderContent","content","React","inProps","ref","useThemeProps","className","component","disableTypography","subheaderProp","subheaderTypographyProps","titleProp","_objectWithoutPropertiesLoose","ownerState","classes","composeClasses","useUtilityClasses","type","_jsx","children","color","_jsxs","clsx","as","getCardContentUtilityClass","CardContentRoot","paddingBottom","getTableHeadUtilityClass","TableHeadRoot","tablelvl2","defaultComponent","Tablelvl2Context","Provider","role","getTableRowUtilityClass","tableRowClasses","TableRowRoot","head","footer","verticalAlign","outline","hover","backgroundColor","palette","selected","alpha","primary","main","selectedOpacity","hoverOpacity","slots","getTableContainerUtilityClass","TableContainerRoot","width","overflowX","getTableUtilityClass","TableRoot","stickyHeader","borderCollapse","borderSpacing","typography","body2","text","secondary","captionSide","size","table","TableContext","getTableBodyUtilityClass","TableBodyRoot","bonusName","length"],"mappings":"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","file":"static/js/15.d91f1b64.chunk.js","sourcesContent":["import faker from 'faker';\nimport { sample } from 'lodash';\n\nimport { useTheme } from '@material-ui/core/styles';\nimport { Grid, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Typography } from '@material-ui/core';\n\nimport Scrollbar from '../Scrollbar';\n\nconst TABLE_HEAD = [\n  { id: 'name', label: 'Name', alignRight: false },\n  { id: 'userId', label: 'User Id', alignRight: false },\n  { id: 'tickets', label: '# of tickets', alignRight: false },\n  { id: 'bonusWon', label: 'Bonus Won', alignRight: false },\n  { id: 'acceptanceState', label: 'Acceptance State', alignRight: false },\n];\n\nconst winnerList = [...Array(10)].map((_, index) => {\n  const setIndex = index + 1;\n  return {\n    userId: `id ${setIndex}`,\n    name: faker.internet.userName(),\n    tickets: faker.datatype.number({ min: 1000, max: 10000, precision: 1 }),\n    bonusWon: '100 shoes',\n    acceptanceState: sample([\n      'accepted bonus ',\n      'not accepted bonus',\n      'accepted task not completed',\n      'accepted task completed',\n    ]),\n  };\n});\n\nconst BonusWinnersTable = () => {\n  const theme = useTheme();\n  return (\n    <Grid container spacing={2} sx={{ mt: theme.spacing(8) }}>\n      <Grid item xs={12}>\n        <Typography variant=\"h5\">Participant List</Typography>\n      </Grid>\n      <Grid item xs={12}>\n        <Scrollbar>\n          <TableContainer sx={{ minWidth: 800 }}>\n            <Table aria-label=\"reward table\">\n              <TableHead>\n                <TableRow>\n                  {TABLE_HEAD.map((headCell) => (\n                    <TableCell key={headCell.id} align={headCell.alignRight ? 'right' : 'left'}>\n                      {headCell.label}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {winnerList.map((row) => (\n                  <TableRow key={row.name}>\n                    <TableCell>{row.name}</TableCell>\n                    <TableCell>{row.userId}</TableCell>\n                    <TableCell>{row.tickets}</TableCell>\n                    <TableCell>{row.bonusWon}</TableCell>\n                    <TableCell>{row.acceptanceState}</TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </Scrollbar>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default BonusWinnersTable;\n","import { useParams } from 'react-router-dom';\n// material\nimport { Box, Card, CardContent, CardHeader, Container, Grid, Stack, Typography } from '@material-ui/core';\n\nimport { PATH_DASHBOARD } from '../routes/paths';\n\nimport useSettings from '../hooks/useSettings';\n// components\nimport Page from '../components/Page';\nimport HeaderBreadcrumbs from '../components/HeaderBreadcrumbs';\nimport BonusSetListTable from '../components/bonus/BonusSetListTable';\nimport BonusWinnersTable from '../components/bonus/BonusWinnersTable';\nimport BonusParticipantsTable from '../components/bonus/BonusParticipantsTable';\nimport BonusListTable from '../components/bonus/BonusListTable';\n\nexport default function BonusSetView() {\n  const { themeStretch } = useSettings();\n  const { name } = useParams();\n\n  // TODO: will be updated with bonusSet\n  // const currentBonusSet = {};\n\n  return (\n    <Page title=\"Bonus Set: View Bonus Set\">\n      <Container maxWidth={themeStretch ? false : 'lg'}>\n        <HeaderBreadcrumbs\n          heading={name}\n          links={[{ name: 'Bonus Set', href: PATH_DASHBOARD.bonus.listBonusSet }, { name }]}\n        />\n\n        <BonusSetListTable\n          bonusList={[\n            {\n              name: 'Set 1',\n              brand: 'Riddim',\n              bonuses: ['Bonus 1', 'Bonus 2', 'Bonus 3'],\n              endDate: new Date().toDateString(),\n              ticketRules: ['Default Historical Data', 'Default Followers'],\n              averageValueOfSingleBonus: 200,\n              valueOfAllBonuses: 2000,\n              winnerNumber: 10,\n              bonusTasksCompleted: 60,\n              numberOfParticipants: 200,\n              numberOfTickets: 2000,\n              averageNumberOfUserTickets: 150,\n            },\n          ]}\n        />\n\n        {/* ticket rules */}\n        <Grid container spacing={2}>\n          <Grid item sm={12} md={4} lg={3}>\n            <Card>\n              <CardHeader title=\"Followers on Riddim\" titleTypographyProps={{ textAlign: 'center' }} />\n              <CardContent>\n                <Stack direction=\"row\" justifyContent=\"center\" spacing={2}>\n                  <Typography>100-5k</Typography>\n                  <Typography>x1 tickets</Typography>\n                </Stack>\n                <Stack direction=\"row\" justifyContent=\"center\" spacing={2}>\n                  <Typography>5k-50k</Typography>\n                  <Typography>x2 tickets</Typography>\n                </Stack>\n                <Stack direction=\"row\" justifyContent=\"center\" spacing={2}>\n                  <Typography>50k-500k</Typography>\n                  <Typography>x3 tickets</Typography>\n                </Stack>\n                <Stack direction=\"row\" justifyContent=\"center\" spacing={2}>\n                  <Typography>500k-2mil</Typography>\n                  <Typography>x4 tickets</Typography>\n                </Stack>\n              </CardContent>\n            </Card>\n          </Grid>\n          <Grid item sm={12} md={4} lg={3}>\n            <Card>\n              <CardHeader title=\"App Level\" titleTypographyProps={{ textAlign: 'center' }} />\n              <CardContent>\n                <Stack direction=\"row\" justifyContent=\"center\" spacing={2}>\n                  <Typography>Level 0-5</Typography>\n                  <Typography>x1 tickets</Typography>\n                </Stack>\n                <Stack direction=\"row\" justifyContent=\"center\" spacing={2}>\n                  <Typography>Level 6-10</Typography>\n                  <Typography>x2 tickets</Typography>\n                </Stack>\n                <Stack direction=\"row\" justifyContent=\"center\" spacing={2}>\n                  <Typography>Level 11-20</Typography>\n                  <Typography>x3 tickets</Typography>\n                </Stack>\n                <Stack direction=\"row\" justifyContent=\"center\" spacing={2}>\n                  <Typography>Level 21-25</Typography>\n                  <Typography>x4 tickets</Typography>\n                </Stack>\n              </CardContent>\n            </Card>\n          </Grid>\n        </Grid>\n\n        <Box sx={{ height: 720, mt: (theme) => theme.spacing(8) }}>\n          <Typography variant=\"h5\" sx={{ mb: 2 }}>\n            Bonuses of this set\n          </Typography>\n          <BonusListTable\n            bonusList={[\n              {\n                name: 'Bonus 1',\n                availableQuantity: 200,\n                brand: 'Riddim',\n                value: '100',\n              },\n              {\n                name: 'Bonus 2',\n                availableQuantity: 15,\n                brand: 'Riddim',\n                value: '250',\n              },\n              {\n                name: 'Bonus 3',\n                availableQuantity: 100,\n                brand: 'Riddim',\n                value: '75',\n              },\n            ]}\n          />\n        </Box>\n\n        <Box sx={{ height: 720, mt: (theme) => theme.spacing(8) }}>\n          <BonusParticipantsTable />\n        </Box>\n\n        <Box sx={{ height: 720, mt: (theme) => theme.spacing(8) }}>\n          <BonusWinnersTable />\n        </Box>\n      </Container>\n    </Page>\n  );\n}\n","import { isString } from 'lodash';\nimport PropTypes from 'prop-types';\n// material\nimport { Box, Typography, Link, Stack } from '@material-ui/core';\n//\nimport { MBreadcrumbs } from './@material-extend';\n\n// ----------------------------------------------------------------------\n\nHeaderBreadcrumbs.propTypes = {\n  links: PropTypes.array,\n  action: PropTypes.node,\n  heading: PropTypes.string.isRequired,\n  moreLink: PropTypes.oneOfType([PropTypes.string, PropTypes.array]),\n  sx: PropTypes.object,\n};\n\nexport default function HeaderBreadcrumbs({ links, action, heading, moreLink = '' || [], sx, ...other }) {\n  return (\n    <Stack sx={sx} mb={5} spacing={2}>\n      <Stack direction=\"row\" alignItems=\"center\">\n        <Box sx={{ flexGrow: 1 }}>\n          <Typography variant=\"h4\" gutterBottom>\n            {heading}\n          </Typography>\n          <MBreadcrumbs links={links} {...other} />\n        </Box>\n\n        {action && <Box sx={{ flexShrink: 0 }}>{action}</Box>}\n      </Stack>\n\n      {isString(moreLink) ? (\n        <Link href={moreLink} target=\"_blank\" variant=\"body2\">\n          {moreLink}\n        </Link>\n      ) : (\n        moreLink.map((href) => (\n          <Link noWrap key={href} href={href} variant=\"body2\" target=\"_blank\" sx={{ display: 'flex' }}>\n            {href}\n          </Link>\n        ))\n      )}\n    </Stack>\n  );\n}\n","import { generateUtilityClass, generateUtilityClasses } from '@material-ui/unstyled';\nexport function getCardHeaderUtilityClass(slot) {\n  return generateUtilityClass('MuiCardHeader', slot);\n}\nconst cardHeaderClasses = generateUtilityClasses('MuiCardHeader', ['root', 'avatar', 'action', 'content', 'title', 'subheader']);\nexport default cardHeaderClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"action\", \"avatar\", \"className\", \"component\", \"disableTypography\", \"subheader\", \"subheaderTypographyProps\", \"title\", \"titleTypographyProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport Typography from '../Typography';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport cardHeaderClasses, { getCardHeaderUtilityClass } from './cardHeaderClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    avatar: ['avatar'],\n    action: ['action'],\n    content: ['content'],\n    title: ['title'],\n    subheader: ['subheader']\n  };\n  return composeClasses(slots, getCardHeaderUtilityClass, classes);\n};\n\nconst CardHeaderRoot = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Root',\n  overridesResolver: (props, styles) => _extends({\n    [`& .${cardHeaderClasses.title}`]: styles.title,\n    [`& .${cardHeaderClasses.subheader}`]: styles.subheader\n  }, styles.root)\n})({\n  display: 'flex',\n  alignItems: 'center',\n  padding: 16\n});\nconst CardHeaderAvatar = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Avatar',\n  overridesResolver: (props, styles) => styles.avatar\n})({\n  display: 'flex',\n  flex: '0 0 auto',\n  marginRight: 16\n});\nconst CardHeaderAction = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Action',\n  overridesResolver: (props, styles) => styles.action\n})({\n  flex: '0 0 auto',\n  alignSelf: 'flex-start',\n  marginTop: -4,\n  marginRight: -8,\n  marginBottom: -4\n});\nconst CardHeaderContent = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Content',\n  overridesResolver: (props, styles) => styles.content\n})({\n  flex: '1 1 auto'\n});\nconst CardHeader = /*#__PURE__*/React.forwardRef(function CardHeader(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardHeader'\n  });\n\n  const {\n    action,\n    avatar,\n    className,\n    component = 'div',\n    disableTypography = false,\n    subheader: subheaderProp,\n    subheaderTypographyProps,\n    title: titleProp,\n    titleTypographyProps\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    component,\n    disableTypography\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  let title = titleProp;\n\n  if (title != null && title.type !== Typography && !disableTypography) {\n    title = /*#__PURE__*/_jsx(Typography, _extends({\n      variant: avatar ? 'body2' : 'h5',\n      className: classes.title,\n      component: \"span\",\n      display: \"block\"\n    }, titleTypographyProps, {\n      children: title\n    }));\n  }\n\n  let subheader = subheaderProp;\n\n  if (subheader != null && subheader.type !== Typography && !disableTypography) {\n    subheader = /*#__PURE__*/_jsx(Typography, _extends({\n      variant: avatar ? 'body2' : 'body1',\n      className: classes.subheader,\n      color: \"text.secondary\",\n      component: \"span\",\n      display: \"block\"\n    }, subheaderTypographyProps, {\n      children: subheader\n    }));\n  }\n\n  return /*#__PURE__*/_jsxs(CardHeaderRoot, _extends({\n    className: clsx(classes.root, className),\n    as: component,\n    ref: ref,\n    ownerState: ownerState\n  }, other, {\n    children: [avatar && /*#__PURE__*/_jsx(CardHeaderAvatar, {\n      className: classes.avatar,\n      ownerState: ownerState,\n      children: avatar\n    }), /*#__PURE__*/_jsxs(CardHeaderContent, {\n      className: classes.content,\n      ownerState: ownerState,\n      children: [title, subheader]\n    }), action && /*#__PURE__*/_jsx(CardHeaderAction, {\n      className: classes.action,\n      ownerState: ownerState,\n      children: action\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardHeader.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The action to display in the card header.\n   */\n  action: PropTypes.node,\n\n  /**\n   * The Avatar element to display.\n   */\n  avatar: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, `subheader` and `title` won't be wrapped by a Typography component.\n   * This can be useful to render an alternative Typography variant by wrapping\n   * the `title` text, and optional `subheader` text\n   * with the Typography component.\n   * @default false\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * The content of the component.\n   */\n  subheader: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the subheader\n   * (as long as disableTypography is not `true`).\n   */\n  subheaderTypographyProps: PropTypes.object,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * The content of the component.\n   */\n  title: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the title\n   * (as long as disableTypography is not `true`).\n   */\n  titleTypographyProps: PropTypes.object\n} : void 0;\nexport default CardHeader;","import { generateUtilityClass, generateUtilityClasses } from '@material-ui/unstyled';\nexport function getCardContentUtilityClass(slot) {\n  return generateUtilityClass('MuiCardContent', slot);\n}\nconst cardContentClasses = generateUtilityClasses('MuiCardContent', ['root']);\nexport default cardContentClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getCardContentUtilityClass } from './cardContentClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardContentUtilityClass, classes);\n};\n\nconst CardContentRoot = styled('div', {\n  name: 'MuiCardContent',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  };\n});\nconst CardContent = /*#__PURE__*/React.forwardRef(function CardContent(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardContent'\n  });\n\n  const {\n    className,\n    component = 'div'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    component\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardContentRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default CardContent;","import { generateUtilityClass, generateUtilityClasses } from '@material-ui/unstyled';\nexport function getTableHeadUtilityClass(slot) {\n  return generateUtilityClass('MuiTableHead', slot);\n}\nconst tableHeadClasses = generateUtilityClasses('MuiTableHead', ['root']);\nexport default tableHeadClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { getTableHeadUtilityClass } from './tableHeadClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getTableHeadUtilityClass, classes);\n};\n\nconst TableHeadRoot = styled('thead', {\n  name: 'MuiTableHead',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  display: 'table-header-group'\n});\nconst tablelvl2 = {\n  variant: 'head'\n};\nconst defaultComponent = 'thead';\nconst TableHead = /*#__PURE__*/React.forwardRef(function TableHead(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTableHead'\n  });\n\n  const {\n    className,\n    component = defaultComponent\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    component\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(Tablelvl2Context.Provider, {\n    value: tablelvl2,\n    children: /*#__PURE__*/_jsx(TableHeadRoot, _extends({\n      as: component,\n      className: clsx(classes.root, className),\n      ref: ref,\n      role: component === defaultComponent ? null : 'rowgroup',\n      ownerState: ownerState\n    }, other))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? TableHead.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component, normally `TableRow`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default TableHead;","import { generateUtilityClass, generateUtilityClasses } from '@material-ui/unstyled';\nexport function getTableRowUtilityClass(slot) {\n  return generateUtilityClass('MuiTableRow', slot);\n}\nconst tableRowClasses = generateUtilityClasses('MuiTableRow', ['root', 'selected', 'hover', 'head', 'footer']);\nexport default tableRowClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\", \"hover\", \"selected\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport { alpha } from '@material-ui/system';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport tableRowClasses, { getTableRowUtilityClass } from './tableRowClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    selected,\n    hover,\n    head,\n    footer\n  } = ownerState;\n  const slots = {\n    root: ['root', selected && 'selected', hover && 'hover', head && 'head', footer && 'footer']\n  };\n  return composeClasses(slots, getTableRowUtilityClass, classes);\n};\n\nconst TableRowRoot = styled('tr', {\n  name: 'MuiTableRow',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.head && styles.head, ownerState.footer && styles.footer];\n  }\n})(({\n  theme\n}) => ({\n  color: 'inherit',\n  display: 'table-row',\n  verticalAlign: 'middle',\n  // We disable the focus ring for mouse, touch and keyboard users.\n  outline: 0,\n  [`&.${tableRowClasses.hover}:hover`]: {\n    backgroundColor: theme.palette.action.hover\n  },\n  [`&.${tableRowClasses.selected}`]: {\n    backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity),\n    '&:hover': {\n      backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity)\n    }\n  }\n}));\nconst defaultComponent = 'tr';\n/**\n * Will automatically set dynamic row height\n * based on the material table element parent (head, body, etc).\n */\n\nconst TableRow = /*#__PURE__*/React.forwardRef(function TableRow(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTableRow'\n  });\n\n  const {\n    className,\n    component = defaultComponent,\n    hover = false,\n    selected = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const tablelvl2 = React.useContext(Tablelvl2Context);\n\n  const ownerState = _extends({}, props, {\n    component,\n    hover,\n    selected,\n    head: tablelvl2 && tablelvl2.variant === 'head',\n    footer: tablelvl2 && tablelvl2.variant === 'footer'\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(TableRowRoot, _extends({\n    as: component,\n    ref: ref,\n    className: clsx(classes.root, className),\n    role: component === defaultComponent ? null : 'row',\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableRow.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Should be valid <tr> children such as `TableCell`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the table row will shade on hover.\n   * @default false\n   */\n  hover: PropTypes.bool,\n\n  /**\n   * If `true`, the table row will have the selected shading.\n   * @default false\n   */\n  selected: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default TableRow;","import { generateUtilityClass, generateUtilityClasses } from '@material-ui/unstyled';\nexport function getTableContainerUtilityClass(slot) {\n  return generateUtilityClass('MuiTableContainer', slot);\n}\nconst tableContainerClasses = generateUtilityClasses('MuiTableContainer', ['root']);\nexport default tableContainerClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { getTableContainerUtilityClass } from './tableContainerClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getTableContainerUtilityClass, classes);\n};\n\nconst TableContainerRoot = styled('div', {\n  name: 'MuiTableContainer',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  width: '100%',\n  overflowX: 'auto'\n});\nconst TableContainer = /*#__PURE__*/React.forwardRef(function TableContainer(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTableContainer'\n  });\n\n  const {\n    className,\n    component = 'div'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    component\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(TableContainerRoot, _extends({\n    ref: ref,\n    as: component,\n    className: clsx(classes.root, className),\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableContainer.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component, normally `Table`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default TableContainer;","import { generateUtilityClass, generateUtilityClasses } from '@material-ui/unstyled';\nexport function getTableUtilityClass(slot) {\n  return generateUtilityClass('MuiTable', slot);\n}\nconst tableClasses = generateUtilityClasses('MuiTable', ['root', 'stickyHeader']);\nexport default tableClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"component\", \"padding\", \"size\", \"stickyHeader\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport TableContext from './TableContext';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { getTableUtilityClass } from './tableClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    stickyHeader\n  } = ownerState;\n  const slots = {\n    root: ['root', stickyHeader && 'stickyHeader']\n  };\n  return composeClasses(slots, getTableUtilityClass, classes);\n};\n\nconst TableRoot = styled('table', {\n  name: 'MuiTable',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.stickyHeader && styles.stickyHeader];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  display: 'table',\n  width: '100%',\n  borderCollapse: 'collapse',\n  borderSpacing: 0,\n  '& caption': _extends({}, theme.typography.body2, {\n    padding: theme.spacing(2),\n    color: theme.palette.text.secondary,\n    textAlign: 'left',\n    captionSide: 'bottom'\n  })\n}, ownerState.stickyHeader && {\n  borderCollapse: 'separate'\n}));\nconst defaultComponent = 'table';\nconst Table = /*#__PURE__*/React.forwardRef(function Table(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTable'\n  });\n\n  const {\n    className,\n    component = defaultComponent,\n    padding = 'normal',\n    size = 'medium',\n    stickyHeader = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    component,\n    padding,\n    size,\n    stickyHeader\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const table = React.useMemo(() => ({\n    padding,\n    size,\n    stickyHeader\n  }), [padding, size, stickyHeader]);\n  return /*#__PURE__*/_jsx(TableContext.Provider, {\n    value: table,\n    children: /*#__PURE__*/_jsx(TableRoot, _extends({\n      as: component,\n      role: component === defaultComponent ? null : 'table',\n      ref: ref,\n      className: clsx(classes.root, className),\n      ownerState: ownerState\n    }, other))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Table.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the table, normally `TableHead` and `TableBody`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Allows TableCells to inherit padding of the Table.\n   * @default 'normal'\n   */\n  padding: PropTypes.oneOf(['checkbox', 'none', 'normal']),\n\n  /**\n   * Allows TableCells to inherit size of the Table.\n   * @default 'medium'\n   */\n  size: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n\n  /**\n   * Set the header sticky.\n   *\n   * ⚠️ It doesn't work with IE11.\n   * @default false\n   */\n  stickyHeader: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default Table;","import { generateUtilityClass, generateUtilityClasses } from '@material-ui/unstyled';\nexport function getTableBodyUtilityClass(slot) {\n  return generateUtilityClass('MuiTableBody', slot);\n}\nconst tableBodyClasses = generateUtilityClasses('MuiTableBody', ['root']);\nexport default tableBodyClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { getTableBodyUtilityClass } from './tableBodyClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getTableBodyUtilityClass, classes);\n};\n\nconst TableBodyRoot = styled('tbody', {\n  name: 'MuiTableBody',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  display: 'table-row-group'\n});\nconst tablelvl2 = {\n  variant: 'body'\n};\nconst defaultComponent = 'tbody';\nconst TableBody = /*#__PURE__*/React.forwardRef(function TableBody(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTableBody'\n  });\n\n  const {\n    className,\n    component = defaultComponent\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    component\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(Tablelvl2Context.Provider, {\n    value: tablelvl2,\n    children: /*#__PURE__*/_jsx(TableBodyRoot, _extends({\n      className: clsx(classes.root, className),\n      as: component,\n      ref: ref,\n      role: component === defaultComponent ? null : 'rowgroup',\n      ownerState: ownerState\n    }, other))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? TableBody.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component, normally `TableRow`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default TableBody;","import faker from 'faker';\nimport { sample } from 'lodash';\n\nimport { useTheme } from '@material-ui/core/styles';\nimport { Grid, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Typography } from '@material-ui/core';\n\nimport Scrollbar from '../Scrollbar';\n\nconst TABLE_HEAD = [\n  { id: 'name', label: 'Name', alignRight: false },\n  { id: 'userId', label: 'User Id', alignRight: false },\n  { id: 'tickets', label: '# of tickets', alignRight: false },\n  { id: 'brand', label: 'Brand', alignRight: false },\n  { id: 'bonusName', label: 'Bonus Name', alignRight: false },\n  { id: 'acceptanceState', label: 'Acceptance State', alignRight: false },\n];\n\nconst winnerList = [...Array(3)].map((_, index) => {\n  const setIndex = index + 1;\n  return {\n    userId: `id ${setIndex}`,\n    name: faker.internet.userName(),\n    tickets: faker.datatype.number({ min: 1000, max: 10000, precision: 1 }),\n    brand: 'Brand 1',\n    bonusName: '100 shoes',\n    acceptanceState: sample([\n      'accepted bonus ',\n      'not accepted bonus',\n      'accepted task not completed',\n      'accepted task completed',\n    ]),\n  };\n});\n\nconst BonusWinnersTable = () => {\n  const theme = useTheme();\n  return (\n    <Grid container spacing={2} sx={{ mt: theme.spacing(8) }}>\n      <Grid item xs={12}>\n        <Typography variant=\"h5\">Winner List</Typography>\n      </Grid>\n      <Grid item xs={12}>\n        <Scrollbar>\n          <TableContainer sx={{ minWidth: 800 }}>\n            <Table aria-label=\"reward table\">\n              <TableHead>\n                <TableRow>\n                  {TABLE_HEAD.map((headCell) => (\n                    <TableCell key={headCell.id} align={headCell.alignRight ? 'right' : 'left'}>\n                      {headCell.label}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {winnerList.map((row) => (\n                  <TableRow key={row.name}>\n                    <TableCell>{row.name}</TableCell>\n                    <TableCell>{row.userId}</TableCell>\n                    <TableCell>{row.tickets}</TableCell>\n                    <TableCell>{row.brand}</TableCell>\n                    <TableCell>{row.bonusName}</TableCell>\n                    <TableCell>{row.acceptanceState}</TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </Scrollbar>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default BonusWinnersTable;\n","import PropTypes from 'prop-types';\n\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@material-ui/core';\n\nimport Scrollbar from '../Scrollbar';\n\nconst TABLE_HEAD = [\n  { id: 'name', label: 'Name', alignRight: false },\n  { id: 'brand', label: 'Brand', alignRight: false },\n  { id: 'availableQuantity', label: 'Available Quantity', alignRight: false },\n  { id: 'value', label: 'Value ($)', alignRight: false },\n];\n\nBonusListTable.propTypes = {\n  bonusList: PropTypes.array,\n};\n\nfunction BonusListTable({ bonusList = [] }) {\n  return (\n    <Scrollbar>\n      <TableContainer sx={{ minWidth: 800 }}>\n        <Table aria-label=\"bonus table\">\n          <TableHead>\n            <TableRow>\n              {TABLE_HEAD.map((headCell) => (\n                <TableCell key={headCell.id} align={headCell.alignRight ? 'right' : 'left'}>\n                  {headCell.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {bonusList.map((row) => (\n              <TableRow key={row.name}>\n                <TableCell>{row.name}</TableCell>\n                <TableCell>{row.brand}</TableCell>\n                <TableCell>{row.availableQuantity}</TableCell>\n                <TableCell>{row.value}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Scrollbar>\n  );\n}\n\nexport default BonusListTable;\n","import PropTypes from 'prop-types';\n\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@material-ui/core';\n\nimport Scrollbar from '../Scrollbar';\n\nconst TABLE_HEAD = [\n  { id: 'name', label: 'Name', alignRight: false },\n  { id: 'brand', label: 'Brand', alignRight: false },\n  { id: 'endDate', label: 'End Date', alignRight: false },\n  { id: 'numberOfBonuses', label: 'Number of bonuses', alignRight: false },\n  { id: 'averageValueOfSingleBonus', label: 'Average $ of a single bonus', alignRight: false },\n  { id: 'valueOfAllBonuses', label: 'Value of all bonuses', alignRight: false },\n  { id: 'winnerNumber', label: 'Winner Number', alignRight: false },\n  { id: 'bonusTasksCompleted', label: 'Bonus Tasks Completed (%)', alignRight: false },\n  { id: 'numberOfParticipants', label: '# of participants', alignRight: false },\n  { id: 'numberOfTickets', label: '# of tickets', alignRight: false },\n  { id: 'averageNumberOfUserTickets', label: 'Average # of user tickets', alignRight: false },\n];\n\nBonusSetListTable.propTypes = {\n  bonusList: PropTypes.array,\n};\n\nfunction BonusSetListTable({ bonusList = [] }) {\n  return (\n    <Scrollbar>\n      <TableContainer sx={{ minWidth: 800 }}>\n        <Table aria-label=\"bonus table\">\n          <TableHead>\n            <TableRow>\n              {TABLE_HEAD.map((headCell) => (\n                <TableCell key={headCell.id} align={headCell.alignRight ? 'right' : 'left'}>\n                  {headCell.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {bonusList.map((row) => (\n              <TableRow key={row.name}>\n                <TableCell>{row.name}</TableCell>\n                <TableCell>{row.brand}</TableCell>\n                <TableCell>{row.endDate}</TableCell>\n                <TableCell>{row.bonuses.length}</TableCell>\n                <TableCell>{row.averageValueOfSingleBonus}</TableCell>\n                <TableCell>{row.valueOfAllBonuses}</TableCell>\n                <TableCell>{row.winnerNumber}</TableCell>\n                <TableCell>{row.bonusTasksCompleted}</TableCell>\n                <TableCell>{row.numberOfParticipants}</TableCell>\n                <TableCell>{row.numberOfTickets}</TableCell>\n                <TableCell>{row.averageNumberOfUserTickets}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Scrollbar>\n  );\n}\n\nexport default BonusSetListTable;\n"],"sourceRoot":""}