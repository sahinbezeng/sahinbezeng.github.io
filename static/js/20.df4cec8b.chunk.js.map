{"version":3,"sources":["components/campaign/validations.js","../node_modules/@mui/material/CardMedia/cardMediaClasses.js","../node_modules/@mui/material/CardMedia/CardMedia.js","../node_modules/@mui/material/CardActions/cardActionsClasses.js","../node_modules/@mui/material/CardActions/CardActions.js","components/campaign/CampaignTypeForm.js","components/campaign/task/TaskAndRewardsForm.js","components/campaign/task/TaskDetailForm.js","components/campaign/contest/ContestAndRewardsForm.js","components/campaign/contest/ContestDetailForm.js","utils/constants/colors.js","components/campaign/survey/SurveyAndRewardsForm.js","components/campaign/watch-ad/WatchAdForm.js","components/campaign/watch-ad/WatchAdDetailForm.js","components/campaign/CampaignNewForm.js","pages/CampaignCreate.js","utils/formatNumber.js","components/HeaderBreadcrumbs.js","../node_modules/@iconify/icons-eva/plus-fill.js","utils/constants/regexs.js","components/upload/UploadMultiFile.js","components/upload/UploadSingleFile.js","components/upload/UploadAvatar.js","components/DynamicFormItem.js","../node_modules/@mui/icons-material/esm/Delete.js","components/Steps.js","../node_modules/@mui/icons-material/esm/Add.js"],"names":["CampaignTypeSchema","Yup","shape","brand","matches","nameRegExp","required","campaignType","TaskAndRewardsSchema","name","taskType","tier","associatedBonus","isPublic","energyPerUser","min","TaskDetailSchema","headerImage","description","totalBudget","perUser","starPerUser","continueAfterBudget","doList","of","dontList","igCaptionQuestions","noOfPhotoRequired","noOfVideoRequired","hashtags","mentions","startDate","nullable","endDate","when","schema","ContestAndRewardsSchema","contestType","ContestDetailSchema","winnerToken","contestStartDate","contestEndDate","votingStartDate","votingEndDate","winnerDate","SurveyAndRewardsSchema","percentageColor","surveyQuestions","title","options","WatchAdSchema","WatchAdDetailSchema","adVideo","adVideoThumbnail","getCardMediaUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CardMediaRoot","styled","overridesResolver","props","styles","ownerState","isMediaComponent","isImageComponent","root","media","img","_extends","display","backgroundSize","backgroundRepeat","backgroundPosition","width","objectFit","MEDIA_COMPONENTS","IMAGE_COMPONENTS","CardMedia","React","inProps","ref","useThemeProps","children","className","component","image","src","style","other","_objectWithoutPropertiesLoose","indexOf","composedStyle","backgroundImage","classes","slots","composeClasses","useUtilityClasses","_jsx","clsx","as","role","undefined","getCardActionsUtilityClass","CardActionsRoot","disableSpacing","spacing","alignItems","padding","marginLeft","CardActions","CAMPAIGN_TYPES","CampaignTypeForm","formik","onCampaignTypeChange","theme","useTheme","errors","values","touched","getFieldProps","setFieldValue","Grid","container","item","md","Stack","xs","TextField","select","fullWidth","size","label","placeholder","SelectProps","native","error","Boolean","helperText","value","map","option","index","RadioGroup","onChange","e","console","log","target","direction","columns","type","isSelected","Card","variant","sx","border","palette","primary","main","height","CardContent","FormControlLabel","control","Radio","top","margin","position","TaskAndRewardsForm","CardHeader","sm","InputProps","inputProps","justifyContent","Typography","labelPlacement","Switch","checked","mx","LabelStyle","typography","subtitle2","color","text","secondary","marginBottom","TaskDetailForm","handleCoverDrop","useCallback","acceptedFiles","file","preview","URL","createObjectURL","maxSize","accept","coverUrl","onDrop","FormHelperText","px","Number","isNaN","Button","RouterLink","to","PATH_DASHBOARD","reward","create","Avatar","alt","multiline","rows","render","arrHelper","fieldName","DynamicFormItem","fieldProps","getIn","isLastItem","length","onAddClick","push","onRemoveClick","remove","Autocomplete","multiple","freeSolo","event","newValue","renderTags","getTagProps","Chip","renderInput","params","DateTimePicker","inputFormat","date","isValidDate","mb","p","ContestAndRewardsForm","ContestDetailForm","titleTypographyProps","colors","initialQuestion","SurveyAndRewardsForm","questionArrayHelpers","action","startIcon","icon","PlusFill","onClick","question","questionIndex","optArrayHelpers","optionIndex","optionFieldName","IconButton","Delete","Add","WatchAdForm","WatchAdDetailForm","handleVideoDrop","handleThumbnailDrop","caption","mt","textAlign","fData","STEPS","initialSurveyQuestion","CampaignNewForm","isEdit","currentCampaign","navigate","useNavigate","enqueueSnackbar","useSnackbar","useState","activeStep","setActiveStep","setCampaignType","VALIDATION_SCHEMAS","Task","Contest","Survey","Campaign","isLastStep","useFormik","enableReinitialize","initialValues","Date","validationSchema","onSubmit","a","setSubmitting","resetForm","setErrors","alert","JSON","stringify","campaign","list","all","prev","handleSubmit","isSubmitting","noValidate","autoComplete","Steps","steps","val","Box","mr","LoadingButton","loading","CampaignCreate","themeStretch","useSettings","pathname","useLocation","useParams","includes","Page","Container","maxWidth","HeaderBreadcrumbs","heading","links","href","fShortenNumber","number","replace","numeral","format","moreLink","flexGrow","gutterBottom","flexShrink","isString","noWrap","exports","__esModule","default","phoneRegExp","addressRegExp","DropZoneStyle","outline","flexDirection","borderRadius","backgroundColor","background","neutral","grey","opacity","cursor","breakpoints","up","UploadMultiFile","showPreview","files","onRemove","onRemoveAll","hasFile","useDropzone","getRootProps","getInputProps","isDragActive","isDragReject","fileRejections","ShowRejectionItems","Paper","py","borderColor","bgcolor","alpha","path","my","message","code","ml","textDecoration","List","disablePadding","AnimatePresence","key","ListItem","motion","div","varFadeInRight","m","overflow","right","closeFill","divider","ListItemIcon","fileFill","ListItemText","primaryTypographyProps","secondaryTypographyProps","ListItemSecondaryAction","edge","transition","transitions","UploadSingleFile","RootStyle","zIndex","PlaceholderStyle","easing","easeInOut","duration","shorter","UploadAvatar","Icon","roundAddAPhoto","createSvgIcon","d","QontoConnector","withStyles","alternativeLabel","left","active","completed","line","borderTopWidth","StepConnector","QontoStepIcon","CheckmarkFill","connector","StepIconComponent"],"mappings":"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","file":"static/js/20.df4cec8b.chunk.js","sourcesContent":["import * as Yup from 'yup';\nimport { nameRegExp } from '../../utils/constants/regexs';\n\nexport const CampaignTypeSchema = Yup.object().shape({\n  brand: Yup.string().matches(nameRegExp, 'Cannot include special characters.').required('Brand is required'),\n  campaignType: Yup.string(),\n});\n\nexport const TaskAndRewardsSchema = Yup.object().shape({\n  name: Yup.string().matches(nameRegExp, 'Cannot include special characters.').required('Name is required'),\n  taskType: Yup.string(),\n  tier: Yup.string(),\n  associatedBonus: Yup.string(),\n  isPublic: Yup.boolean().required('Status is required'),\n  energyPerUser: Yup.number().min(0),\n});\n\nexport const TaskDetailSchema = Yup.object().shape({\n  headerImage: Yup.mixed(),\n  description: Yup.string(),\n  totalBudget: Yup.number(),\n  perUser: Yup.string(),\n  starPerUser: Yup.number(),\n  continueAfterBudget: Yup.string(),\n  doList: Yup.array().of(Yup.string()),\n  dontList: Yup.array().of(Yup.string()),\n  igCaptionQuestions: Yup.array().of(Yup.string()),\n  noOfPhotoRequired: Yup.number(),\n  noOfVideoRequired: Yup.number(),\n  hashtags: Yup.array().of(Yup.string()),\n  mentions: Yup.array().of(Yup.string()),\n  startDate: Yup.date().nullable(true),\n  endDate: Yup.date().when('startDate', (startDate, schema) =>\n    startDate ? schema.min(startDate, 'End date must be later than start date') : schema.nullable(true)\n  ),\n});\n\nexport const ContestAndRewardsSchema = Yup.object().shape({\n  name: Yup.string().matches(nameRegExp, 'Cannot include special characters.').required('Name is required'),\n  contestType: Yup.string(),\n  tier: Yup.string(),\n  associatedBonus: Yup.string(),\n  isPublic: Yup.boolean().required('Status is required'),\n});\n\nexport const ContestDetailSchema = Yup.object().shape({\n  headerImage: Yup.mixed(),\n  description: Yup.string(),\n  totalBudget: Yup.number(),\n  winnerToken: Yup.string(),\n  starPerUser: Yup.number(),\n  continueAfterBudget: Yup.string(),\n  doList: Yup.array().of(Yup.string()),\n  dontList: Yup.array().of(Yup.string()),\n  igCaptionQuestions: Yup.array().of(Yup.string()),\n  noOfPhotoRequired: Yup.number(),\n  noOfVideoRequired: Yup.number(),\n  hashtags: Yup.array().of(Yup.string()),\n  mentions: Yup.array().of(Yup.string()),\n  contestStartDate: Yup.date().nullable(true),\n  contestEndDate: Yup.date().when('contestStartDate', (contestStartDate, schema) =>\n    contestStartDate ? schema.min(contestStartDate, 'End date must be later than start date') : schema.nullable(true)\n  ),\n  votingStartDate: Yup.date().nullable(true),\n  votingEndDate: Yup.date().when('votingStartDate', (votingStartDate, schema) =>\n    votingStartDate ? schema.min(votingStartDate, 'End date must be later than start date') : schema.nullable(true)\n  ),\n  winnerDate: Yup.date().nullable(true),\n});\n\nexport const SurveyAndRewardsSchema = Yup.object().shape({\n  name: Yup.string().matches(nameRegExp, 'Cannot include special characters.').required('Name is required'),\n  description: Yup.string(),\n  percentageColor: Yup.string(),\n  starPerUser: Yup.number(),\n  startDate: Yup.date().nullable(true),\n  endDate: Yup.date().when('startDate', (startDate, schema) =>\n    startDate ? schema.min(startDate, 'End date must be later than start date') : schema.nullable(true)\n  ),\n  surveyQuestions: Yup.array().of(Yup.object().shape({ title: Yup.string(), options: Yup.array().of(Yup.string()) })),\n});\n\nexport const WatchAdSchema = Yup.object().shape({\n  name: Yup.string().matches(nameRegExp, 'Cannot include special characters.').required('Name is required'),\n  taskType: Yup.string(),\n  totalBudget: Yup.number(),\n  perUser: Yup.string(),\n  starPerUser: Yup.number(),\n  continueAfterBudget: Yup.string(),\n  tier: Yup.string(),\n  associatedBonus: Yup.string(),\n  isPublic: Yup.boolean().required('Status is required'),\n});\n\nexport const WatchAdDetailSchema = Yup.object().shape({\n  adVideo: Yup.mixed().required('Ad Video is required'),\n  adVideoThumbnail: Yup.mixed().required('Thumbnail is required'),\n  startDate: Yup.date().nullable(true),\n  endDate: Yup.date().when('startDate', (startDate, schema) =>\n    startDate ? schema.min(startDate, 'End date must be later than start date') : schema.nullable(true)\n  ),\n});\n","import { generateUtilityClass, generateUtilityClasses } from '@mui/core';\nexport function getCardMediaUtilityClass(slot) {\n  return generateUtilityClass('MuiCardMedia', slot);\n}\nconst cardMediaClasses = generateUtilityClasses('MuiCardMedia', ['root', 'media', 'img']);\nexport default cardMediaClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\", \"component\", \"image\", \"src\", \"style\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/core';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { getCardMediaUtilityClass } from './cardMediaClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    isMediaComponent,\n    isImageComponent\n  } = ownerState;\n  const slots = {\n    root: ['root', isMediaComponent && 'media', isImageComponent && 'img']\n  };\n  return composeClasses(slots, getCardMediaUtilityClass, classes);\n};\n\nconst CardMediaRoot = styled('div', {\n  name: 'MuiCardMedia',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    const {\n      isMediaComponent,\n      isImageComponent\n    } = ownerState;\n    return [styles.root, isMediaComponent && styles.media, isImageComponent && styles.img];\n  }\n})(({\n  ownerState\n}) => _extends({\n  display: 'block',\n  backgroundSize: 'cover',\n  backgroundRepeat: 'no-repeat',\n  backgroundPosition: 'center'\n}, ownerState.isMediaComponent && {\n  width: '100%'\n}, ownerState.isImageComponent && {\n  // ⚠️ object-fit is not supported by IE11.\n  objectFit: 'cover'\n}));\nconst MEDIA_COMPONENTS = ['video', 'audio', 'picture', 'iframe', 'img'];\nconst IMAGE_COMPONENTS = ['picture', 'img'];\nconst CardMedia = /*#__PURE__*/React.forwardRef(function CardMedia(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardMedia'\n  });\n\n  const {\n    children,\n    className,\n    component = 'div',\n    image,\n    src,\n    style\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const isMediaComponent = MEDIA_COMPONENTS.indexOf(component) !== -1;\n  const composedStyle = !isMediaComponent && image ? _extends({\n    backgroundImage: `url(\"${image}\")`\n  }, style) : style;\n\n  const ownerState = _extends({}, props, {\n    component,\n    isMediaComponent,\n    isImageComponent: IMAGE_COMPONENTS.indexOf(component) !== -1\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardMediaRoot, _extends({\n    className: clsx(classes.root, className),\n    as: component,\n    role: !isMediaComponent && image ? 'image' : undefined,\n    ref: ref,\n    style: composedStyle,\n    ownerState: ownerState,\n    src: isMediaComponent ? image || src : undefined\n  }, other, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardMedia.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: chainPropTypes(PropTypes.node, props => {\n    if (!props.children && !props.image && !props.src && !props.component) {\n      return new Error('MUI: Either `children`, `image`, `src` or `component` prop must be specified.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Image to be displayed as a background image.\n   * Either `image` or `src` prop must be specified.\n   * Note that caller must specify height otherwise the image will not be visible.\n   */\n  image: PropTypes.string,\n\n  /**\n   * An alias for `image` property.\n   * Available only with media components.\n   * Media components: `video`, `audio`, `picture`, `iframe`, `img`.\n   */\n  src: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default CardMedia;","import { generateUtilityClass, generateUtilityClasses } from '@mui/core';\nexport function getCardActionsUtilityClass(slot) {\n  return generateUtilityClass('MuiCardActions', slot);\n}\nconst cardActionsClasses = generateUtilityClasses('MuiCardActions', ['root', 'spacing']);\nexport default cardActionsClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"disableSpacing\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/core';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getCardActionsUtilityClass } from './cardActionsClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disableSpacing\n  } = ownerState;\n  const slots = {\n    root: ['root', !disableSpacing && 'spacing']\n  };\n  return composeClasses(slots, getCardActionsUtilityClass, classes);\n};\n\nconst CardActionsRoot = styled('div', {\n  name: 'MuiCardActions',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, !ownerState.disableSpacing && styles.spacing];\n  }\n})(({\n  ownerState\n}) => _extends({\n  display: 'flex',\n  alignItems: 'center',\n  padding: 8\n}, !ownerState.disableSpacing && {\n  '& > :not(:first-of-type)': {\n    marginLeft: 8\n  }\n}));\nconst CardActions = /*#__PURE__*/React.forwardRef(function CardActions(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardActions'\n  });\n\n  const {\n    disableSpacing = false,\n    className\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    disableSpacing\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardActionsRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardActions.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the actions do not have additional margin.\n   * @default false\n   */\n  disableSpacing: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default CardActions;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useTheme } from '@mui/material/styles';\nimport {\n  Card,\n  CardActions,\n  CardContent,\n  CardMedia,\n  FormControlLabel,\n  Grid,\n  Radio,\n  RadioGroup,\n  Stack,\n  TextField,\n} from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nconst CAMPAIGN_TYPES = ['Task', 'Contest', 'Survey', 'Watch Ad', 'Campaign'];\n\nconst CampaignTypeForm = ({ formik, onCampaignTypeChange }) => {\n  const theme = useTheme();\n  const { errors, values, touched, getFieldProps, setFieldValue } = formik;\n  return (\n    <Grid container spacing={3}>\n      <Grid item md={12}>\n        <Stack spacing={3}>\n          <Grid container>\n            <Grid item xs={12} md={4}>\n              <TextField\n                select\n                fullWidth\n                size=\"small\"\n                label=\"Select Brand\"\n                placeholder=\"Brand\"\n                {...getFieldProps('brand')}\n                SelectProps={{ native: true }}\n                error={Boolean(touched.brand && errors.brand)}\n                helperText={touched.brand && errors.brand}\n              >\n                <option value=\"\" />\n                {['Adidas', 'Nike'].map((option, index) => (\n                  <option key={option + index} value={option}>\n                    {option}\n                  </option>\n                ))}\n              </TextField>\n            </Grid>\n          </Grid>\n\n          <RadioGroup\n            {...getFieldProps('campaignType')}\n            value={values.campaignType}\n            onChange={(e) => {\n              console.log(e.target.value);\n              setFieldValue('campaignType', e.target.value);\n              onCampaignTypeChange(e.target.value);\n            }}\n          >\n            <Grid container spacing={1.5} direction=\"row\" columns={10}>\n              {CAMPAIGN_TYPES.map((type) => {\n                const isSelected = values.campaignType === type;\n                return (\n                  <Grid item xs={5} md={2} key={type}>\n                    <Card\n                      variant={isSelected ? 'elevation' : 'outlined'}\n                      sx={{\n                        ...(isSelected && {\n                          border: `solid 2px ${theme.palette.primary.main}`,\n                        }),\n                      }}\n                    >\n                      <CardMedia\n                        sx={{ height: 140 }}\n                        image=\"/static/mock-images/products/product_1.jpg\"\n                        title=\"Contemplative Reptile\"\n                      />\n                      <CardContent>{type}</CardContent>\n                      <CardActions>\n                        <FormControlLabel\n                          label=\"\"\n                          value={type}\n                          control={<Radio sx={{ display: 'none' }} />}\n                          sx={{\n                            top: 0,\n                            margin: 0,\n                            width: '100%',\n                            height: '100%',\n                            position: 'absolute',\n                          }}\n                        />\n                      </CardActions>\n                    </Card>\n                  </Grid>\n                );\n              })}\n            </Grid>\n          </RadioGroup>\n        </Stack>\n      </Grid>\n    </Grid>\n  );\n};\n\nCampaignTypeForm.propTypes = {\n  formik: PropTypes.object,\n  onCampaignTypeChange: PropTypes.func,\n};\n\nexport default CampaignTypeForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  FormControlLabel,\n  Grid,\n  Stack,\n  Switch,\n  TextField,\n  Typography,\n} from '@mui/material';\n\nconst TaskAndRewardsForm = ({ formik }) => {\n  const { values, errors, touched, getFieldProps } = formik;\n  return (\n    <Grid container spacing={3}>\n      <Grid item md={12}>\n        <Stack spacing={3}>\n          <Card>\n            <CardHeader title=\"Task Detail\" />\n            <CardContent>\n              <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 3, sm: 2 }}>\n                <TextField\n                  fullWidth\n                  size=\"small\"\n                  label=\"Task Name\"\n                  {...getFieldProps('name')}\n                  error={Boolean(touched.name && errors.name)}\n                  helperText={touched.name && errors.name}\n                />\n                <TextField\n                  select\n                  fullWidth\n                  size=\"small\"\n                  label=\"Task Type\"\n                  {...getFieldProps(`taskType`)}\n                  SelectProps={{ native: true }}\n                  error={Boolean(touched.taskType && errors.taskType)}\n                  helperText={touched.taskType && errors.taskType}\n                >\n                  {['Video', 'Video With Sound', 'Photo'].map((option) => (\n                    <option key={option} value={option}>\n                      {option}\n                    </option>\n                  ))}\n                </TextField>\n              </Stack>\n            </CardContent>\n          </Card>\n          <Card>\n            <CardHeader title=\"User Requirements\" />\n            <CardContent>\n              <Stack alignItems=\"center\" direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 3, sm: 2 }}>\n                <TextField\n                  fullWidth\n                  size=\"small\"\n                  label=\"Energy Costs Per User\"\n                  type=\"number\"\n                  InputProps={{ inputProps: { min: 0 } }}\n                  {...getFieldProps('energyPerUser')}\n                  error={Boolean(touched.energyPerUser && errors.energyPerUser)}\n                  helperText={touched.energyPerUser && errors.energyPerUser}\n                />\n              </Stack>\n            </CardContent>\n          </Card>\n          <Card>\n            <CardHeader title=\"Audience\" />\n            <CardContent>\n              <Stack alignItems=\"center\" direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 3, sm: 2 }}>\n                <TextField\n                  select\n                  fullWidth\n                  size=\"small\"\n                  label=\"Select Tier\"\n                  {...getFieldProps(`tier`)}\n                  SelectProps={{ native: true }}\n                  error={Boolean(touched.tier && errors.tier)}\n                  helperText={touched.tier && errors.tier}\n                >\n                  {['Public', 'Specific Group', 'Level2', 'Level3', 'Bonus Winner Task'].map((option) => (\n                    <option key={option} value={option}>\n                      {option}\n                    </option>\n                  ))}\n                </TextField>\n                {values.tier === 'Bonus Winner Task' && (\n                  <TextField\n                    select\n                    fullWidth\n                    size=\"small\"\n                    label=\"Associated Bonus\"\n                    {...getFieldProps(`associatedBonus`)}\n                    SelectProps={{ native: true }}\n                    error={Boolean(touched.associatedBonus && errors.associatedBonus)}\n                    helperText={touched.associatedBonus && errors.associatedBonus}\n                  >\n                    {['Bonus 1', 'Bonus 2', 'Bonus 3'].map((option) => (\n                      <option key={option} value={option}>\n                        {option}\n                      </option>\n                    ))}\n                  </TextField>\n                )}\n                <Stack direction=\"row\" justifyContent=\"space-around\">\n                  <Typography variant=\"caption\">\n                    In case of public, the task goes to the activity feed and all users can see\n                  </Typography>\n                  <FormControlLabel\n                    labelPlacement=\"start\"\n                    control={<Switch {...getFieldProps('isPublic')} checked={values.isPublic} />}\n                    label={<Typography variant=\"subtitle2\">Public</Typography>}\n                    sx={{ mx: 0, width: 1, justifyContent: 'center' }}\n                  />\n                </Stack>\n              </Stack>\n            </CardContent>\n          </Card>\n        </Stack>\n      </Grid>\n    </Grid>\n  );\n};\n\nTaskAndRewardsForm.propTypes = {\n  formik: PropTypes.object,\n};\n\nexport default TaskAndRewardsForm;\n","import React, { useCallback } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { FieldArray, getIn } from 'formik';\nimport { isValid as isValidDate } from 'date-fns';\n// material\nimport { styled } from '@mui/material/styles';\nimport { DateTimePicker } from '@mui/lab';\nimport {\n  Autocomplete,\n  Avatar,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Chip,\n  FormHelperText,\n  Grid,\n  Stack,\n  TextField,\n  Typography,\n} from '@mui/material';\n// components\nimport { UploadSingleFile } from '../../upload';\nimport DynamicFormItem from '../../DynamicFormItem';\n\nimport { PATH_DASHBOARD } from '../../../routes/paths';\n\nconst LabelStyle = styled(Typography)(({ theme }) => ({\n  ...theme.typography.subtitle2,\n  color: theme.palette.text.secondary,\n  marginBottom: theme.spacing(1),\n}));\n\nconst TaskDetailForm = ({ formik }) => {\n  const { values, errors, touched, getFieldProps, setFieldValue } = formik;\n\n  const handleCoverDrop = useCallback(\n    (acceptedFiles) => {\n      const file = acceptedFiles[0];\n      if (file) {\n        setFieldValue('headerImage', {\n          ...file,\n          preview: URL.createObjectURL(file),\n        });\n      }\n    },\n    [setFieldValue]\n  );\n\n  return (\n    <Grid container spacing={3}>\n      <Grid item xs={12} md={8}>\n        <Stack spacing={3}>\n          <Stack>\n            <LabelStyle>Header Image</LabelStyle>\n            <UploadSingleFile\n              maxSize={3145728}\n              accept=\"image/*\"\n              file={values.coverUrl}\n              onDrop={handleCoverDrop}\n              error={Boolean(touched.coverUrl && errors.coverUrl)}\n            />\n            {touched.coverUrl && errors.coverUrl && (\n              <FormHelperText error sx={{ px: 2 }}>\n                {touched.coverUrl && errors.coverUrl}\n              </FormHelperText>\n            )}\n          </Stack>\n\n          <Card>\n            <CardHeader title=\"Rewards\" />\n            <CardContent>\n              <Stack spacing={3}>\n                <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 3, sm: 2 }}>\n                  <TextField\n                    fullWidth\n                    size=\"small\"\n                    label=\"Total Budget\"\n                    type=\"number\"\n                    {...getFieldProps('totalBudget')}\n                    error={Boolean(touched.totalBudget && errors.totalBudget)}\n                    helperText={(touched.totalBudget && errors.totalBudget) || '50000 tokens available - View Detail'}\n                  />\n                  <TextField\n                    fullWidth\n                    size=\"small\"\n                    label=\"Per User\"\n                    {...getFieldProps('perUser')}\n                    error={Boolean(touched.perUser && errors.perUser)}\n                    helperText={\n                      (touched.perUser && errors.perUser) ||\n                      `Estimated user number: budget/tokenPerUser = ${\n                        Number.isNaN(values.totalBudget / values.perUser) ? 0 : values.totalBudget / values.perUser\n                      } users`\n                    }\n                  />\n                </Stack>\n\n                <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 3, sm: 2 }}>\n                  <TextField\n                    fullWidth\n                    size=\"small\"\n                    label=\"Star Per User\"\n                    type=\"number\"\n                    {...getFieldProps('starPerUser')}\n                    error={Boolean(touched.starPerUser && errors.starPerUser)}\n                    helperText={touched.starPerUser && errors.starPerUser}\n                  />\n                  <TextField\n                    fullWidth\n                    size=\"small\"\n                    label=\"Continue After Budget\"\n                    {...getFieldProps('continueAfterBudget')}\n                    error={Boolean(touched.continueAfterBudget && errors.continueAfterBudget)}\n                    helperText={touched.continueAfterBudget && errors.continueAfterBudget}\n                  />\n                </Stack>\n              </Stack>\n            </CardContent>\n          </Card>\n\n          <Stack>\n            <Stack direction=\"row\" justifyContent=\"space-between\" alignItems=\"center\">\n              <LabelStyle>Bonus Reward & Benefits</LabelStyle>\n              <Stack direction=\"row\" spacing={1} alignItems=\"center\">\n                <Button size=\"small\" variant=\"contained\" component={RouterLink} to={PATH_DASHBOARD.reward.create}>\n                  Add New\n                </Button>\n                <Button variant=\"contained\">Select More</Button>\n              </Stack>\n            </Stack>\n            <Stack direction=\"row\" spacing={1}>\n              {[1, 2, 3, 4, 5, 6].map((item, index) => (\n                <Avatar\n                  key={item + index}\n                  alt=\"bonus&rewards\"\n                  src=\"/static/mock-images/products/product_1.jpg\"\n                  sx={{ width: 64, height: 64 }}\n                />\n              ))}\n            </Stack>\n          </Stack>\n\n          <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 3, sm: 2 }}>\n            <TextField\n              fullWidth\n              multiline\n              rows={3}\n              size=\"small\"\n              label=\"Description\"\n              {...getFieldProps('description')}\n              error={Boolean(touched.description && errors.description)}\n              helperText={touched.description && errors.description}\n            />\n          </Stack>\n\n          <FieldArray\n            name=\"doList\"\n            render={(arrHelper) => {\n              const value = values.doList;\n              return (\n                <>\n                  {value.map((item, index) => {\n                    const fieldName = `doList.${index}`;\n                    return (\n                      <DynamicFormItem\n                        key={index}\n                        label={`Do ${index + 1}`}\n                        fieldProps={{ ...getFieldProps(fieldName) }}\n                        error={Boolean(getIn(touched, fieldName) && getIn(errors, fieldName))}\n                        helperText={getIn(touched, fieldName) && getIn(errors, fieldName)}\n                        isLastItem={index === value.length - 1}\n                        onAddClick={() => arrHelper.push('')}\n                        onRemoveClick={() => arrHelper.remove(index)}\n                      />\n                    );\n                  })}\n                </>\n              );\n            }}\n          />\n\n          <FieldArray\n            name=\"dontList\"\n            render={(arrHelper) => {\n              const value = values.dontList;\n              return (\n                <>\n                  {value.map((item, index) => {\n                    const fieldName = `dontList.${index}`;\n                    return (\n                      <DynamicFormItem\n                        key={index}\n                        label={`Don't ${index + 1}`}\n                        fieldProps={{ ...getFieldProps(fieldName) }}\n                        error={Boolean(getIn(touched, fieldName) && getIn(errors, fieldName))}\n                        helperText={getIn(touched, fieldName) && getIn(errors, fieldName)}\n                        isLastItem={index === value.length - 1}\n                        onAddClick={() => arrHelper.push('')}\n                        onRemoveClick={() => arrHelper.remove(index)}\n                      />\n                    );\n                  })}\n                </>\n              );\n            }}\n          />\n\n          <FieldArray\n            name=\"igCaptionQuestions\"\n            render={(arrHelper) => {\n              const value = values.igCaptionQuestions;\n              return (\n                <>\n                  {value.map((item, index) => {\n                    const fieldName = `igCaptionQuestions.${index}`;\n                    return (\n                      <DynamicFormItem\n                        key={index}\n                        label={`Instagram Caption Question ${index + 1}`}\n                        fieldProps={{ ...getFieldProps(fieldName) }}\n                        error={Boolean(getIn(touched, fieldName) && getIn(errors, fieldName))}\n                        helperText={getIn(touched, fieldName) && getIn(errors, fieldName)}\n                        isLastItem={index === value.length - 1}\n                        onAddClick={() => arrHelper.push('')}\n                        onRemoveClick={() => arrHelper.remove(index)}\n                      />\n                    );\n                  })}\n                </>\n              );\n            }}\n          />\n\n          <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 3, sm: 2 }}>\n            <TextField\n              fullWidth\n              size=\"small\"\n              label=\"Number of photo required\"\n              type=\"number\"\n              {...getFieldProps('noOfPhotoRequired')}\n              error={Boolean(touched.noOfPhotoRequired && errors.noOfPhotoRequired)}\n              helperText={touched.noOfPhotoRequired && errors.noOfPhotoRequired}\n            />\n            <TextField\n              fullWidth\n              size=\"small\"\n              label=\"Number of video required\"\n              type=\"number\"\n              {...getFieldProps('noOfVideoRequired')}\n              error={Boolean(touched.noOfVideoRequired && errors.noOfVideoRequired)}\n              helperText={touched.noOfVideoRequired && errors.noOfVideoRequired}\n            />\n          </Stack>\n\n          <Autocomplete\n            multiple\n            freeSolo\n            value={values.hashtags}\n            onChange={(event, newValue) => {\n              setFieldValue('hashtags', newValue);\n            }}\n            options={[]}\n            renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n                <Chip key={option} size=\"small\" label={option} {...getTagProps({ index })} />\n              ))\n            }\n            renderInput={(params) => <TextField {...params} label=\"Hashtags\" />}\n          />\n\n          <Autocomplete\n            multiple\n            freeSolo\n            value={values.mentions}\n            onChange={(event, newValue) => {\n              setFieldValue('mentions', newValue);\n            }}\n            options={[]}\n            renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n                <Chip key={option} size=\"small\" label={option} {...getTagProps({ index })} />\n              ))\n            }\n            renderInput={(params) => <TextField {...params} label=\"Mentions\" />}\n          />\n\n          <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 3, sm: 2 }}>\n            <DateTimePicker\n              label=\"Start date\"\n              value={values.startDate}\n              inputFormat=\"dd/MM/yyyy hh:mm a\"\n              onChange={(date) => (isValidDate(date) ? setFieldValue('startDate', date) : null)}\n              renderInput={(params) => (\n                <TextField\n                  {...params}\n                  size=\"small\"\n                  fullWidth\n                  error={Boolean(touched.startDate && errors.startDate)}\n                  helperText={touched.startDate && errors.startDate}\n                  sx={{ mb: 3 }}\n                />\n              )}\n            />\n            <DateTimePicker\n              label=\"End date\"\n              value={values.endDate}\n              inputFormat=\"dd/MM/yyyy hh:mm a\"\n              onChange={(date) => (isValidDate(date) ? setFieldValue('endDate', date) : null)}\n              renderInput={(params) => (\n                <TextField\n                  {...params}\n                  size=\"small\"\n                  fullWidth\n                  error={Boolean(touched.endDate && errors.endDate)}\n                  helperText={touched.endDate && errors.endDate}\n                  sx={{ mb: 3 }}\n                />\n              )}\n            />\n          </Stack>\n        </Stack>\n      </Grid>\n      <Grid item xs={12} md={4} sx={{ height: 'auto' }}>\n        <Card sx={{ p: 3, height: '100%' }}>Later Phase</Card>\n      </Grid>\n    </Grid>\n  );\n};\n\nTaskDetailForm.propTypes = {\n  formik: PropTypes.object,\n};\n\nexport default TaskDetailForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  FormControlLabel,\n  Grid,\n  Stack,\n  Switch,\n  TextField,\n  Typography,\n} from '@mui/material';\n\nconst ContestAndRewardsForm = ({ formik }) => {\n  const { values, errors, touched, getFieldProps } = formik;\n  return (\n    <Grid container spacing={3}>\n      <Grid item md={12}>\n        <Stack spacing={3}>\n          <Card>\n            <CardHeader title=\"Contest Detail\" />\n            <CardContent>\n              <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 3, sm: 2 }}>\n                <TextField\n                  fullWidth\n                  size=\"small\"\n                  label=\"Contest Name\"\n                  {...getFieldProps('name')}\n                  error={Boolean(touched.name && errors.name)}\n                  helperText={touched.name && errors.name}\n                />\n                <TextField\n                  select\n                  fullWidth\n                  size=\"small\"\n                  label=\"Task Type\"\n                  {...getFieldProps(`taskType`)}\n                  SelectProps={{ native: true }}\n                  error={Boolean(touched.taskType && errors.taskType)}\n                  helperText={touched.taskType && errors.taskType}\n                >\n                  {['Video', 'Video With Sound', 'Photo'].map((option) => (\n                    <option key={option} value={option}>\n                      {option}\n                    </option>\n                  ))}\n                </TextField>\n              </Stack>\n            </CardContent>\n          </Card>\n\n          <Card>\n            <CardHeader title=\"Audience\" />\n            <CardContent>\n              <Stack alignItems=\"center\" direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 3, sm: 2 }}>\n                <TextField\n                  select\n                  fullWidth\n                  size=\"small\"\n                  label=\"Select Tier\"\n                  {...getFieldProps(`tier`)}\n                  SelectProps={{ native: true }}\n                  error={Boolean(touched.tier && errors.tier)}\n                  helperText={touched.tier && errors.tier}\n                >\n                  {['Public', 'Specific Group', 'Level2', 'Level3', 'Bonus Winner Task'].map((option) => (\n                    <option key={option} value={option}>\n                      {option}\n                    </option>\n                  ))}\n                </TextField>\n                {values.tier === 'Bonus Winner Task' && (\n                  <TextField\n                    select\n                    fullWidth\n                    size=\"small\"\n                    label=\"Associated Bonus\"\n                    {...getFieldProps(`associatedBonus`)}\n                    SelectProps={{ native: true }}\n                    error={Boolean(touched.associatedBonus && errors.associatedBonus)}\n                    helperText={touched.associatedBonus && errors.associatedBonus}\n                  >\n                    {['Bonus 1', 'Bonus 2', 'Bonus 3'].map((option) => (\n                      <option key={option} value={option}>\n                        {option}\n                      </option>\n                    ))}\n                  </TextField>\n                )}\n                <Stack direction=\"row\" justifyContent=\"space-around\">\n                  <Typography variant=\"caption\">\n                    In case of Public, the contest goes to the activity feed and all users can see\n                  </Typography>\n                  <FormControlLabel\n                    labelPlacement=\"start\"\n                    control={<Switch {...getFieldProps('isPublic')} checked={values.isPublic} />}\n                    label={<Typography variant=\"subtitle2\">Public</Typography>}\n                    sx={{ mx: 0, width: 1, justifyContent: 'center' }}\n                  />\n                </Stack>\n              </Stack>\n            </CardContent>\n          </Card>\n        </Stack>\n      </Grid>\n    </Grid>\n  );\n};\n\nContestAndRewardsForm.propTypes = {\n  formik: PropTypes.object,\n};\n\nexport default ContestAndRewardsForm;\n","import React, { useCallback } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { FieldArray, getIn } from 'formik';\nimport { isValid as isValidDate } from 'date-fns';\n// material\nimport { styled } from '@mui/material/styles';\nimport { DateTimePicker } from '@mui/lab';\nimport {\n  Autocomplete,\n  Avatar,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Chip,\n  FormHelperText,\n  Grid,\n  Stack,\n  TextField,\n  Typography,\n} from '@mui/material';\n// components\nimport { UploadSingleFile } from '../../upload';\nimport DynamicFormItem from '../../DynamicFormItem';\nimport { PATH_DASHBOARD } from '../../../routes/paths';\n\nconst LabelStyle = styled(Typography)(({ theme }) => ({\n  ...theme.typography.subtitle2,\n  color: theme.palette.text.secondary,\n  marginBottom: theme.spacing(1),\n}));\n\nconst ContestDetailForm = ({ formik }) => {\n  const { values, errors, touched, getFieldProps, setFieldValue } = formik;\n\n  const handleCoverDrop = useCallback(\n    (acceptedFiles) => {\n      const file = acceptedFiles[0];\n      if (file) {\n        setFieldValue('headerImage', {\n          ...file,\n          preview: URL.createObjectURL(file),\n        });\n      }\n    },\n    [setFieldValue]\n  );\n\n  return (\n    <Grid container spacing={3}>\n      <Grid item xs={12} md={8}>\n        <Stack spacing={3}>\n          <Stack>\n            <LabelStyle>Header Image</LabelStyle>\n            <UploadSingleFile\n              maxSize={3145728}\n              accept=\"image/*\"\n              file={values.headerImage}\n              onDrop={handleCoverDrop}\n              error={Boolean(touched.headerImage && errors.headerImage)}\n            />\n            {touched.headerImage && errors.headerImage && (\n              <FormHelperText error sx={{ px: 2 }}>\n                {touched.headerImage && errors.headerImage}\n              </FormHelperText>\n            )}\n          </Stack>\n\n          <Card>\n            <CardHeader title=\"Rewards\" />\n            <CardContent>\n              <Stack spacing={3}>\n                <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 3, sm: 2 }}>\n                  <TextField\n                    fullWidth\n                    size=\"small\"\n                    label=\"Total Budget\"\n                    type=\"number\"\n                    {...getFieldProps('totalBudget')}\n                    error={Boolean(touched.totalBudget && errors.totalBudget)}\n                    helperText={touched.totalBudget && errors.totalBudget}\n                  />\n                  <TextField\n                    fullWidth\n                    size=\"small\"\n                    label=\"Winner Token\"\n                    {...getFieldProps('winnerToken')}\n                    error={Boolean(touched.winnerToken && errors.winnerToken)}\n                    helperText={(touched.winnerToken && errors.winnerToken) || '50000 tokens available - View Detail'}\n                  />\n                  <TextField\n                    fullWidth\n                    size=\"small\"\n                    label=\"Star Per User\"\n                    type=\"number\"\n                    {...getFieldProps('starPerUser')}\n                    error={Boolean(touched.starPerUser && errors.starPerUser)}\n                    helperText={touched.starPerUser && errors.starPerUser}\n                  />\n                </Stack>\n\n                <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 3, sm: 2 }}>\n                  <Grid container>\n                    <Grid item xs={12} md={4}>\n                      <TextField\n                        fullWidth\n                        size=\"small\"\n                        label=\"Continue After Budget\"\n                        {...getFieldProps('continueAfterBudget')}\n                        error={Boolean(touched.continueAfterBudget && errors.continueAfterBudget)}\n                        helperText={touched.continueAfterBudget && errors.continueAfterBudget}\n                      />\n                    </Grid>\n                  </Grid>\n                </Stack>\n              </Stack>\n            </CardContent>\n          </Card>\n\n          <Stack>\n            <Stack direction=\"row\" justifyContent=\"space-between\" alignItems=\"center\">\n              <LabelStyle>Bonus Reward & Benefits</LabelStyle>\n              <Stack direction=\"row\" spacing={1} alignItems=\"center\">\n                <Button size=\"small\" variant=\"contained\" component={RouterLink} to={PATH_DASHBOARD.reward.create}>\n                  Add New\n                </Button>\n                <Button variant=\"contained\">Select More</Button>\n              </Stack>\n            </Stack>\n            <Stack direction=\"row\" spacing={1}>\n              {[1, 2, 3, 4, 5, 6].map((item, index) => (\n                <Avatar\n                  key={item + index}\n                  alt=\"bonus&rewards\"\n                  src=\"/static/mock-images/products/product_1.jpg\"\n                  sx={{ width: 64, height: 64 }}\n                />\n              ))}\n            </Stack>\n          </Stack>\n\n          <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 3, sm: 2 }}>\n            <TextField\n              fullWidth\n              multiline\n              rows={3}\n              size=\"small\"\n              label=\"Description\"\n              {...getFieldProps('description')}\n              error={Boolean(touched.description && errors.description)}\n              helperText={touched.description && errors.description}\n            />\n          </Stack>\n\n          <FieldArray\n            name=\"doList\"\n            render={(arrHelper) => {\n              const value = values.doList;\n              return (\n                <>\n                  {value.map((item, index) => {\n                    const fieldName = `doList.${index}`;\n                    return (\n                      <DynamicFormItem\n                        key={index}\n                        label={`Do ${index + 1}`}\n                        fieldProps={{ ...getFieldProps(fieldName) }}\n                        error={Boolean(getIn(touched, fieldName) && getIn(errors, fieldName))}\n                        helperText={getIn(touched, fieldName) && getIn(errors, fieldName)}\n                        isLastItem={index === value.length - 1}\n                        onAddClick={() => arrHelper.push('')}\n                        onRemoveClick={() => arrHelper.remove(index)}\n                      />\n                    );\n                  })}\n                </>\n              );\n            }}\n          />\n\n          <FieldArray\n            name=\"dontList\"\n            render={(arrHelper) => {\n              const value = values.dontList;\n              return (\n                <>\n                  {value.map((item, index) => {\n                    const fieldName = `dontList.${index}`;\n                    return (\n                      <DynamicFormItem\n                        key={index}\n                        label={`Don't ${index + 1}`}\n                        fieldProps={{ ...getFieldProps(fieldName) }}\n                        error={Boolean(getIn(touched, fieldName) && getIn(errors, fieldName))}\n                        helperText={getIn(touched, fieldName) && getIn(errors, fieldName)}\n                        isLastItem={index === value.length - 1}\n                        onAddClick={() => arrHelper.push('')}\n                        onRemoveClick={() => arrHelper.remove(index)}\n                      />\n                    );\n                  })}\n                </>\n              );\n            }}\n          />\n\n          <FieldArray\n            name=\"igCaptionQuestions\"\n            render={(arrHelper) => {\n              const value = values.igCaptionQuestions;\n              return (\n                <>\n                  {value.map((item, index) => {\n                    const fieldName = `igCaptionQuestions.${index}`;\n                    return (\n                      <DynamicFormItem\n                        key={index}\n                        label={`Instagram Caption Question ${index + 1}`}\n                        fieldProps={{ ...getFieldProps(fieldName) }}\n                        error={Boolean(getIn(touched, fieldName) && getIn(errors, fieldName))}\n                        helperText={getIn(touched, fieldName) && getIn(errors, fieldName)}\n                        isLastItem={index === value.length - 1}\n                        onAddClick={() => arrHelper.push('')}\n                        onRemoveClick={() => arrHelper.remove(index)}\n                      />\n                    );\n                  })}\n                </>\n              );\n            }}\n          />\n\n          <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 3, sm: 2 }}>\n            <TextField\n              fullWidth\n              size=\"small\"\n              label=\"Number of photo required\"\n              type=\"number\"\n              {...getFieldProps('noOfPhotoRequired')}\n              error={Boolean(touched.noOfPhotoRequired && errors.noOfPhotoRequired)}\n              helperText={touched.noOfPhotoRequired && errors.noOfPhotoRequired}\n            />\n            <TextField\n              fullWidth\n              size=\"small\"\n              label=\"Number of video required\"\n              type=\"number\"\n              {...getFieldProps('noOfVideoRequired')}\n              error={Boolean(touched.noOfVideoRequired && errors.noOfVideoRequired)}\n              helperText={touched.noOfVideoRequired && errors.noOfVideoRequired}\n            />\n          </Stack>\n\n          <Autocomplete\n            multiple\n            freeSolo\n            value={values.hashtags}\n            onChange={(event, newValue) => {\n              setFieldValue('hashtags', newValue);\n            }}\n            options={[]}\n            renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n                <Chip key={option} size=\"small\" label={option} {...getTagProps({ index })} />\n              ))\n            }\n            renderInput={(params) => <TextField {...params} label=\"Hashtags\" />}\n          />\n\n          <Autocomplete\n            multiple\n            freeSolo\n            value={values.mentions}\n            onChange={(event, newValue) => {\n              setFieldValue('mentions', newValue);\n            }}\n            options={[]}\n            renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n                <Chip key={option} size=\"small\" label={option} {...getTagProps({ index })} />\n              ))\n            }\n            renderInput={(params) => <TextField {...params} label=\"Mentions\" />}\n          />\n\n          <Card>\n            <CardHeader title=\"Contest Dates\" titleTypographyProps={{ variant: 'subtitle2' }} />\n            <CardContent>\n              <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 3, sm: 2 }}>\n                <DateTimePicker\n                  label=\"Start date\"\n                  value={values.contestStartDate}\n                  inputFormat=\"dd/MM/yyyy hh:mm a\"\n                  onChange={(date) => (isValidDate(date) ? setFieldValue('contestStartDate', date) : null)}\n                  renderInput={(params) => (\n                    <TextField\n                      {...params}\n                      size=\"small\"\n                      fullWidth\n                      error={Boolean(touched.contestStartDate && errors.contestStartDate)}\n                      helperText={touched.contestStartDate && errors.contestStartDate}\n                      sx={{ mb: 3 }}\n                    />\n                  )}\n                />\n                <DateTimePicker\n                  label=\"End date\"\n                  value={values.contestEndDate}\n                  inputFormat=\"dd/MM/yyyy hh:mm a\"\n                  onChange={(date) => (isValidDate(date) ? setFieldValue('contestEndDate', date) : null)}\n                  renderInput={(params) => (\n                    <TextField\n                      {...params}\n                      size=\"small\"\n                      fullWidth\n                      error={Boolean(touched.contestEndDate && errors.contestEndDate)}\n                      helperText={touched.contestEndDate && errors.contestEndDate}\n                      sx={{ mb: 3 }}\n                    />\n                  )}\n                />\n              </Stack>\n            </CardContent>\n          </Card>\n\n          <Card>\n            <CardHeader title=\"Voting Dates\" titleTypographyProps={{ variant: 'subtitle2' }} />\n            <CardContent>\n              <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 3, sm: 2 }}>\n                <DateTimePicker\n                  label=\"Start date\"\n                  value={values.votingStartDate}\n                  inputFormat=\"dd/MM/yyyy hh:mm a\"\n                  onChange={(date) => (isValidDate(date) ? setFieldValue('votingStartDate', date) : null)}\n                  renderInput={(params) => (\n                    <TextField\n                      {...params}\n                      size=\"small\"\n                      fullWidth\n                      error={Boolean(touched.votingStartDate && errors.votingStartDate)}\n                      helperText={touched.votingStartDate && errors.votingStartDate}\n                      sx={{ mb: 3 }}\n                    />\n                  )}\n                />\n                <DateTimePicker\n                  label=\"End date\"\n                  value={values.votingEndDate}\n                  inputFormat=\"dd/MM/yyyy hh:mm a\"\n                  onChange={(date) => (isValidDate(date) ? setFieldValue('votingEndDate', date) : null)}\n                  renderInput={(params) => (\n                    <TextField\n                      {...params}\n                      size=\"small\"\n                      fullWidth\n                      error={Boolean(touched.votingEndDate && errors.votingEndDate)}\n                      helperText={touched.votingEndDate && errors.votingEndDate}\n                      sx={{ mb: 3 }}\n                    />\n                  )}\n                />\n              </Stack>\n            </CardContent>\n          </Card>\n\n          <Card>\n            <CardHeader title=\"Winner Dates\" titleTypographyProps={{ variant: 'subtitle2' }} />\n            <CardContent>\n              <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 3, sm: 2 }}>\n                <DateTimePicker\n                  label=\"Winner date\"\n                  value={values.winnerDate}\n                  inputFormat=\"dd/MM/yyyy hh:mm a\"\n                  onChange={(date) => (isValidDate(date) ? setFieldValue('winnerDate', date) : null)}\n                  renderInput={(params) => (\n                    <TextField\n                      {...params}\n                      size=\"small\"\n                      fullWidth\n                      error={Boolean(touched.winnerDate && errors.winnerDate)}\n                      helperText={touched.winnerDate && errors.winnerDate}\n                      sx={{ mb: 3 }}\n                    />\n                  )}\n                />\n              </Stack>\n            </CardContent>\n          </Card>\n        </Stack>\n      </Grid>\n      <Grid item xs={12} md={4} sx={{ height: 'auto' }}>\n        <Card sx={{ p: 3, height: '100%' }}>Later Phase</Card>\n      </Grid>\n    </Grid>\n  );\n};\n\nContestDetailForm.propTypes = {\n  formik: PropTypes.object,\n};\n\nexport default ContestDetailForm;\n","const colors = [\n  { value: 'blue', label: 'Blue' },\n  { value: 'red', label: 'Red' },\n  { value: 'green', label: 'Green' },\n  { value: 'purple', label: 'Purple' },\n];\n\nexport default colors;\n","import PropTypes from 'prop-types';\nimport { FieldArray, getIn } from 'formik';\nimport { isValid as isValidDate } from 'date-fns';\n\nimport { Icon } from '@iconify/react';\nimport PlusFill from '@iconify/icons-eva/plus-fill';\nimport { Add as AddIcon, Delete as DeleteIcon } from '@mui/icons-material';\nimport { DateTimePicker } from '@mui/lab';\nimport { Button, Card, CardContent, CardHeader, Grid, IconButton, Stack, TextField } from '@mui/material';\n\n// utils\nimport colors from '../../../utils/constants/colors';\n// ----------------------------------------------------------------------\n\nconst initialQuestion = {\n  title: '',\n  options: [''],\n};\n\nconst SurveyAndRewardsForm = ({ formik }) => {\n  const { errors, values, touched, setFieldValue, getFieldProps } = formik;\n\n  return (\n    <Grid container spacing={3}>\n      <Grid item md={12}>\n        <Stack spacing={3}>\n          <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 3, sm: 2 }}>\n            <TextField\n              fullWidth\n              size=\"small\"\n              label=\"Name\"\n              {...getFieldProps('name')}\n              error={Boolean(touched.name && errors.name)}\n              helperText={touched.name && errors.name}\n            />\n          </Stack>\n\n          <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 3, sm: 2 }}>\n            <TextField\n              fullWidth\n              multiline\n              rows={3}\n              size=\"small\"\n              label=\"Description\"\n              {...getFieldProps('description')}\n              error={Boolean(touched.description && errors.description)}\n              helperText={touched.description && errors.description}\n            />\n          </Stack>\n\n          <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 3, sm: 2 }}>\n            <TextField\n              fullWidth\n              select\n              size=\"small\"\n              label=\"Percentage Color\"\n              {...getFieldProps('percentageColor')}\n              SelectProps={{ native: true }}\n              error={Boolean(touched.percentageColor && errors.percentageColor)}\n              helperText={touched.percentageColor && errors.percentageColor}\n            >\n              <option value=\"\" />\n              {colors.map((color) => (\n                <option value={color.value} key={color.value}>\n                  {color.label}\n                </option>\n              ))}\n            </TextField>\n            <TextField\n              fullWidth\n              size=\"small\"\n              label=\"Star Per User\"\n              type=\"number\"\n              {...getFieldProps('starPerUser')}\n              error={Boolean(touched.starPerUser && errors.starPerUser)}\n              helperText={touched.starPerUser && errors.starPerUser}\n            />\n          </Stack>\n\n          <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 3, sm: 2 }}>\n            <DateTimePicker\n              label=\"Start date\"\n              value={values.startDate}\n              inputFormat=\"dd/MM/yyyy hh:mm a\"\n              onChange={(date) => (isValidDate(date) ? setFieldValue('startDate', date) : null)}\n              renderInput={(params) => (\n                <TextField\n                  {...params}\n                  size=\"small\"\n                  fullWidth\n                  error={Boolean(touched.startDate && errors.startDate)}\n                  helperText={touched.startDate && errors.startDate}\n                  sx={{ mb: 3 }}\n                />\n              )}\n            />\n            <DateTimePicker\n              label=\"End date\"\n              value={values.endDate}\n              inputFormat=\"dd/MM/yyyy hh:mm a\"\n              onChange={(date) => (isValidDate(date) ? setFieldValue('endDate', date) : null)}\n              renderInput={(params) => (\n                <TextField\n                  {...params}\n                  size=\"small\"\n                  fullWidth\n                  error={Boolean(touched.endDate && errors.endDate)}\n                  helperText={touched.endDate && errors.endDate}\n                  sx={{ mb: 3 }}\n                />\n              )}\n            />\n          </Stack>\n\n          <FieldArray\n            name=\"surveyQuestions\"\n            render={(questionArrayHelpers) => (\n              <Card>\n                <CardHeader\n                  title=\"Questions\"\n                  action={\n                    <Button\n                      variant=\"contained\"\n                      startIcon={<Icon icon={PlusFill} />}\n                      onClick={() => questionArrayHelpers.push(initialQuestion)}\n                    >\n                      Add New\n                    </Button>\n                  }\n                />\n                <CardContent>\n                  <Stack spacing={2}>\n                    {values.surveyQuestions.map((question, questionIndex) => {\n                      console.log('question index: ', questionIndex);\n                      return (\n                        <Card key={questionIndex}>\n                          <CardHeader\n                            title={`Question ${questionIndex + 1}`}\n                            titleTypographyProps={{ variant: 'h8' }}\n                          />\n                          <CardContent>\n                            <Stack spacing={1}>\n                              <TextField\n                                fullWidth\n                                size=\"small\"\n                                label=\"Title\"\n                                {...getFieldProps(`surveyQuestions.${questionIndex}.title`)}\n                                error={Boolean(\n                                  getIn(touched, `surveyQuestions.${questionIndex}.title`) &&\n                                    getIn(errors, `surveyQuestions.${questionIndex}.title`)\n                                )}\n                                helperText={\n                                  getIn(touched, `surveyQuestions.${questionIndex}.title`) &&\n                                  getIn(errors, `surveyQuestions.${questionIndex}.title`)\n                                }\n                              />\n                              <FieldArray\n                                name={`surveyQuestions.${questionIndex}.options`}\n                                render={(optArrayHelpers) => (\n                                  <>\n                                    {values.surveyQuestions[questionIndex].options.map((option, optionIndex) => {\n                                      const optionFieldName = `surveyQuestions.${questionIndex}.options.${optionIndex}`;\n                                      return (\n                                        <Stack key={optionIndex} direction=\"row\" spacing={1}>\n                                          <TextField\n                                            fullWidth\n                                            size=\"small\"\n                                            label={`Option ${optionIndex + 1}`}\n                                            {...getFieldProps(optionFieldName)}\n                                            error={Boolean(\n                                              getIn(touched, optionFieldName) && getIn(errors, optionFieldName)\n                                            )}\n                                            helperText={\n                                              getIn(touched, optionFieldName) && getIn(errors, optionFieldName)\n                                            }\n                                          />\n                                          <IconButton\n                                            color=\"error\"\n                                            aria-label=\"delete\"\n                                            onClick={() => optArrayHelpers.remove(optionIndex)}\n                                          >\n                                            <DeleteIcon />\n                                          </IconButton>\n                                        </Stack>\n                                      );\n                                    })}\n                                    <IconButton\n                                      color=\"primary\"\n                                      aria-label=\"plus\"\n                                      onClick={() => optArrayHelpers.push('')}\n                                    >\n                                      <AddIcon />\n                                    </IconButton>\n                                  </>\n                                )}\n                              />\n                            </Stack>\n                          </CardContent>\n                        </Card>\n                      );\n                    })}\n                  </Stack>\n                </CardContent>\n              </Card>\n            )}\n          />\n        </Stack>\n      </Grid>\n    </Grid>\n  );\n};\n\nSurveyAndRewardsForm.propTypes = {\n  formik: PropTypes.object,\n};\n\nexport default SurveyAndRewardsForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  FormControlLabel,\n  Grid,\n  Stack,\n  Switch,\n  TextField,\n  Typography,\n} from '@mui/material';\n\nconst WatchAdForm = ({ formik }) => {\n  const { values, errors, touched, getFieldProps } = formik;\n  return (\n    <Grid container spacing={3}>\n      <Grid item md={12}>\n        <Stack spacing={3}>\n          <Card>\n            <CardHeader title=\"Task Detail\" />\n            <CardContent>\n              <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 3, sm: 2 }}>\n                <TextField\n                  // fullWidth\n                  size=\"small\"\n                  label=\"Task Name\"\n                  {...getFieldProps('name')}\n                  error={Boolean(touched.name && errors.name)}\n                  helperText={touched.name && errors.name}\n                />\n                {/* <TextField\n                  select\n                  fullWidth\n                  size=\"small\"\n                  label=\"Task Type\"\n                  {...getFieldProps(`taskType`)}\n                  SelectProps={{ native: true }}\n                  error={Boolean(touched.taskType && errors.taskType)}\n                  helperText={touched.taskType && errors.taskType}\n                >\n                  {['Video', 'Video With Sound'].map((option) => (\n                    <option key={option} value={option}>\n                      {option}\n                    </option>\n                  ))}\n                </TextField> */}\n              </Stack>\n            </CardContent>\n          </Card>\n\n          <Card>\n            <CardHeader title=\"Rewards\" />\n            <CardContent>\n              <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 3, sm: 2 }}>\n                <TextField\n                  size=\"small\"\n                  label=\"Total Budget\"\n                  type=\"number\"\n                  {...getFieldProps('totalBudget')}\n                  error={Boolean(touched.totalBudget && errors.totalBudget)}\n                  helperText={(touched.totalBudget && errors.totalBudget) || '50000 tokens available - View Detail'}\n                />\n                <TextField\n                  size=\"small\"\n                  label=\"Per User\"\n                  {...getFieldProps('perUser')}\n                  error={Boolean(touched.perUser && errors.perUser)}\n                  helperText={\n                    (touched.perUser && errors.perUser) ||\n                    `Estimated user number: budget/tokenPerUser = ${\n                      Number.isNaN(values.totalBudget / values.perUser) ? 0 : values.totalBudget / values.perUser\n                    } users`\n                  }\n                />\n                <TextField\n                  size=\"small\"\n                  label=\"Star Per User\"\n                  type=\"number\"\n                  {...getFieldProps('starPerUser')}\n                  error={Boolean(touched.starPerUser && errors.starPerUser)}\n                  helperText={touched.starPerUser && errors.starPerUser}\n                />\n              </Stack>\n            </CardContent>\n          </Card>\n\n          <Card>\n            <CardHeader title=\"Audience\" />\n            <CardContent>\n              <Stack alignItems=\"center\" direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 3, sm: 2 }}>\n                <TextField\n                  select\n                  fullWidth\n                  size=\"small\"\n                  label=\"Select Tier\"\n                  {...getFieldProps(`tier`)}\n                  SelectProps={{ native: true }}\n                  error={Boolean(touched.tier && errors.tier)}\n                  helperText={touched.tier && errors.tier}\n                >\n                  {['Public', 'Specific Group', 'Level2', 'Level3', 'Bonus Winner Task'].map((option) => (\n                    <option key={option} value={option}>\n                      {option}\n                    </option>\n                  ))}\n                </TextField>\n                {values.tier === 'Bonus Winner Task' && (\n                  <TextField\n                    select\n                    fullWidth\n                    size=\"small\"\n                    label=\"Associated Bonus\"\n                    {...getFieldProps(`associatedBonus`)}\n                    SelectProps={{ native: true }}\n                    error={Boolean(touched.associatedBonus && errors.associatedBonus)}\n                    helperText={touched.associatedBonus && errors.associatedBonus}\n                  >\n                    {['Bonus 1', 'Bonus 2', 'Bonus 3'].map((option) => (\n                      <option key={option} value={option}>\n                        {option}\n                      </option>\n                    ))}\n                  </TextField>\n                )}\n                <Stack direction=\"row\" justifyContent=\"space-around\">\n                  <Typography variant=\"caption\">\n                    In case of public, the task goes to the activity feed and all users can see\n                  </Typography>\n                  <FormControlLabel\n                    labelPlacement=\"start\"\n                    control={<Switch {...getFieldProps('isPublic')} checked={values.isPublic} />}\n                    label={<Typography variant=\"subtitle2\">Public</Typography>}\n                    sx={{ mx: 0, width: 1, justifyContent: 'center' }}\n                  />\n                </Stack>\n              </Stack>\n            </CardContent>\n          </Card>\n        </Stack>\n      </Grid>\n    </Grid>\n  );\n};\n\nWatchAdForm.propTypes = {\n  formik: PropTypes.object,\n};\n\nexport default WatchAdForm;\n","import React, { useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { isValid as isValidDate } from 'date-fns';\n// material\nimport { styled } from '@mui/material/styles';\nimport { DateTimePicker } from '@mui/lab';\nimport { Card, FormHelperText, Grid, Stack, TextField, Typography } from '@mui/material';\n// components\nimport { UploadAvatar, UploadSingleFile } from '../../upload';\n\nimport { fData } from '../../../utils/formatNumber';\n\nconst LabelStyle = styled(Typography)(({ theme }) => ({\n  ...theme.typography.subtitle2,\n  color: theme.palette.text.secondary,\n  marginBottom: theme.spacing(1),\n}));\n\nconst WatchAdDetailForm = ({ formik }) => {\n  const { values, errors, touched, setFieldValue } = formik;\n\n  const handleVideoDrop = useCallback(\n    (acceptedFiles) => {\n      const file = acceptedFiles[0];\n      if (file) {\n        setFieldValue('adVideo', {\n          ...file,\n          preview: URL.createObjectURL(file),\n        });\n      }\n    },\n    [setFieldValue]\n  );\n\n  const handleThumbnailDrop = useCallback(\n    (acceptedFiles) => {\n      const file = acceptedFiles[0];\n      if (file) {\n        setFieldValue('adVideoThumbnail', {\n          ...file,\n          preview: URL.createObjectURL(file),\n        });\n      }\n    },\n    [setFieldValue]\n  );\n\n  return (\n    <Grid container spacing={3}>\n      <Grid item xs={12} md={8}>\n        <Stack spacing={3}>\n          <Stack>\n            <LabelStyle>Upload Ad Video</LabelStyle>\n            <UploadSingleFile\n              maxSize={3145728}\n              accept=\"video/*\"\n              file={values.adVideo}\n              onDrop={handleVideoDrop}\n              error={Boolean(touched.adVideo && errors.adVideo)}\n            />\n            {touched.adVideo && errors.adVideo && (\n              <FormHelperText error sx={{ px: 2 }}>\n                {touched.adVideo && errors.adVideo}\n              </FormHelperText>\n            )}\n          </Stack>\n          <Stack>\n            <LabelStyle>Video Thumbnail</LabelStyle>\n            <UploadAvatar\n              accept=\"image/*\"\n              file={values.adVideoThumbnail}\n              maxSize={3145728}\n              onDrop={handleThumbnailDrop}\n              error={Boolean(touched.adVideoThumbnail && errors.adVideoThumbnail)}\n              caption={\n                <Typography\n                  variant=\"caption\"\n                  sx={{\n                    mt: 2,\n                    mx: 'auto',\n                    display: 'block',\n                    textAlign: 'center',\n                    color: 'text.secondary',\n                  }}\n                >\n                  Allowed *.jpeg, *.jpg, *.png, *.gif\n                  <br /> max size of {fData(3145728)}\n                </Typography>\n              }\n            />\n            <FormHelperText error sx={{ px: 2, textAlign: 'center' }}>\n              {touched.adVideoThumbnail && errors.adVideoThumbnail}\n            </FormHelperText>\n          </Stack>\n\n          <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 3, sm: 2 }}>\n            <DateTimePicker\n              label=\"Start date\"\n              value={values.startDate}\n              inputFormat=\"dd/MM/yyyy hh:mm a\"\n              onChange={(date) => (isValidDate(date) ? setFieldValue('startDate', date) : null)}\n              renderInput={(params) => (\n                <TextField\n                  {...params}\n                  size=\"small\"\n                  fullWidth\n                  error={Boolean(touched.startDate && errors.startDate)}\n                  helperText={touched.startDate && errors.startDate}\n                  sx={{ mb: 3 }}\n                />\n              )}\n            />\n            <DateTimePicker\n              label=\"End date\"\n              value={values.endDate}\n              inputFormat=\"dd/MM/yyyy hh:mm a\"\n              onChange={(date) => (isValidDate(date) ? setFieldValue('endDate', date) : null)}\n              renderInput={(params) => (\n                <TextField\n                  {...params}\n                  size=\"small\"\n                  fullWidth\n                  error={Boolean(touched.endDate && errors.endDate)}\n                  helperText={touched.endDate && errors.endDate}\n                  sx={{ mb: 3 }}\n                />\n              )}\n            />\n          </Stack>\n        </Stack>\n      </Grid>\n      <Grid item xs={12} md={4} sx={{ height: 'auto' }}>\n        <Card sx={{ p: 3, height: '100%' }}>Later Phase</Card>\n      </Grid>\n    </Grid>\n  );\n};\n\nWatchAdDetailForm.propTypes = {\n  formik: PropTypes.object,\n};\n\nexport default WatchAdDetailForm;\n","import * as Yup from 'yup';\nimport PropTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport { useSnackbar } from 'notistack';\nimport { useNavigate } from 'react-router-dom';\nimport { Form, FormikProvider, useFormik } from 'formik';\n\n// material\nimport { LoadingButton } from '@mui/lab';\nimport { Box, Card, Grid, Stack, Button } from '@mui/material';\n// paths\nimport { PATH_DASHBOARD } from '../../routes/paths';\n// validations\nimport {\n  CampaignTypeSchema,\n  TaskAndRewardsSchema,\n  TaskDetailSchema,\n  ContestAndRewardsSchema,\n  ContestDetailSchema,\n  SurveyAndRewardsSchema,\n  WatchAdSchema,\n  WatchAdDetailSchema,\n} from './validations';\n// components\nimport Steps from '../Steps';\nimport CampaignTypeForm from './CampaignTypeForm';\nimport TaskAndRewardsForm from './task/TaskAndRewardsForm';\nimport TaskDetailForm from './task/TaskDetailForm';\nimport ContestAndRewardsForm from './contest/ContestAndRewardsForm';\nimport ContestDetailForm from './contest/ContestDetailForm';\nimport SurveyAndRewardsForm from './survey/SurveyAndRewardsForm';\nimport WatchAdForm from './watch-ad/WatchAdForm';\nimport WatchAdDetailForm from './watch-ad/WatchAdDetailForm';\n\n// ----------------------------------------------------------------------\n\nconst STEPS = ['Campaign Type', 'Task & Rewards', 'Task Detail'];\nconst initialSurveyQuestion = {\n  title: '',\n  options: [''],\n};\n\nfunction CampaignNewForm({ isEdit, currentCampaign }) {\n  const navigate = useNavigate();\n  const { enqueueSnackbar } = useSnackbar();\n  const [activeStep, setActiveStep] = useState(0);\n  const [campaignType, setCampaignType] = useState('Task');\n\n  // const VALIDATION_SCHEMAS = [CampaignTypeSchema, TaskAndRewardsSchema, TaskDetailSchema];\n\n  const VALIDATION_SCHEMAS = {\n    0: {\n      Task: CampaignTypeSchema,\n      Contest: CampaignTypeSchema,\n      Survey: CampaignTypeSchema,\n      'Watch Ad': CampaignTypeSchema,\n      Campaign: CampaignTypeSchema,\n    },\n    1: {\n      Task: TaskAndRewardsSchema,\n      Contest: ContestAndRewardsSchema,\n      Survey: SurveyAndRewardsSchema,\n      'Watch Ad': WatchAdSchema,\n      Campaign: Yup.object(),\n    },\n    2: {\n      Task: TaskDetailSchema,\n      Contest: ContestDetailSchema,\n      Survey: Yup.object(),\n      'Watch Ad': WatchAdDetailSchema,\n      Campaign: Yup.object(),\n    },\n  };\n\n  const isLastStep = () => activeStep === STEPS.length - 1;\n\n  const handlePrevStep = () => setActiveStep((prev) => prev - 1);\n\n  const handleNextStep = () => setActiveStep((prev) => prev + 1);\n\n  const formik = useFormik({\n    enableReinitialize: true,\n    initialValues: {\n      brand: currentCampaign?.brand || '',\n      campaignType: currentCampaign?.campaignType || 'Task',\n      name: currentCampaign?.name || '',\n      taskType: currentCampaign?.taskType || 'Video',\n      totalBudget: currentCampaign?.totalBudget || undefined,\n      perUser: currentCampaign?.perUser || '',\n      starPerUser: currentCampaign?.starPerUser || undefined,\n      continueAfterBudget: currentCampaign?.continueAfterBudget || '',\n      tier: currentCampaign?.tier || 'Public',\n      associatedBonus: currentCampaign?.associatedBonus || 'Bonus 1',\n      isPublic: currentCampaign?.isPublic || false,\n      headerImage: currentCampaign?.headerImage || undefined,\n      doList: currentCampaign?.doList || [''],\n      dontList: currentCampaign?.dontList || [''],\n      igCaptionQuestions: currentCampaign?.igCaptionQuestions || [''],\n      noOfPhotoRequired: currentCampaign?.noOfPhotoRequired || undefined,\n      noOfVideoRequired: currentCampaign?.noOfVideoRequired || undefined,\n      hashtags: currentCampaign?.hashtags || [],\n      mentions: currentCampaign?.mentions || [],\n      startDate: currentCampaign?.startDate ? new Date(currentCampaign.startDate) : null,\n      endDate: currentCampaign?.endDate ? new Date(currentCampaign.endDate) : null,\n      surveyQuestions: currentCampaign?.surveyQuestions || [initialSurveyQuestion],\n      percentageColor: currentCampaign?.percentageColor || '',\n      adVideo: currentCampaign?.adVideo || null,\n      adVideoThumbnail: currentCampaign?.adVideoThumbnail || null,\n      energyPerUser: currentCampaign?.starPerUser || undefined,\n    },\n    validationSchema: VALIDATION_SCHEMAS[activeStep][campaignType],\n    onSubmit: async (values, { setSubmitting, resetForm, setErrors }) => {\n      if (isLastStep()) {\n        try {\n          alert(JSON.stringify(values));\n          resetForm();\n          setSubmitting(false);\n          enqueueSnackbar(!isEdit ? 'Create success' : 'Update success', { variant: 'success' });\n          navigate(PATH_DASHBOARD.campaign.list.all);\n        } catch (error) {\n          console.error(error);\n          setSubmitting(false);\n          setErrors(error);\n        }\n      } else {\n        handleNextStep();\n      }\n    },\n  });\n\n  const { errors, values, handleSubmit, isSubmitting } = formik;\n\n  const renderForm = () => {\n    const forms = {\n      0: {\n        Task: <CampaignTypeForm formik={formik} onCampaignTypeChange={(val) => setCampaignType(val)} />,\n        Contest: <CampaignTypeForm formik={formik} onCampaignTypeChange={(val) => setCampaignType(val)} />,\n        Survey: <CampaignTypeForm formik={formik} onCampaignTypeChange={(val) => setCampaignType(val)} />,\n        'Watch Ad': <CampaignTypeForm formik={formik} onCampaignTypeChange={(val) => setCampaignType(val)} />,\n        Campaign: <CampaignTypeForm formik={formik} onCampaignTypeChange={(val) => setCampaignType(val)} />,\n      },\n      1: {\n        Task: <TaskAndRewardsForm formik={formik} />,\n        Contest: <ContestAndRewardsForm formik={formik} />,\n        Survey: <SurveyAndRewardsForm formik={formik} />,\n        'Watch Ad': <WatchAdForm formik={formik} />,\n        Campaign: <div>Campaign Form</div>,\n      },\n      2: {\n        Task: <TaskDetailForm formik={formik} />,\n        Contest: <ContestDetailForm formik={formik} />,\n        Survey: <div>Survey Detail Form</div>,\n        'Watch Ad': <WatchAdDetailForm formik={formik} />,\n        Campaign: <div>Campaign Form</div>,\n      },\n    };\n    return forms[activeStep][campaignType];\n  };\n\n  console.log('Active Step: ', activeStep);\n  console.log('*** ', values, errors);\n\n  return (\n    <FormikProvider value={formik}>\n      <Form noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\n        <Grid container justifyContent=\"center\">\n          <Grid item xs={12} md={8} sx={{ mb: 5 }}>\n            <Steps steps={STEPS} activeStep={activeStep} />\n          </Grid>\n        </Grid>\n\n        <Card sx={{ p: 3 }}>\n          <Stack spacing={3}>\n            {renderForm()}\n            <Box sx={{ mt: 3, display: 'flex', justifyContent: 'flex-end' }}>\n              {activeStep !== 0 && (\n                <Button\n                  sx={{ mr: 2 }}\n                  variant=\"outlined\"\n                  onClick={isLastStep() ? () => console.log('Draft Clicked') : handlePrevStep}\n                >\n                  {isLastStep() ? 'Draft' : 'Back'}\n                </Button>\n              )}\n              <LoadingButton type=\"submit\" variant=\"contained\" loading={isSubmitting}>\n                {isLastStep() ? 'Setup Complete' : 'Next'}\n              </LoadingButton>\n            </Box>\n          </Stack>\n        </Card>\n      </Form>\n    </FormikProvider>\n  );\n}\n\nCampaignNewForm.propTypes = {\n  isEdit: PropTypes.bool,\n  currentCampaign: PropTypes.object,\n};\n\nexport default CampaignNewForm;\n","import { useParams, useLocation } from 'react-router-dom';\n// material\nimport { Container } from '@mui/material';\n// routes\nimport { PATH_DASHBOARD } from '../routes/paths';\n// hooks\nimport useSettings from '../hooks/useSettings';\n// components\nimport Page from '../components/Page';\nimport HeaderBreadcrumbs from '../components/HeaderBreadcrumbs';\nimport CampaignNewForm from '../components/campaign/CampaignNewForm';\n\n// ----------------------------------------------------------------------\n\nfunction CampaignCreate() {\n  const { themeStretch } = useSettings();\n  const { pathname } = useLocation();\n  const { name } = useParams();\n  const isEdit = pathname.includes('edit');\n\n  const currentCampaign = {};\n\n  return (\n    <Page title=\"Campaign: Create a new campaign\">\n      <Container maxWidth={themeStretch ? false : 'lg'}>\n        <HeaderBreadcrumbs\n          heading={!isEdit ? 'Create Campaign' : 'Edit Campaign'}\n          links={[\n            { name: 'Campaign', href: PATH_DASHBOARD.campaign.list.all },\n            { name: !isEdit ? 'Create Campaign' : name },\n          ]}\n        />\n        <CampaignNewForm isEdit={isEdit} currentCampaign={currentCampaign} />\n      </Container>\n    </Page>\n  );\n}\n\nexport default CampaignCreate;\n","import { replace } from 'lodash';\nimport numeral from 'numeral';\n\n// ----------------------------------------------------------------------\n\nexport function fCurrency(number) {\n  return numeral(number).format(Number.isInteger(number) ? '$0,0' : '$0,0.00');\n}\n\nexport function fPercent(number) {\n  return numeral(number / 100).format('0.0%');\n}\n\nexport function fNumber(number) {\n  return numeral(number).format();\n}\n\nexport function fShortenNumber(number) {\n  return replace(numeral(number).format('0.00a'), '.00', '');\n}\n\nexport function fData(number) {\n  return numeral(number).format('0.0 b');\n}\n","import { isString } from 'lodash';\nimport PropTypes from 'prop-types';\n// material\nimport { Box, Typography, Link, Stack } from '@mui/material';\n//\nimport { MBreadcrumbs } from './@material-extend';\n\n// ----------------------------------------------------------------------\n\nHeaderBreadcrumbs.propTypes = {\n  links: PropTypes.array,\n  action: PropTypes.node,\n  heading: PropTypes.string.isRequired,\n  moreLink: PropTypes.oneOfType([PropTypes.string, PropTypes.array]),\n  sx: PropTypes.object,\n};\n\nexport default function HeaderBreadcrumbs({ links, action, heading, moreLink = '' || [], sx, ...other }) {\n  return (\n    <Stack sx={sx} mb={5} spacing={2}>\n      <Stack direction=\"row\" alignItems=\"center\">\n        <Box sx={{ flexGrow: 1 }}>\n          <Typography variant=\"h4\" gutterBottom>\n            {heading}\n          </Typography>\n          <MBreadcrumbs links={links} {...other} />\n        </Box>\n\n        {action && <Box sx={{ flexShrink: 0 }}>{action}</Box>}\n      </Stack>\n\n      {isString(moreLink) ? (\n        <Link href={moreLink} target=\"_blank\" variant=\"body2\">\n          {moreLink}\n        </Link>\n      ) : (\n        moreLink.map((href) => (\n          <Link noWrap key={href} href={href} variant=\"body2\" target=\"_blank\" sx={{ display: 'flex' }}>\n            {href}\n          </Link>\n        ))\n      )}\n    </Stack>\n  );\n}\n","var data = {\n\t\"body\": \"<path fill=\\\"currentColor\\\" d=\\\"M19 11h-6V5a1 1 0 0 0-2 0v6H5a1 1 0 0 0 0 2h6v6a1 1 0 0 0 2 0v-6h6a1 1 0 0 0 0-2z\\\"/>\",\n\t\"width\": 24,\n\t\"height\": 24\n};\nexports.__esModule = true;\nexports.default = data;\n","export const phoneRegExp =\n  /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/;\nexport const addressRegExp = /^[a-zA-Z0-9 ]*$/;\nexport const nameRegExp = /^[a-zA-Z ]*$/;\n","import { isString } from 'lodash';\nimport PropTypes from 'prop-types';\nimport { Icon } from '@iconify/react';\nimport { useDropzone } from 'react-dropzone';\nimport fileFill from '@iconify/icons-eva/file-fill';\nimport closeFill from '@iconify/icons-eva/close-fill';\nimport { motion, AnimatePresence } from 'framer-motion';\n// material\nimport { alpha, styled } from '@mui/material/styles';\nimport {\n  Box,\n  List,\n  Stack,\n  Paper,\n  Button,\n  ListItem,\n  Typography,\n  ListItemIcon,\n  ListItemText,\n  ListItemSecondaryAction,\n} from '@mui/material';\n// utils\nimport { fData } from '../../utils/formatNumber';\n//\nimport { MIconButton } from '../@material-extend';\nimport { varFadeInRight } from '../animate';\nimport { UploadIllustration } from '../../assets';\n\n// ----------------------------------------------------------------------\n\nconst DropZoneStyle = styled('div')(({ theme }) => ({\n  outline: 'none',\n  display: 'flex',\n  textAlign: 'center',\n  alignItems: 'center',\n  flexDirection: 'column',\n  justifyContent: 'center',\n  padding: theme.spacing(5, 1),\n  borderRadius: theme.shape.borderRadius,\n  backgroundColor: theme.palette.background.neutral,\n  border: `1px dashed ${theme.palette.grey[500_32]}`,\n  '&:hover': { opacity: 0.72, cursor: 'pointer' },\n  [theme.breakpoints.up('md')]: { textAlign: 'left', flexDirection: 'row' },\n}));\n\n// ----------------------------------------------------------------------\n\nUploadMultiFile.propTypes = {\n  error: PropTypes.bool,\n  showPreview: PropTypes.bool,\n  files: PropTypes.array,\n  onRemove: PropTypes.func,\n  onRemoveAll: PropTypes.func,\n  sx: PropTypes.object,\n};\n\nexport default function UploadMultiFile({ error, showPreview = false, files, onRemove, onRemoveAll, sx, ...other }) {\n  const hasFile = files.length > 0;\n\n  const { getRootProps, getInputProps, isDragActive, isDragReject, fileRejections } = useDropzone({\n    ...other,\n  });\n\n  const ShowRejectionItems = () => (\n    <Paper\n      variant=\"outlined\"\n      sx={{\n        py: 1,\n        px: 2,\n        mt: 3,\n        borderColor: 'error.light',\n        bgcolor: (theme) => alpha(theme.palette.error.main, 0.08),\n      }}\n    >\n      {fileRejections.map(({ file, errors }) => {\n        const { path, size } = file;\n        return (\n          <Box key={path} sx={{ my: 1 }}>\n            <Typography variant=\"subtitle2\" noWrap>\n              {path} - {fData(size)}\n            </Typography>\n            {errors.map((e) => (\n              <Typography key={e.code} variant=\"caption\" component=\"p\">\n                - {e.message}\n              </Typography>\n            ))}\n          </Box>\n        );\n      })}\n    </Paper>\n  );\n\n  return (\n    <Box sx={{ width: '100%', ...sx }}>\n      <DropZoneStyle\n        {...getRootProps()}\n        sx={{\n          ...(isDragActive && { opacity: 0.72 }),\n          ...((isDragReject || error) && {\n            color: 'error.main',\n            borderColor: 'error.light',\n            bgcolor: 'error.lighter',\n          }),\n        }}\n      >\n        <input {...getInputProps()} />\n\n        <UploadIllustration sx={{ width: 220 }} />\n\n        <Box sx={{ p: 3, ml: { md: 2 } }}>\n          <Typography gutterBottom variant=\"h5\">\n            Drop or Select file\n          </Typography>\n\n          <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\n            Drop files here or click&nbsp;\n            <Typography variant=\"body2\" component=\"span\" sx={{ color: 'primary.main', textDecoration: 'underline' }}>\n              browse\n            </Typography>\n            &nbsp;thorough your machine\n          </Typography>\n        </Box>\n      </DropZoneStyle>\n\n      {fileRejections.length > 0 && <ShowRejectionItems />}\n\n      <List disablePadding sx={{ ...(hasFile && { my: 3 }) }}>\n        <AnimatePresence>\n          {files.map((file, index) => {\n            const { name, size, preview } = file;\n            const key = isString(file) ? file + index : name + index;\n\n            if (showPreview) {\n              return (\n                <ListItem\n                  key={key}\n                  component={motion.div}\n                  {...varFadeInRight}\n                  sx={{\n                    p: 0,\n                    m: 0.5,\n                    width: 80,\n                    height: 80,\n                    borderRadius: 1.5,\n                    overflow: 'hidden',\n                    position: 'relative',\n                    display: 'inline-flex',\n                  }}\n                >\n                  <Paper\n                    variant=\"outlined\"\n                    component=\"img\"\n                    src={isString(file) ? file : preview}\n                    sx={{ width: '100%', height: '100%', objectFit: 'cover', position: 'absolute' }}\n                  />\n                  <Box sx={{ top: 6, right: 6, position: 'absolute' }}>\n                    <MIconButton\n                      size=\"small\"\n                      onClick={() => onRemove(file)}\n                      sx={{\n                        p: '2px',\n                        color: 'common.white',\n                        bgcolor: (theme) => alpha(theme.palette.grey[900], 0.72),\n                        '&:hover': {\n                          bgcolor: (theme) => alpha(theme.palette.grey[900], 0.48),\n                        },\n                      }}\n                    >\n                      <Icon icon={closeFill} />\n                    </MIconButton>\n                  </Box>\n                </ListItem>\n              );\n            }\n\n            return (\n              <ListItem\n                key={key}\n                component={motion.div}\n                {...varFadeInRight}\n                sx={{\n                  my: 1,\n                  py: 0.75,\n                  px: 2,\n                  borderRadius: 1,\n                  border: (theme) => `solid 1px ${theme.palette.divider}`,\n                  bgcolor: 'background.paper',\n                }}\n              >\n                <ListItemIcon>\n                  <Icon icon={fileFill} width={28} height={28} />\n                </ListItemIcon>\n                <ListItemText\n                  primary={isString(file) ? file : name}\n                  secondary={isString(file) ? '' : fData(size)}\n                  primaryTypographyProps={{ variant: 'subtitle2' }}\n                  secondaryTypographyProps={{ variant: 'caption' }}\n                />\n                <ListItemSecondaryAction>\n                  <MIconButton edge=\"end\" size=\"small\" onClick={() => onRemove(file)}>\n                    <Icon icon={closeFill} />\n                  </MIconButton>\n                </ListItemSecondaryAction>\n              </ListItem>\n            );\n          })}\n        </AnimatePresence>\n      </List>\n\n      {hasFile && (\n        <Stack direction=\"row\" justifyContent=\"flex-end\">\n          <Button onClick={onRemoveAll} sx={{ mr: 1.5 }}>\n            Remove all\n          </Button>\n          {/* <Button variant=\"contained\">Upload files</Button> */}\n        </Stack>\n      )}\n    </Box>\n  );\n}\n","import { isString } from 'lodash';\nimport PropTypes from 'prop-types';\nimport { useDropzone } from 'react-dropzone';\n// material\nimport { alpha, styled } from '@mui/material/styles';\nimport { Paper, Box, Typography } from '@mui/material';\n// utils\nimport { fData } from '../../utils/formatNumber';\n//\nimport { UploadIllustration } from '../../assets';\n\n// ----------------------------------------------------------------------\n\nconst DropZoneStyle = styled('div')(({ theme }) => ({\n  outline: 'none',\n  display: 'flex',\n  overflow: 'hidden',\n  textAlign: 'center',\n  position: 'relative',\n  alignItems: 'center',\n  flexDirection: 'column',\n  justifyContent: 'center',\n  padding: theme.spacing(5, 0),\n  borderRadius: theme.shape.borderRadius,\n  transition: theme.transitions.create('padding'),\n  backgroundColor: theme.palette.background.neutral,\n  border: `1px dashed ${theme.palette.grey[500_32]}`,\n  '&:hover': {\n    opacity: 0.72,\n    cursor: 'pointer',\n  },\n  [theme.breakpoints.up('md')]: { textAlign: 'left', flexDirection: 'row' },\n}));\n\n// ----------------------------------------------------------------------\n\nUploadSingleFile.propTypes = {\n  error: PropTypes.bool,\n  file: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n  sx: PropTypes.object,\n};\n\nexport default function UploadSingleFile({ error, file, sx, ...other }) {\n  const { getRootProps, getInputProps, isDragActive, isDragReject, fileRejections } = useDropzone({\n    multiple: false,\n    ...other,\n  });\n\n  const ShowRejectionItems = () => (\n    <Paper\n      variant=\"outlined\"\n      sx={{\n        py: 1,\n        px: 2,\n        mt: 3,\n        borderColor: 'error.light',\n        bgcolor: (theme) => alpha(theme.palette.error.main, 0.08),\n      }}\n    >\n      {fileRejections.map(({ file, errors }) => {\n        const { path, size } = file;\n        return (\n          <Box key={path} sx={{ my: 1 }}>\n            <Typography variant=\"subtitle2\" noWrap>\n              {path} - {fData(size)}\n            </Typography>\n            {errors.map((e) => (\n              <Typography key={e.code} variant=\"caption\" component=\"p\">\n                - {e.message}\n              </Typography>\n            ))}\n          </Box>\n        );\n      })}\n    </Paper>\n  );\n\n  return (\n    <Box sx={{ width: '100%', ...sx }}>\n      <DropZoneStyle\n        {...getRootProps()}\n        sx={{\n          ...(isDragActive && { opacity: 0.72 }),\n          ...((isDragReject || error) && {\n            color: 'error.main',\n            borderColor: 'error.light',\n            bgcolor: 'error.lighter',\n          }),\n          ...(file && { padding: '12% 0' }),\n        }}\n      >\n        <input {...getInputProps()} />\n\n        <UploadIllustration sx={{ width: 220 }} />\n\n        <Box sx={{ p: 3, ml: { md: 2 } }}>\n          <Typography gutterBottom variant=\"h5\">\n            Drop or Select file\n          </Typography>\n\n          <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\n            Drop files here or click&nbsp;\n            <Typography variant=\"body2\" component=\"span\" sx={{ color: 'primary.main', textDecoration: 'underline' }}>\n              browse\n            </Typography>\n            &nbsp;thorough your machine\n          </Typography>\n        </Box>\n\n        {file && (\n          <Box\n            component=\"img\"\n            alt=\"file preview\"\n            src={isString(file) ? file : file.preview}\n            sx={{\n              top: 8,\n              borderRadius: 1,\n              objectFit: 'cover',\n              position: 'absolute',\n              width: 'calc(100% - 16px)',\n              height: 'calc(100% - 16px)',\n            }}\n          />\n        )}\n      </DropZoneStyle>\n\n      {fileRejections.length > 0 && <ShowRejectionItems />}\n    </Box>\n  );\n}\n","import { isString } from 'lodash';\nimport PropTypes from 'prop-types';\nimport { Icon } from '@iconify/react';\nimport { useDropzone } from 'react-dropzone';\nimport roundAddAPhoto from '@iconify/icons-ic/round-add-a-photo';\n// material\nimport { alpha, styled } from '@mui/material/styles';\nimport { Box, Typography, Paper } from '@mui/material';\n// utils\nimport { fData } from '../../utils/formatNumber';\n\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled('div')(({ theme }) => ({\n  width: 144,\n  height: 144,\n  margin: 'auto',\n  borderRadius: '50%',\n  padding: theme.spacing(1),\n  border: `1px dashed ${theme.palette.grey[500_32]}`,\n}));\n\nconst DropZoneStyle = styled('div')({\n  zIndex: 0,\n  width: '100%',\n  height: '100%',\n  outline: 'none',\n  display: 'flex',\n  overflow: 'hidden',\n  borderRadius: '50%',\n  position: 'relative',\n  alignItems: 'center',\n  justifyContent: 'center',\n  '& > *': { width: '100%', height: '100%' },\n  '&:hover': {\n    cursor: 'pointer',\n    '& .placeholder': {\n      zIndex: 9,\n    },\n  },\n});\n\nconst PlaceholderStyle = styled('div')(({ theme }) => ({\n  display: 'flex',\n  position: 'absolute',\n  alignItems: 'center',\n  flexDirection: 'column',\n  justifyContent: 'center',\n  color: theme.palette.text.secondary,\n  backgroundColor: theme.palette.background.neutral,\n  transition: theme.transitions.create('opacity', {\n    easing: theme.transitions.easing.easeInOut,\n    duration: theme.transitions.duration.shorter,\n  }),\n  '&:hover': { opacity: 0.72 },\n}));\n\n// ----------------------------------------------------------------------\n\nUploadAvatar.propTypes = {\n  error: PropTypes.bool,\n  file: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n  caption: PropTypes.node,\n  sx: PropTypes.object,\n};\n\nexport default function UploadAvatar({ error, file, caption, sx, ...other }) {\n  const { getRootProps, getInputProps, isDragActive, isDragReject, fileRejections } = useDropzone({\n    multiple: false,\n    ...other,\n  });\n\n  const ShowRejectionItems = () => (\n    <Paper\n      variant=\"outlined\"\n      sx={{\n        py: 1,\n        px: 2,\n        my: 2,\n        borderColor: 'error.light',\n        bgcolor: (theme) => alpha(theme.palette.error.main, 0.08),\n      }}\n    >\n      {fileRejections.map(({ file, errors }) => {\n        const { path, size } = file;\n        return (\n          <Box key={path} sx={{ my: 1 }}>\n            <Typography variant=\"subtitle2\" noWrap>\n              {path} - {fData(size)}\n            </Typography>\n            {errors.map((e) => (\n              <Typography key={e.code} variant=\"caption\" component=\"p\">\n                - {e.message}\n              </Typography>\n            ))}\n          </Box>\n        );\n      })}\n    </Paper>\n  );\n\n  return (\n    <>\n      <RootStyle sx={sx}>\n        <DropZoneStyle\n          {...getRootProps()}\n          sx={{\n            ...(isDragActive && { opacity: 0.72 }),\n            ...((isDragReject || error) && {\n              color: 'error.main',\n              borderColor: 'error.light',\n              bgcolor: 'error.lighter',\n            }),\n          }}\n        >\n          <input {...getInputProps()} />\n\n          {file && (\n            <Box\n              component=\"img\"\n              alt=\"avatar\"\n              src={isString(file) ? file : file.preview}\n              sx={{ zIndex: 8, objectFit: 'cover' }}\n            />\n          )}\n\n          <PlaceholderStyle\n            className=\"placeholder\"\n            sx={{\n              ...(file && {\n                opacity: 0,\n                color: 'common.white',\n                bgcolor: 'grey.900',\n                '&:hover': { opacity: 0.72 },\n              }),\n            }}\n          >\n            <Box component={Icon} icon={roundAddAPhoto} sx={{ width: 24, height: 24, mb: 1 }} />\n            <Typography variant=\"caption\">{file ? 'Update photo' : 'Upload photo'}</Typography>\n          </PlaceholderStyle>\n        </DropZoneStyle>\n      </RootStyle>\n\n      {caption}\n\n      {fileRejections.length > 0 && <ShowRejectionItems />}\n    </>\n  );\n}\n","import PropTypes from 'prop-types';\nimport { Add as AddIcon, Delete as DeleteIcon } from '@mui/icons-material';\nimport { IconButton, Stack, TextField } from '@mui/material';\n\nconst DynamicFormItem = ({ label, fieldProps, error, helperText, isLastItem, onAddClick, onRemoveClick }) => (\n  <Stack direction=\"row\" spacing={1}>\n    <TextField fullWidth size=\"small\" label={label} {...fieldProps} error={error} helperText={helperText} />\n    {isLastItem ? (\n      <IconButton color=\"primary\" onClick={onAddClick}>\n        <AddIcon />\n      </IconButton>\n    ) : (\n      <IconButton color=\"error\" onClick={onRemoveClick}>\n        <DeleteIcon />\n      </IconButton>\n    )}\n  </Stack>\n);\n\nDynamicFormItem.propTypes = {\n  label: PropTypes.string,\n  fieldProps: PropTypes.object,\n  error: PropTypes.bool,\n  helperText: PropTypes.string,\n  isLastItem: PropTypes.bool,\n  onAddClick: PropTypes.func,\n  onRemoveClick: PropTypes.func,\n};\n\nexport default DynamicFormItem;\n","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Icon } from '@iconify/react';\nimport CheckmarkFill from '@iconify/icons-eva/checkmark-fill';\nimport { withStyles } from '@mui/styles';\nimport { Box, Step, StepConnector, StepLabel, Stepper } from '@mui/material';\n\nconst QontoConnector = withStyles((theme) => ({\n  alternativeLabel: {\n    top: 10,\n    left: 'calc(-50% + 20px)',\n    right: 'calc(50% + 20px)',\n  },\n  active: {\n    '& $line': { borderColor: theme.palette.primary.main },\n  },\n  completed: {\n    '& $line': { borderColor: theme.palette.primary.main },\n  },\n  line: {\n    borderTopWidth: 2,\n    borderColor: theme.palette.divider,\n  },\n}))(StepConnector);\n\nfunction QontoStepIcon({ active, completed }) {\n  return (\n    <Box\n      sx={{\n        zIndex: 9,\n        width: 24,\n        height: 24,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        color: active ? 'primary.main' : 'divider',\n        bgcolor: 'background.default',\n      }}\n    >\n      {completed ? (\n        <Box component={Icon} icon={CheckmarkFill} sx={{ zIndex: 1, width: 20, height: 20, color: 'primary.main' }} />\n      ) : (\n        <Box\n          sx={{\n            width: 8,\n            height: 8,\n            borderRadius: '50%',\n            backgroundColor: 'currentColor',\n          }}\n        />\n      )}\n    </Box>\n  );\n}\n\nQontoStepIcon.propTypes = {\n  active: PropTypes.bool,\n  completed: PropTypes.bool,\n};\n\nconst Steps = ({ steps, activeStep }) => (\n  <Stepper alternativeLabel activeStep={activeStep} connector={<QontoConnector />}>\n    {steps.map((label) => (\n      <Step key={label}>\n        <StepLabel\n          StepIconComponent={QontoStepIcon}\n          sx={{\n            '& .MuiStepLabel-label': {\n              typography: 'subtitle2',\n              color: 'text.disabled',\n            },\n          }}\n        >\n          {label}\n        </StepLabel>\n      </Step>\n    ))}\n  </Stepper>\n);\n\nSteps.propTypes = {\n  steps: PropTypes.array,\n  activeStep: PropTypes.number,\n};\n\nexport default Steps;\n","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');"],"sourceRoot":""}