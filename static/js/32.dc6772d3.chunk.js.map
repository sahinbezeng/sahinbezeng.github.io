{"version":3,"sources":["components/report/ReportMoreMenu.js","components/report/ReportListTable.js","components/report/ReportDetailedListTable.js","pages/ReportList.js","components/HeaderBreadcrumbs.js"],"names":["ReportMoreMenu","enabled","ref","useRef","useState","isOpen","setIsOpen","IconButton","onClick","icon","moreVerticalFill","width","height","Menu","open","anchorEl","current","onClose","PaperProps","sx","maxWidth","anchorOrigin","vertical","horizontal","transformOrigin","MenuItem","color","ListItemIcon","swap2Outline","component","RouterLink","to","PATH_DASHBOARD","report","root","editFill","ListItemText","primary","primaryTypographyProps","variant","TABLE_HEAD","id","label","alignRight","ReportListTable","reportList","Scrollbar","TableContainer","minWidth","Table","TableHead","TableRow","map","headCell","TableCell","align","TableBody","row","name","location","Switch","checked","hide","ReportDetailedListTable","reportedBy","Link","list","link","comment","LOCATION_TYPES","BOOLEAN_TYPES","reportListData","Array","_","index","faker","lorem","word","helpers","randomize","reportDetailedListData","internet","userName","sentence","ReportList","themeStretch","useSettings","Page","title","Container","HeaderBreadcrumbs","heading","links","href","action","Button","create","startIcon","PlusFill","Typography","Box","mb","mt","moreLink","other","spacing","direction","alignItems","flexGrow","gutterBottom","flexShrink","isString","target","noWrap","display"],"mappings":"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","file":"static/js/32.dc6772d3.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nimport { Icon } from '@iconify/react';\nimport { useRef, useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport editFill from '@iconify/icons-eva/edit-fill';\nimport moreVerticalFill from '@iconify/icons-eva/more-vertical-fill';\nimport swap2Outline from '@iconify/icons-eva/swap-outline';\n// material\nimport { Menu, MenuItem, IconButton, ListItemIcon, ListItemText } from '@mui/material';\n// routes\nimport { PATH_DASHBOARD } from '../../routes/paths';\n\n// ----------------------------------------------------------------------\n\nReportMoreMenu.propTypes = {\n  enabled: PropTypes.bool,\n};\n\nexport default function ReportMoreMenu({ enabled }) {\n  const ref = useRef(null);\n  const [isOpen, setIsOpen] = useState(false);\n\n  return (\n    <>\n      <IconButton ref={ref} onClick={() => setIsOpen(true)}>\n        <Icon icon={moreVerticalFill} width={20} height={20} />\n      </IconButton>\n\n      <Menu\n        open={isOpen}\n        anchorEl={ref.current}\n        onClose={() => setIsOpen(false)}\n        PaperProps={{\n          sx: { width: 200, maxWidth: '100%' },\n        }}\n        anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n        transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      >\n        <MenuItem onClick={() => {}} sx={{ color: 'text.secondary' }}>\n          <ListItemIcon>\n            <Icon icon={swap2Outline} width={24} height={24} />\n          </ListItemIcon>\n          {enabled ? 'Make Disable' : 'Make Enable'}\n        </MenuItem>\n\n        <MenuItem component={RouterLink} to={`${PATH_DASHBOARD.report.root}`} sx={{ color: 'text.secondary' }}>\n          <ListItemIcon>\n            <Icon icon={editFill} width={24} height={24} />\n          </ListItemIcon>\n          <ListItemText primary=\"Edit\" primaryTypographyProps={{ variant: 'body2' }} />\n        </MenuItem>\n      </Menu>\n    </>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Switch, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@mui/material';\n\nimport Scrollbar from '../Scrollbar';\n\nimport ReportMoreMenu from './ReportMoreMenu';\n\nconst TABLE_HEAD = [\n  { id: 'name', label: 'Report Name', alignRight: false },\n  { id: 'location', label: 'Location', alignRight: false },\n  { id: 'hide', label: 'Hide Automatically', alignRight: false },\n  { id: 'action', label: '', alignRight: false },\n];\n\nReportListTable.propTypes = {\n  reportList: PropTypes.array,\n};\n\nfunction ReportListTable({ reportList = [] }) {\n  return (\n    <Scrollbar>\n      <TableContainer sx={{ minWidth: 800 }}>\n        <Table aria-label=\"notification table\">\n          <TableHead>\n            <TableRow>\n              {TABLE_HEAD.map((headCell) => (\n                <TableCell key={headCell.id} align={headCell.alignRight ? 'right' : 'left'}>\n                  {headCell.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {reportList.map((row) => (\n              <TableRow key={row.id}>\n                <TableCell>{row.name}</TableCell>\n                <TableCell>{row.location}</TableCell>\n                <TableCell>\n                  <Switch checked={row.hide} />\n                </TableCell>\n                <TableCell>\n                  <ReportMoreMenu enabled={row.enabled} />\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Scrollbar>\n  );\n}\n\nexport default ReportListTable;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link as RouterLink } from 'react-router-dom';\n\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Link } from '@mui/material';\n\nimport Scrollbar from '../Scrollbar';\n\nimport ReportMoreMenu from './ReportMoreMenu';\nimport { PATH_DASHBOARD } from '../../routes/paths';\n\nconst TABLE_HEAD = [\n  { id: 'name', label: 'Report Name', alignRight: false },\n  { id: 'reportedBy', label: 'Reported By', alignRight: false },\n  { id: 'location', label: 'Location', alignRight: false },\n  { id: 'link', label: 'Link', alignRight: false },\n  { id: 'comment', label: 'Comment', alignRight: false },\n  { id: 'status', label: 'Status', alignRight: false },\n  { id: 'action', label: '', alignRight: false },\n];\n\nReportDetailedListTable.propTypes = {\n  reportList: PropTypes.array,\n};\n\nfunction ReportDetailedListTable({ reportList = [] }) {\n  return (\n    <Scrollbar>\n      <TableContainer sx={{ minWidth: 800 }}>\n        <Table aria-label=\"notification table\">\n          <TableHead>\n            <TableRow>\n              {TABLE_HEAD.map((headCell) => (\n                <TableCell key={headCell.id} align={headCell.alignRight ? 'right' : 'left'}>\n                  {headCell.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {reportList.map((row) => (\n              <TableRow key={row.id}>\n                <TableCell>{row.name}</TableCell>\n                <TableCell>{row.reportedBy}</TableCell>\n                <TableCell>{row.location}</TableCell>\n                <TableCell>\n                  <Link to={PATH_DASHBOARD.report.list} component={RouterLink}>\n                    {row.link}\n                  </Link>\n                </TableCell>\n                <TableCell>{row.comment}</TableCell>\n                <TableCell>{row.enabled ? 'Enabled' : 'Disabled'}</TableCell>\n\n                <TableCell>\n                  <ReportMoreMenu enabled={row.enabled} />\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Scrollbar>\n  );\n}\n\nexport default ReportDetailedListTable;\n","import { Link as RouterLink } from 'react-router-dom';\nimport faker from 'faker';\nimport { Icon } from '@iconify/react';\nimport PlusFill from '@iconify/icons-eva/plus-fill';\n// material\nimport { Box, Button, Container, Typography } from '@mui/material';\n\nimport useSettings from '../hooks/useSettings';\n\nimport { PATH_DASHBOARD } from '../routes/paths';\n\nimport Page from '../components/Page';\nimport HeaderBreadcrumbs from '../components/HeaderBreadcrumbs';\nimport ReportListTable from '../components/report/ReportListTable';\nimport ReportDetailedListTable from '../components/report/ReportDetailedListTable';\n\n// ----------------------------------------------------------------------\n\nconst LOCATION_TYPES = ['Content', 'Profile', 'Task'];\nconst BOOLEAN_TYPES = [true, false];\nconst reportListData = [...Array(10)].map((_, index) => {\n  const setIndex = index + 1;\n  return {\n    id: `id ${setIndex}`,\n    name: faker.lorem.word(),\n    location: faker.helpers.randomize(LOCATION_TYPES),\n    hide: faker.helpers.randomize(BOOLEAN_TYPES),\n    enabled: faker.helpers.randomize(BOOLEAN_TYPES),\n  };\n});\n\nconst reportDetailedListData = [...Array(4)].map((_, index) => {\n  const setIndex = index + 1;\n  return {\n    id: `id ${setIndex}`,\n    name: faker.lorem.word(),\n    reportedBy: faker.internet.userName(),\n    location: faker.helpers.randomize(LOCATION_TYPES),\n    link: `USERID${1}`,\n    comment: faker.lorem.sentence(),\n    enabled: faker.helpers.randomize(BOOLEAN_TYPES),\n  };\n});\n\nconst ReportList = () => {\n  const { themeStretch } = useSettings();\n\n  return (\n    <Page title=\"Report: List\">\n      <Container maxWidth={themeStretch ? false : 'lg'}>\n        <HeaderBreadcrumbs\n          heading=\"Report List\"\n          links={[{ name: 'Report', href: PATH_DASHBOARD.report.list }, { name: 'List' }]}\n          action={\n            <Button\n              variant=\"contained\"\n              component={RouterLink}\n              to={PATH_DASHBOARD.report.create}\n              startIcon={<Icon icon={PlusFill} />}\n            >\n              New Report\n            </Button>\n          }\n        />\n        <Typography variant=\"h5\">Report List</Typography>\n        <Box sx={{ height: 720, mb: 12, mt: 2 }}>\n          <ReportListTable reportList={reportListData} />\n        </Box>\n        <Typography variant=\"h5\">User Report List</Typography>\n        <Box sx={{ height: 720, mb: 12, mt: 2 }}>\n          <ReportDetailedListTable reportList={reportDetailedListData} />\n        </Box>\n      </Container>\n    </Page>\n  );\n};\n\nexport default ReportList;\n","import { isString } from 'lodash';\nimport PropTypes from 'prop-types';\n// material\nimport { Box, Typography, Link, Stack } from '@mui/material';\n//\nimport { MBreadcrumbs } from './@material-extend';\n\n// ----------------------------------------------------------------------\n\nHeaderBreadcrumbs.propTypes = {\n  links: PropTypes.array,\n  action: PropTypes.node,\n  heading: PropTypes.string.isRequired,\n  moreLink: PropTypes.oneOfType([PropTypes.string, PropTypes.array]),\n  sx: PropTypes.object,\n};\n\nexport default function HeaderBreadcrumbs({ links, action, heading, moreLink = '' || [], sx, ...other }) {\n  return (\n    <Stack sx={sx} mb={5} spacing={2}>\n      <Stack direction=\"row\" alignItems=\"center\">\n        <Box sx={{ flexGrow: 1 }}>\n          <Typography variant=\"h4\" gutterBottom>\n            {heading}\n          </Typography>\n          <MBreadcrumbs links={links} {...other} />\n        </Box>\n\n        {action && <Box sx={{ flexShrink: 0 }}>{action}</Box>}\n      </Stack>\n\n      {isString(moreLink) ? (\n        <Link href={moreLink} target=\"_blank\" variant=\"body2\">\n          {moreLink}\n        </Link>\n      ) : (\n        moreLink.map((href) => (\n          <Link noWrap key={href} href={href} variant=\"body2\" target=\"_blank\" sx={{ display: 'flex' }}>\n            {href}\n          </Link>\n        ))\n      )}\n    </Stack>\n  );\n}\n"],"sourceRoot":""}