{"version":3,"sources":["pages/CampaignList.js","components/HeaderBreadcrumbs.js","components/Label.js","components/campaign/list/CampaignMoreMenu.js","components/campaign/list/CampaignListTable.js"],"names":["CampaignList","themeStretch","useSettings","campaignType","useLocation","pathname","split","title","maxWidth","heading","links","name","href","PATH_DASHBOARD","campaign","list","all","action","variant","component","RouterLink","to","create","startIcon","icon","PlusFill","sx","height","type","HeaderBreadcrumbs","moreLink","other","mb","spacing","direction","alignItems","flexGrow","gutterBottom","flexShrink","isString","target","map","noWrap","display","RootStyle","styled","theme","styleProps","isLight","palette","mode","color","minWidth","lineHeight","borderRadius","cursor","whiteSpace","justifyContent","padding","grey","fontSize","typography","pxToRem","fontFamily","backgroundColor","fontWeight","fontWeightBold","contrastText","main","styleFilled","border","styleOutlined","alpha","styleGhost","text","primary","secondary","common","white","Label","children","CampaignMoreMenu","onDelete","ref","useRef","useState","isOpen","setIsOpen","IconButton","onClick","moreVerticalFill","width","Menu","open","anchorEl","current","onClose","PaperProps","anchorOrigin","vertical","horizontal","transformOrigin","MenuItem","ListItemIcon","trash2Outline","ListItemText","primaryTypographyProps","root","editFill","columns","field","headerName","renderCell","params","Link","detail","row","id","brand","view","brandName","valueOptions","getStatus","getValue","sample","textTransform","mx","align","sortable","filterable","disableColumnMenu","selectedID","handleClick","console","log","CAMPAIGN_TYPES","faker","seed","rows","Array","_","index","commerce","productName","company","companyName","brandStatus","datatype","number","min","max","precision","helpers","randomize","campaignBudget","budgetLeft","tokensGiven","starsGiven","additionalTokensAdded","engagementRate","reach","targetReach","brandShared","entries","followingUsersNotCompleted","entriesAfterRewardsCompleted","deletedEntries","tickets","bonusSet","status","CustomPagination","useGridSlotComponentProps","state","apiRef","Pagination","count","pagination","pageCount","page","onChange","event","value","setPage","RatingInputValue","item","applyValue","Box","pl","Rating","size","placeholder","Number","newValue","CampaignListTable","length","ratingColumn","find","column","ratingColIndex","findIndex","col","ratingFilterOperators","getGridNumericColumnOperators","operator","InputComponent","filterOperators","filter","toLowerCase","pageSize","components","Toolbar","GridToolbar","filterModel","items","columnField","operatorValue"],"mappings":"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","file":"static/js/26.2d66290e.chunk.js","sourcesContent":["import { Link as RouterLink, useLocation } from 'react-router-dom';\nimport { Icon } from '@iconify/react';\nimport PlusFill from '@iconify/icons-eva/plus-fill';\n// material\nimport { Box, Button, Container } from '@mui/material';\n\nimport useSettings from '../hooks/useSettings';\n\nimport { PATH_DASHBOARD } from '../routes/paths';\n\nimport Page from '../components/Page';\nimport HeaderBreadcrumbs from '../components/HeaderBreadcrumbs';\nimport CampaignListTable from '../components/campaign/list/CampaignListTable';\n\n// ----------------------------------------------------------------------\n\nconst CampaignList = () => {\n  const { themeStretch } = useSettings();\n  const location = useLocation();\n  const campaignType = location.pathname.split('/dashboard/campaign/list/')[1];\n\n  return (\n    <Page title=\"Campaign: List\">\n      <Container maxWidth={themeStretch ? false : 'lg'}>\n        <HeaderBreadcrumbs\n          heading=\"Campaign List\"\n          links={[{ name: 'Campaign', href: PATH_DASHBOARD.campaign.list.all }, { name: 'List' }]}\n          action={\n            <Button\n              variant=\"contained\"\n              component={RouterLink}\n              to={PATH_DASHBOARD.campaign.create}\n              startIcon={<Icon icon={PlusFill} />}\n            >\n              New Campaign\n            </Button>\n          }\n        />\n        <Box sx={{ height: 720 }}>\n          <CampaignListTable type={campaignType !== 'all' && campaignType} />\n        </Box>\n      </Container>\n    </Page>\n  );\n};\n\nexport default CampaignList;\n","import { isString } from 'lodash';\nimport PropTypes from 'prop-types';\n// material\nimport { Box, Typography, Link, Stack } from '@mui/material';\n//\nimport { MBreadcrumbs } from './@material-extend';\n\n// ----------------------------------------------------------------------\n\nHeaderBreadcrumbs.propTypes = {\n  links: PropTypes.array,\n  action: PropTypes.node,\n  heading: PropTypes.string.isRequired,\n  moreLink: PropTypes.oneOfType([PropTypes.string, PropTypes.array]),\n  sx: PropTypes.object,\n};\n\nexport default function HeaderBreadcrumbs({ links, action, heading, moreLink = '' || [], sx, ...other }) {\n  return (\n    <Stack sx={sx} mb={5} spacing={2}>\n      <Stack direction=\"row\" alignItems=\"center\">\n        <Box sx={{ flexGrow: 1 }}>\n          <Typography variant=\"h4\" gutterBottom>\n            {heading}\n          </Typography>\n          <MBreadcrumbs links={links} {...other} />\n        </Box>\n\n        {action && <Box sx={{ flexShrink: 0 }}>{action}</Box>}\n      </Stack>\n\n      {isString(moreLink) ? (\n        <Link href={moreLink} target=\"_blank\" variant=\"body2\">\n          {moreLink}\n        </Link>\n      ) : (\n        moreLink.map((href) => (\n          <Link noWrap key={href} href={href} variant=\"body2\" target=\"_blank\" sx={{ display: 'flex' }}>\n            {href}\n          </Link>\n        ))\n      )}\n    </Stack>\n  );\n}\n","import PropTypes from 'prop-types';\n// material\nimport { alpha, styled } from '@mui/material/styles';\n\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled('span')(({ theme, styleProps }) => {\n  const isLight = theme.palette.mode === 'light';\n  const { color, variant } = styleProps;\n\n  const styleFilled = (color) => ({\n    color: theme.palette[color].contrastText,\n    backgroundColor: theme.palette[color].main,\n  });\n\n  const styleOutlined = (color) => ({\n    color: theme.palette[color].main,\n    backgroundColor: 'transparent',\n    border: `1px solid ${theme.palette[color].main}`,\n  });\n\n  const styleGhost = (color) => ({\n    color: theme.palette[color][isLight ? 'dark' : 'light'],\n    backgroundColor: alpha(theme.palette[color].main, 0.16),\n  });\n\n  return {\n    height: 22,\n    minWidth: 22,\n    lineHeight: 0,\n    borderRadius: 8,\n    cursor: 'default',\n    alignItems: 'center',\n    whiteSpace: 'nowrap',\n    display: 'inline-flex',\n    justifyContent: 'center',\n    padding: theme.spacing(0, 1),\n    color: theme.palette.grey[800],\n    fontSize: theme.typography.pxToRem(12),\n    fontFamily: theme.typography.fontFamily,\n    backgroundColor: theme.palette.grey[300],\n    fontWeight: theme.typography.fontWeightBold,\n\n    ...(color !== 'default'\n      ? {\n          ...(variant === 'filled' && { ...styleFilled(color) }),\n          ...(variant === 'outlined' && { ...styleOutlined(color) }),\n          ...(variant === 'ghost' && { ...styleGhost(color) }),\n        }\n      : {\n          ...(variant === 'outlined' && {\n            backgroundColor: 'transparent',\n            color: theme.palette.text.primary,\n            border: `1px solid ${theme.palette.grey[500_32]}`,\n          }),\n          ...(variant === 'ghost' && {\n            color: isLight ? theme.palette.text.secondary : theme.palette.common.white,\n            backgroundColor: theme.palette.grey[500_16],\n          }),\n        }),\n  };\n});\n\n// ----------------------------------------------------------------------\n\nexport default function Label({ color = 'default', variant = 'ghost', children, ...other }) {\n  return (\n    <RootStyle styleProps={{ color, variant }} {...other}>\n      {children}\n    </RootStyle>\n  );\n}\n\nLabel.propTypes = {\n  children: PropTypes.node,\n  color: PropTypes.oneOf(['default', 'primary', 'secondary', 'info', 'success', 'warning', 'error']),\n  variant: PropTypes.oneOf(['filled', 'outlined', 'ghost']),\n};\n","import PropTypes from 'prop-types';\nimport { Icon } from '@iconify/react';\nimport { useRef, useState } from 'react';\nimport editFill from '@iconify/icons-eva/edit-fill';\nimport { Link as RouterLink } from 'react-router-dom';\nimport trash2Outline from '@iconify/icons-eva/trash-2-outline';\nimport moreVerticalFill from '@iconify/icons-eva/more-vertical-fill';\n// material\nimport { Menu, MenuItem, IconButton, ListItemIcon, ListItemText } from '@mui/material';\n// routes\nimport { PATH_DASHBOARD } from '../../../routes/paths';\n\n// ----------------------------------------------------------------------\n\nCampaignMoreMenu.propTypes = {\n  onDelete: PropTypes.func,\n};\n\nexport default function CampaignMoreMenu({ onDelete }) {\n  const ref = useRef(null);\n  const [isOpen, setIsOpen] = useState(false);\n\n  return (\n    <>\n      <IconButton ref={ref} onClick={() => setIsOpen(true)}>\n        <Icon icon={moreVerticalFill} width={20} height={20} />\n      </IconButton>\n\n      <Menu\n        open={isOpen}\n        anchorEl={ref.current}\n        onClose={() => setIsOpen(false)}\n        PaperProps={{\n          sx: { width: 200, maxWidth: '100%' },\n        }}\n        anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n        transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      >\n        <MenuItem onClick={onDelete} sx={{ color: 'text.secondary' }}>\n          <ListItemIcon>\n            <Icon icon={trash2Outline} width={24} height={24} />\n          </ListItemIcon>\n          <ListItemText primary=\"Delete\" primaryTypographyProps={{ variant: 'body2' }} />\n        </MenuItem>\n\n        <MenuItem component={RouterLink} to={`${PATH_DASHBOARD.campaign.root}`} sx={{ color: 'text.secondary' }}>\n          <ListItemIcon>\n            <Icon icon={editFill} width={24} height={24} />\n          </ListItemIcon>\n          <ListItemText primary=\"Edit\" primaryTypographyProps={{ variant: 'body2' }} />\n        </MenuItem>\n      </Menu>\n    </>\n  );\n}\n","import PropTypes from 'prop-types';\nimport faker from 'faker';\nimport { sample } from 'lodash';\nimport { Icon } from '@iconify/react';\nimport moreVerticalFill from '@iconify/icons-eva/more-vertical-fill';\nimport { Link as RouterLink } from 'react-router-dom';\n// material\nimport { Box, Rating, Pagination, Link } from '@mui/material';\nimport { DataGrid, GridToolbar, useGridSlotComponentProps, getGridNumericColumnOperators } from '@mui/x-data-grid';\nimport { PATH_DASHBOARD } from '../../../routes/paths';\n// utils\n// import { fPercent } from '../../../utils/formatNumber';\n// components\nimport Label from '../../Label';\nimport { MIconButton } from '../../@material-extend';\nimport CampaignMoreMenu from './CampaignMoreMenu';\n\n// ----------------------------------------------------------------------\n\nconst columns = [\n  // OPTIONS\n  // https://material-ui.com/api/data-grid/grid-col-def/#main-content\n  // - hide: false (default)\n  // - editable: false (default)\n  // - filterable: true (default)\n  // - sortable: true (default)\n  // - disableColumnMenu: false (default)\n\n  // FIELD TYPES\n  // --------------------\n  // 'string' (default)\n  // 'number'\n  // 'date'\n  // 'dateTime'\n  // 'boolean'\n  // 'singleSelect'\n\n  {\n    field: 'id',\n  },\n  {\n    field: 'name',\n    headerName: 'Task Name',\n    width: 200,\n    renderCell: (params) => (\n      <Link to={PATH_DASHBOARD.campaign.detail} key={params.row.id} variant=\"body2\" component={RouterLink}>\n        {params.row.name}\n      </Link>\n    ),\n  },\n  {\n    field: 'brandName',\n    headerName: 'Brand Name',\n    width: 200,\n    renderCell: (params) => (\n      <Link to={PATH_DASHBOARD.brand.view} key={params.row.id} variant=\"body2\" component={RouterLink}>\n        {params.row.brandName}\n      </Link>\n    ),\n  },\n  {\n    field: 'brandStatus',\n    headerName: 'Brand Status',\n    type: 'number',\n    width: 200,\n  },\n  {\n    field: 'campaignType',\n    headerName: 'Campaign Type',\n    width: 200,\n  },\n  {\n    field: 'campaignBudget',\n    headerName: 'Campaign Budget',\n    type: 'number',\n    width: 200,\n  },\n  {\n    field: 'budgetLeft',\n    headerName: 'Budget Left',\n    type: 'number',\n    width: 200,\n  },\n  {\n    field: 'tokensGiven',\n    headerName: 'Tokens Given',\n    type: 'number',\n    width: 200,\n  },\n  {\n    field: 'starsGiven',\n    headerName: 'Stars Given',\n    type: 'number',\n    width: 200,\n  },\n  {\n    field: 'additionalTokensAdded',\n    headerName: 'Tokens Added',\n    type: 'number',\n    width: 200,\n  },\n  {\n    field: 'engagementRate',\n    headerName: 'Engagement Rate',\n    type: 'number',\n    width: 200,\n  },\n  {\n    field: 'reach',\n    headerName: 'Reach',\n    type: 'number',\n    width: 200,\n  },\n  {\n    field: 'targetReach',\n    headerName: 'Target Reach',\n    type: 'number',\n    width: 200,\n  },\n  {\n    field: 'brandShared',\n    headerName: 'Brand Shared',\n    type: 'number',\n    width: 200,\n  },\n  {\n    field: 'entries',\n    headerName: 'Entries',\n    type: 'number',\n    width: 200,\n  },\n  {\n    field: 'followingUsersNotCompleted',\n    headerName: 'Following Users Not Completed',\n    type: 'number',\n    width: 200,\n  },\n  {\n    field: 'entriesAfterRewardsCompleted',\n    headerName: 'Entries After Rewards Completed',\n    type: 'number',\n    width: 200,\n  },\n  {\n    field: 'deletedEntries',\n    headerName: 'Deleted Entries',\n    type: 'number',\n    width: 200,\n  },\n  {\n    field: 'tickets',\n    headerName: 'Tickets',\n    type: 'number',\n    width: 200,\n  },\n  {\n    field: 'bonusSet',\n    headerName: 'Bonus Set',\n    type: 'number',\n    width: 200,\n  },\n  {\n    field: 'status',\n    type: 'singleSelect',\n    headerName: 'Status',\n    width: 120,\n    valueOptions: ['online', 'away', 'busy'],\n    renderCell: (params) => {\n      const getStatus = params.getValue(params.id, 'status');\n      return (\n        <Label color={sample(['error', 'success', 'warning'])} sx={{ textTransform: 'capitalize', mx: 'auto' }}>\n          {getStatus}\n        </Label>\n      );\n    },\n  },\n  {\n    field: 'action',\n    headerName: ' ',\n    width: 80,\n    align: 'right',\n    sortable: false,\n    filterable: false,\n    disableColumnMenu: true,\n    renderCell: (params) => {\n      const selectedID = params.row.id;\n      const handleClick = () => {\n        console.log('selectedID', selectedID);\n      };\n\n      return <CampaignMoreMenu onDelete={() => handleClick} />;\n    },\n  },\n];\n\nconst CAMPAIGN_TYPES = ['Contest', 'Content', 'Survey', 'Watch-Ad', 'Campaign'];\n\nfaker.seed(10);\nconst rows = [...Array(100)].map((_, index) => {\n  const setIndex = index + 1;\n  return {\n    id: `id ${setIndex}`,\n    name: faker.commerce.productName(),\n    brandName: faker.company.companyName(),\n    brandStatus: faker.datatype.number({ min: 1, max: 5, precision: 1 }),\n    campaignType: faker.helpers.randomize(CAMPAIGN_TYPES),\n    campaignBudget: faker.datatype.number({ min: 1000, max: 500000, precision: 1 }),\n    budgetLeft: faker.datatype.number({ min: 1000, max: 500000, precision: 1 }),\n    tokensGiven: faker.datatype.number({ min: 100, max: 10000, precision: 1 }),\n    starsGiven: faker.datatype.number({ min: 100, max: 1000, precision: 1 }),\n    additionalTokensAdded: faker.datatype.number({ min: 100, max: 5000, precision: 1 }),\n    engagementRate: faker.datatype.number({ min: 100, max: 5000, precision: 1 }),\n    reach: faker.datatype.number({ min: 100, max: 5000, precision: 1 }),\n    targetReach: faker.datatype.number({ min: 100, max: 5000, precision: 1 }),\n    brandShared: faker.datatype.number({ min: 100, max: 5000, precision: 1 }),\n    entries: faker.datatype.number({ min: 100, max: 5000, precision: 1 }),\n    followingUsersNotCompleted: faker.datatype.number({ min: 100, max: 5000, precision: 1 }),\n    entriesAfterRewardsCompleted: faker.datatype.number({ min: 100, max: 5000, precision: 1 }),\n    deletedEntries: faker.datatype.number({ min: 100, max: 5000, precision: 1 }),\n    tickets: faker.datatype.number({ min: 100, max: 5000, precision: 1 }),\n    bonusSet: faker.datatype.number({ min: 100, max: 5000, precision: 1 }),\n    status: sample([\n      'saved not completed ',\n      'waiting for brand approval',\n      'active',\n      'ended submission',\n      'voting',\n      'voting ended',\n      'winner announced',\n      'paused',\n      'ended',\n    ]),\n  };\n});\n\n// ----------------------------------------------------------------------\n\nfunction CustomPagination() {\n  const { state, apiRef } = useGridSlotComponentProps();\n\n  return (\n    <Pagination\n      color=\"primary\"\n      count={state.pagination.pageCount}\n      page={state.pagination.page + 1}\n      onChange={(event, value) => apiRef.current.setPage(value - 1)}\n    />\n  );\n}\n\nRatingInputValue.propTypes = {\n  applyValue: PropTypes.func,\n  item: PropTypes.shape({\n    value: PropTypes.number,\n  }),\n};\n\nfunction RatingInputValue({ item, applyValue }) {\n  return (\n    <Box sx={{ pl: 2, height: 1, alignItems: 'center', display: 'inline-flex' }}>\n      <Rating\n        size=\"small\"\n        name=\"custom-rating-filter-operator\"\n        placeholder=\"Filter value\"\n        value={Number(item.value)}\n        onChange={(event, newValue) => {\n          applyValue({ ...item, value: newValue });\n        }}\n        precision={0.5}\n      />\n    </Box>\n  );\n}\n\nCampaignListTable.propTypes = {\n  brandName: PropTypes.string,\n  type: PropTypes.any,\n};\n\nexport default function CampaignListTable({ brandName, type }) {\n  if (columns.length > 0) {\n    const ratingColumn = columns.find((column) => column.field === 'rating');\n    const ratingColIndex = columns.findIndex((col) => col.field === 'rating');\n\n    const ratingFilterOperators = getGridNumericColumnOperators().map((operator) => ({\n      ...operator,\n      InputComponent: RatingInputValue,\n    }));\n\n    columns[ratingColIndex] = {\n      ...ratingColumn,\n      filterOperators: ratingFilterOperators,\n    };\n  }\n\n  return (\n    <DataGrid\n      rows={\n        // eslint-disable-next-line no-nested-ternary\n        brandName\n          ? rows.filter((row) => row.brandName === brandName)\n          : type\n          ? rows.filter((row) => row.campaignType.toLowerCase() === type)\n          : [{ ...rows[0], name: 'nikeair' }]\n      }\n      columns={columns}\n      pagination\n      pageSize={10}\n      components={{\n        Toolbar: GridToolbar,\n        Pagination: CustomPagination,\n      }}\n      filterModel={{\n        items: [{ columnField: 'engagementRate', value: '2500', operatorValue: '>=' }],\n      }}\n    />\n  );\n}\n"],"sourceRoot":""}