{"version":3,"sources":["components/app/LevelSettingsForm.js","pages/LevelSettings.js","components/HeaderBreadcrumbs.js","../node_modules/@iconify/icons-eva/plus-fill.js","../node_modules/@mui/material/CardHeader/cardHeaderClasses.js","../node_modules/@mui/material/CardHeader/CardHeader.js","../node_modules/@mui/icons-material/esm/Save.js","../node_modules/@mui/material/CardContent/cardContentClasses.js","../node_modules/@mui/material/CardContent/CardContent.js","../node_modules/@mui/icons-material/esm/Delete.js"],"names":["initialLevel","levelNumber","starsToAdvance","tokensToAdvance","tasksToAdvance","rewardForLevelUp","SettingsSchema","Yup","shape","levels","of","min","test","originalValue","this","parent","options","context","length","LevelSettingsForm","enqueueSnackbar","useSnackbar","formik","useFormik","enableReinitialize","initialValues","validate","values","a","validateYupSchema","yupToFormErrors","onSubmit","setSubmitting","setErrors","alert","JSON","stringify","variant","error","console","errors","touched","handleSubmit","getFieldProps","isSubmitting","value","noValidate","autoComplete","Grid","container","spacing","item","md","name","render","levelsArrayHelpers","Card","CardHeader","title","action","Button","startIcon","icon","PlusFill","onClick","push","CardContent","Stack","map","level","index","fieldNamePrefix","alignItems","direction","xs","sm","Typography","sx","width","getIn","TextField","fullWidth","size","label","InputProps","endAdornment","InputAdornment","position","Boolean","helperText","select","SelectProps","native","option","IconButton","color","remove","Delete","Box","mt","display","justifyContent","LoadingButton","type","loading","endIcon","Save","LevelSettings","themeStretch","useSettings","Page","Container","maxWidth","HeaderBreadcrumbs","heading","links","href","PATH_DASHBOARD","app","root","moreLink","other","mb","flexGrow","gutterBottom","flexShrink","isString","target","noWrap","exports","__esModule","default","getCardHeaderUtilityClass","slot","generateUtilityClass","cardHeaderClasses","generateUtilityClasses","_excluded","CardHeaderRoot","styled","overridesResolver","props","styles","_extends","subheader","padding","CardHeaderAvatar","avatar","flex","marginRight","CardHeaderAction","alignSelf","marginTop","marginBottom","CardHeaderContent","content","React","inProps","ref","useThemeProps","className","component","disableTypography","subheaderProp","subheaderTypographyProps","titleProp","titleTypographyProps","_objectWithoutPropertiesLoose","ownerState","classes","composeClasses","useUtilityClasses","_jsx","children","_jsxs","clsx","as","createSvgIcon","d","getCardContentUtilityClass","CardContentRoot","paddingBottom"],"mappings":"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","file":"static/js/21.c2109aa1.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useSnackbar } from 'notistack';\nimport * as Yup from 'yup';\nimport { FieldArray, Form, FormikProvider, getIn, useFormik, validateYupSchema, yupToFormErrors } from 'formik';\nimport { Icon } from '@iconify/react';\nimport PlusFill from '@iconify/icons-eva/plus-fill';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Grid,\n  IconButton,\n  InputAdornment,\n  Stack,\n  TextField,\n  Typography,\n} from '@mui/material';\nimport { LoadingButton } from '@mui/lab';\nimport { Delete as DeleteIcon, Save as SaveIcon } from '@mui/icons-material';\n\nconst initialLevel = {\n  levelNumber: 1,\n  starsToAdvance: 10,\n  tokensToAdvance: 0,\n  tasksToAdvance: 0,\n  rewardForLevelUp: 'NONE',\n};\n\nconst SettingsSchema = Yup.object().shape({\n  levels: Yup.array().of(\n    Yup.object().shape({\n      levelNumber: Yup.number().min(1),\n      starsToAdvance: Yup.number().test(\n        'level stars test',\n        'star number should be greater than previous level',\n        function validateStars() {\n          const {\n            originalValue,\n            parent,\n            options: {\n              context: { levels },\n            },\n          } = this;\n          // console.log('thisss', this, levels);\n          if (levels.length <= 1 || parent.levelNumber - 2 < 0) return true;\n          // console.log('previous start value: ', levels[parent.levelNumber - 2]?.starsToAdvance);\n          return originalValue > levels[parent.levelNumber - 2]?.starsToAdvance;\n        }\n      ),\n      tokensToAdvance: Yup.number(),\n      tasksToAdvance: Yup.number(),\n      rewardForLevelUp: Yup.string(),\n    })\n  ),\n});\n\nconst LevelSettingsForm = ({ levels }) => {\n  const { enqueueSnackbar } = useSnackbar();\n\n  const formik = useFormik({\n    enableReinitialize: true,\n    initialValues: {\n      levels: levels || [{ ...initialLevel }],\n    },\n    // validationSchema: SettingsSchema,\n    validate: async (values) => {\n      try {\n        await validateYupSchema(values, SettingsSchema, true, values);\n      } catch (err) {\n        return yupToFormErrors(err);\n      }\n      return {};\n    },\n    onSubmit: async (values, { setSubmitting, setErrors }) => {\n      alert(JSON.stringify(values));\n      try {\n        setSubmitting(false);\n        enqueueSnackbar('Update success', { variant: 'success' });\n      } catch (error) {\n        console.error(error);\n        setSubmitting(false);\n        setErrors(error);\n      }\n    },\n  });\n\n  const { values, errors, touched, handleSubmit, getFieldProps, isSubmitting } = formik;\n\n  return (\n    <FormikProvider value={formik}>\n      <Form noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\n        <Grid container spacing={3}>\n          <Grid item md={12}>\n            <FieldArray\n              name=\"levels\"\n              render={(levelsArrayHelpers) => (\n                <Card>\n                  <CardHeader\n                    title=\"Level Settings\"\n                    action={\n                      <Button\n                        variant=\"contained\"\n                        startIcon={<Icon icon={PlusFill} />}\n                        onClick={() =>\n                          levelsArrayHelpers.push({ ...initialLevel, levelNumber: values.levels.length + 1 })\n                        }\n                      >\n                        Add Level\n                      </Button>\n                    }\n                  />\n                  <CardContent>\n                    <Stack spacing={2}>\n                      {values.levels.map((level, index) => {\n                        const fieldNamePrefix = `levels.${index}`;\n                        return (\n                          <Stack\n                            key={index}\n                            alignItems=\"center\"\n                            direction={{ xs: 'column', sm: 'column', md: 'row' }}\n                            spacing={{ xs: 3, sm: 3, md: 2 }}\n                          >\n                            <Typography sx={{ width: '50%' }}>{`Level #${getIn(\n                              values,\n                              `${fieldNamePrefix}.levelNumber`\n                            )}`}</Typography>\n                            <TextField\n                              fullWidth\n                              size=\"small\"\n                              label=\"Stars to advance\"\n                              InputProps={{\n                                endAdornment: <InputAdornment position=\"end\">stars</InputAdornment>,\n                              }}\n                              {...getFieldProps(`${fieldNamePrefix}.starsToAdvance`)}\n                              error={Boolean(\n                                getIn(touched, `${fieldNamePrefix}.starsToAdvance`) &&\n                                  getIn(errors, `${fieldNamePrefix}.starsToAdvance`)\n                              )}\n                              helperText={\n                                getIn(touched, `${fieldNamePrefix}.starsToAdvance`) &&\n                                getIn(errors, `${fieldNamePrefix}.starsToAdvance`)\n                              }\n                            />\n                            <TextField\n                              fullWidth\n                              size=\"small\"\n                              label=\"Tokens to advance\"\n                              InputProps={{\n                                endAdornment: <InputAdornment position=\"end\">tokens</InputAdornment>,\n                              }}\n                              {...getFieldProps(`${fieldNamePrefix}.tokensToAdvance`)}\n                              error={Boolean(\n                                getIn(touched, `${fieldNamePrefix}.tokensToAdvance`) &&\n                                  getIn(errors, `${fieldNamePrefix}.tokensToAdvance`)\n                              )}\n                              helperText={\n                                getIn(touched, `${fieldNamePrefix}.tokensToAdvance`) &&\n                                getIn(errors, `${fieldNamePrefix}.tokensToAdvance`)\n                              }\n                            />\n                            <TextField\n                              fullWidth\n                              size=\"small\"\n                              label=\"Tasks to advance\"\n                              InputProps={{\n                                endAdornment: <InputAdornment position=\"end\">tasks</InputAdornment>,\n                              }}\n                              {...getFieldProps(`${fieldNamePrefix}.tasksToAdvance`)}\n                              error={Boolean(\n                                getIn(touched, `${fieldNamePrefix}.tasksToAdvance`) &&\n                                  getIn(errors, `${fieldNamePrefix}.tasksToAdvance`)\n                              )}\n                              helperText={\n                                getIn(touched, `${fieldNamePrefix}.tasksToAdvance`) &&\n                                getIn(errors, `${fieldNamePrefix}.tasksToAdvance`)\n                              }\n                            />\n                            <TextField\n                              select\n                              fullWidth\n                              size=\"small\"\n                              label=\"Reward for level up\"\n                              {...getFieldProps(`${fieldNamePrefix}.rewardForLevelUp`)}\n                              SelectProps={{ native: true }}\n                              error={Boolean(\n                                getIn(touched, `${fieldNamePrefix}.rewardForLevelUp`) &&\n                                  getIn(errors, `${fieldNamePrefix}.tasksToAdvance`)\n                              )}\n                              helperText={\n                                getIn(touched, `${fieldNamePrefix}.rewardForLevelUp`) &&\n                                getIn(errors, `${fieldNamePrefix}.rewardForLevelUp`)\n                              }\n                            >\n                              <option value=\"NONE\">NONE</option>\n                              {['Present', 'Easter Egg', 'MAX Energy increase by 1'].map((option) => (\n                                <option key={option} value={option}>\n                                  {option}\n                                </option>\n                              ))}\n                            </TextField>\n                            <IconButton\n                              color=\"error\"\n                              aria-label=\"delete\"\n                              onClick={() => levelsArrayHelpers.remove(index)}\n                            >\n                              <DeleteIcon />\n                            </IconButton>\n                          </Stack>\n                        );\n                      })}\n                      <Box sx={{ mt: 3, display: 'flex', justifyContent: 'flex-end' }}>\n                        <LoadingButton type=\"submit\" variant=\"contained\" loading={isSubmitting} endIcon={<SaveIcon />}>\n                          Save\n                        </LoadingButton>\n                      </Box>\n                    </Stack>\n                  </CardContent>\n                </Card>\n              )}\n            />\n          </Grid>\n        </Grid>\n      </Form>\n    </FormikProvider>\n  );\n};\n\nLevelSettingsForm.propTypes = {\n  levels: PropTypes.array,\n};\n\nexport default LevelSettingsForm;\n","// material\nimport { Container } from '@mui/material';\n\nimport useSettings from '../hooks/useSettings';\n\nimport { PATH_DASHBOARD } from '../routes/paths';\n\nimport Page from '../components/Page';\nimport HeaderBreadcrumbs from '../components/HeaderBreadcrumbs';\nimport LevelSettingsForm from '../components/app/LevelSettingsForm';\n\n// ----------------------------------------------------------------------\n\nconst LevelSettings = () => {\n  const { themeStretch } = useSettings();\n\n  return (\n    <Page title=\"Riddim: Level Settings\">\n      <Container maxWidth={themeStretch ? false : 'lg'}>\n        <HeaderBreadcrumbs\n          heading=\"Riddim Levels\"\n          links={[{ name: 'App', href: PATH_DASHBOARD.app.root }, { name: 'Level Settings' }]}\n        />\n        <LevelSettingsForm />\n      </Container>\n    </Page>\n  );\n};\n\nexport default LevelSettings;\n","import { isString } from 'lodash';\nimport PropTypes from 'prop-types';\n// material\nimport { Box, Typography, Link, Stack } from '@mui/material';\n//\nimport { MBreadcrumbs } from './@material-extend';\n\n// ----------------------------------------------------------------------\n\nHeaderBreadcrumbs.propTypes = {\n  links: PropTypes.array,\n  action: PropTypes.node,\n  heading: PropTypes.string.isRequired,\n  moreLink: PropTypes.oneOfType([PropTypes.string, PropTypes.array]),\n  sx: PropTypes.object,\n};\n\nexport default function HeaderBreadcrumbs({ links, action, heading, moreLink = '' || [], sx, ...other }) {\n  return (\n    <Stack sx={sx} mb={5} spacing={2}>\n      <Stack direction=\"row\" alignItems=\"center\">\n        <Box sx={{ flexGrow: 1 }}>\n          <Typography variant=\"h4\" gutterBottom>\n            {heading}\n          </Typography>\n          <MBreadcrumbs links={links} {...other} />\n        </Box>\n\n        {action && <Box sx={{ flexShrink: 0 }}>{action}</Box>}\n      </Stack>\n\n      {isString(moreLink) ? (\n        <Link href={moreLink} target=\"_blank\" variant=\"body2\">\n          {moreLink}\n        </Link>\n      ) : (\n        moreLink.map((href) => (\n          <Link noWrap key={href} href={href} variant=\"body2\" target=\"_blank\" sx={{ display: 'flex' }}>\n            {href}\n          </Link>\n        ))\n      )}\n    </Stack>\n  );\n}\n","var data = {\n\t\"body\": \"<path fill=\\\"currentColor\\\" d=\\\"M19 11h-6V5a1 1 0 0 0-2 0v6H5a1 1 0 0 0 0 2h6v6a1 1 0 0 0 2 0v-6h6a1 1 0 0 0 0-2z\\\"/>\",\n\t\"width\": 24,\n\t\"height\": 24\n};\nexports.__esModule = true;\nexports.default = data;\n","import { generateUtilityClass, generateUtilityClasses } from '@mui/core';\nexport function getCardHeaderUtilityClass(slot) {\n  return generateUtilityClass('MuiCardHeader', slot);\n}\nconst cardHeaderClasses = generateUtilityClasses('MuiCardHeader', ['root', 'avatar', 'action', 'content', 'title', 'subheader']);\nexport default cardHeaderClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"action\", \"avatar\", \"className\", \"component\", \"disableTypography\", \"subheader\", \"subheaderTypographyProps\", \"title\", \"titleTypographyProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/core';\nimport Typography from '../Typography';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport cardHeaderClasses, { getCardHeaderUtilityClass } from './cardHeaderClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    avatar: ['avatar'],\n    action: ['action'],\n    content: ['content'],\n    title: ['title'],\n    subheader: ['subheader']\n  };\n  return composeClasses(slots, getCardHeaderUtilityClass, classes);\n};\n\nconst CardHeaderRoot = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Root',\n  overridesResolver: (props, styles) => _extends({\n    [`& .${cardHeaderClasses.title}`]: styles.title,\n    [`& .${cardHeaderClasses.subheader}`]: styles.subheader\n  }, styles.root)\n})({\n  display: 'flex',\n  alignItems: 'center',\n  padding: 16\n});\nconst CardHeaderAvatar = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Avatar',\n  overridesResolver: (props, styles) => styles.avatar\n})({\n  display: 'flex',\n  flex: '0 0 auto',\n  marginRight: 16\n});\nconst CardHeaderAction = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Action',\n  overridesResolver: (props, styles) => styles.action\n})({\n  flex: '0 0 auto',\n  alignSelf: 'flex-start',\n  marginTop: -4,\n  marginRight: -8,\n  marginBottom: -4\n});\nconst CardHeaderContent = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Content',\n  overridesResolver: (props, styles) => styles.content\n})({\n  flex: '1 1 auto'\n});\nconst CardHeader = /*#__PURE__*/React.forwardRef(function CardHeader(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardHeader'\n  });\n\n  const {\n    action,\n    avatar,\n    className,\n    component = 'div',\n    disableTypography = false,\n    subheader: subheaderProp,\n    subheaderTypographyProps,\n    title: titleProp,\n    titleTypographyProps\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    component,\n    disableTypography\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  let title = titleProp;\n\n  if (title != null && title.type !== Typography && !disableTypography) {\n    title = /*#__PURE__*/_jsx(Typography, _extends({\n      variant: avatar ? 'body2' : 'h5',\n      className: classes.title,\n      component: \"span\",\n      display: \"block\"\n    }, titleTypographyProps, {\n      children: title\n    }));\n  }\n\n  let subheader = subheaderProp;\n\n  if (subheader != null && subheader.type !== Typography && !disableTypography) {\n    subheader = /*#__PURE__*/_jsx(Typography, _extends({\n      variant: avatar ? 'body2' : 'body1',\n      className: classes.subheader,\n      color: \"text.secondary\",\n      component: \"span\",\n      display: \"block\"\n    }, subheaderTypographyProps, {\n      children: subheader\n    }));\n  }\n\n  return /*#__PURE__*/_jsxs(CardHeaderRoot, _extends({\n    className: clsx(classes.root, className),\n    as: component,\n    ref: ref,\n    ownerState: ownerState\n  }, other, {\n    children: [avatar && /*#__PURE__*/_jsx(CardHeaderAvatar, {\n      className: classes.avatar,\n      ownerState: ownerState,\n      children: avatar\n    }), /*#__PURE__*/_jsxs(CardHeaderContent, {\n      className: classes.content,\n      ownerState: ownerState,\n      children: [title, subheader]\n    }), action && /*#__PURE__*/_jsx(CardHeaderAction, {\n      className: classes.action,\n      ownerState: ownerState,\n      children: action\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardHeader.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The action to display in the card header.\n   */\n  action: PropTypes.node,\n\n  /**\n   * The Avatar element to display.\n   */\n  avatar: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, `subheader` and `title` won't be wrapped by a Typography component.\n   * This can be useful to render an alternative Typography variant by wrapping\n   * the `title` text, and optional `subheader` text\n   * with the Typography component.\n   * @default false\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * The content of the component.\n   */\n  subheader: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the subheader\n   * (as long as disableTypography is not `true`).\n   */\n  subheaderTypographyProps: PropTypes.object,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * The content of the component.\n   */\n  title: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the title\n   * (as long as disableTypography is not `true`).\n   */\n  titleTypographyProps: PropTypes.object\n} : void 0;\nexport default CardHeader;","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M17 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V7l-4-4zm-5 16c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3zm3-10H5V5h10v4z\"\n}), 'Save');","import { generateUtilityClass, generateUtilityClasses } from '@mui/core';\nexport function getCardContentUtilityClass(slot) {\n  return generateUtilityClass('MuiCardContent', slot);\n}\nconst cardContentClasses = generateUtilityClasses('MuiCardContent', ['root']);\nexport default cardContentClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/core';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getCardContentUtilityClass } from './cardContentClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardContentUtilityClass, classes);\n};\n\nconst CardContentRoot = styled('div', {\n  name: 'MuiCardContent',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  };\n});\nconst CardContent = /*#__PURE__*/React.forwardRef(function CardContent(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardContent'\n  });\n\n  const {\n    className,\n    component = 'div'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    component\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardContentRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default CardContent;","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');"],"sourceRoot":""}