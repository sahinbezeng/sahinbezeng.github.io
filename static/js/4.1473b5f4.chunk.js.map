{"version":3,"sources":["../node_modules/@material-ui/unstyled/node_modules/@material-ui/utils/esm/useControlled.js","../node_modules/@material-ui/unstyled/AutocompleteUnstyled/useAutocomplete.js","../node_modules/@material-ui/unstyled/node_modules/@material-ui/utils/esm/useId.js","../node_modules/@material-ui/core/Autocomplete/autocompleteClasses.js","../node_modules/@material-ui/core/Autocomplete/Autocomplete.js","../node_modules/@material-ui/core/internal/svg-icons/Cancel.js","../node_modules/@material-ui/core/Chip/chipClasses.js","../node_modules/@material-ui/core/Chip/Chip.js"],"names":["useControlled","controlled","defaultProp","default","isControlled","name","state","React","undefined","current","valueState","setValue","newValue","stripDiacritics","string","normalize","replace","findIndex","array","comp","i","length","defaultFilterOptions","config","ignoreAccents","ignoreCase","limit","matchFrom","stringify","trim","options","inputValue","getOptionLabel","input","toLowerCase","filteredOptions","filter","option","candidate","indexOf","slice","createFilterOptions","useAutocomplete","props","autoComplete","autoHighlight","autoSelect","blurOnSelect","disabledProp","disabled","clearOnBlur","freeSolo","clearOnEscape","componentName","defaultValue","multiple","disableClearable","disableCloseOnSelect","disabledItemsFocusable","disableListWrap","filterOptions","filterSelectedOptions","getOptionDisabled","getOptionLabelProp","_option$label","label","isOptionEqualToValue","value","groupBy","handleHomeEndKeys","idProp","id","includeInputInList","inputValueProp","onChange","onClose","onHighlightChange","onInputChange","onOpen","openProp","open","openOnFocus","selectOnFocus","valueProp","idOverride","defaultId","setDefaultId","Math","round","random","useId","optionLabel","String","ignoreFocus","firstFocus","inputRef","listboxRef","anchorEl","setAnchorEl","focusedTag","setFocusedTag","defaultHighlighted","highlightedIndexRef","setValueState","setInputValueState","focused","setFocused","resetInputValue","event","newInputValue","prevValue","valueChange","setOpenState","inputPristine","setInputPristine","inputValueIsSelectedValue","popupOpen","some","value2","listboxAvailable","focusTag","useEventCallback","tagToFocus","focus","querySelector","setHighlightedIndex","index","reason","removeAttribute","setAttribute","prev","classList","remove","listboxNode","parentElement","add","scrollHeight","clientHeight","element","scrollBottom","scrollTop","elementBottom","offsetTop","offsetHeight","changeHighlightedIndex","diff","direction","nextIndex","nextFocus","nextFocusDisabled","getAttribute","hasAttribute","validOptionIndex","maxIndex","newIndex","abs","getNextIndex","setSelectionRange","syncHighlightedIndex","valueItem","currentOption","val","itemIndex","optionItem","handleListboxRef","node","setRef","handleOpen","handleClose","handleValue","details","isTouch","selectNewValue","reasonProp","origin","Array","isArray","push","splice","ctrlKey","metaKey","blur","handleFocusTag","nextTag","validTagIndex","handleClear","handleKeyDown","other","onKeyDown","defaultMuiPrevented","key","which","preventDefault","stopPropagation","handleFocus","handleBlur","contains","document","activeElement","handleInputChange","target","handleOptionMouseOver","Number","currentTarget","handleOptionTouchStart","handleOptionClick","handleTagDelete","handlePopupIndicator","handleMouseDown","handleClick","selectionEnd","selectionStart","select","handleInputMouseDown","dirty","groupedOptions","Map","reduce","acc","group","getRootProps","_extends","role","onMouseDown","onClick","getInputLabelProps","htmlFor","getInputProps","onBlur","onFocus","ref","autoCapitalize","spellCheck","getClearProps","tabIndex","getPopupIndicatorProps","getTagProps","onDelete","getListboxProps","getOptionProps","selected","onMouseOver","onTouchStart","getAutocompleteUtilityClass","slot","generateUtilityClass","_ClearIcon","_ArrowDropDownIcon","autocompleteClasses","generateUtilityClasses","_excluded","AutocompleteRoot","styled","overridesResolver","styles","styleProps","fullWidth","hasClearIcon","hasPopupIcon","inputFocused","size","tag","capitalize","inputRoot","root","clearIndicator","visibility","width","margin","maxWidth","flexWrap","paddingRight","minWidth","paddingBottom","padding","endAdornment","right","paddingTop","paddingLeft","flexGrow","textOverflow","opacity","AutocompleteEndAdornment","position","top","AutocompleteClearIndicator","IconButton","marginRight","AutocompletePopupIndicator","popupIndicator","popupIndicatorOpen","transform","AutocompletePopper","Popper","popper","disablePortal","popperDisablePortal","theme","zIndex","modal","AutocompletePaper","Paper","paper","typography","body1","overflow","AutocompleteLoading","loading","color","palette","text","secondary","AutocompleteNoOptions","noOptions","AutocompleteListbox","listbox","listStyle","maxHeight","minHeight","display","justifyContent","alignItems","cursor","boxSizing","outline","WebkitTapHighlightColor","breakpoints","up","backgroundColor","action","hover","disabledOpacity","pointerEvents","focusVisible","alpha","primary","main","selectedOpacity","hoverOpacity","focusOpacity","AutocompleteGroupLabel","ListSubheader","groupLabel","background","AutocompleteGroupUl","groupUl","Autocomplete","inProps","_componentsProps$clea","startAdornment","useThemeProps","ChipProps","className","clearIcon","_jsx","ClearIcon","fontSize","clearText","closeText","componentsProps","forcePopupIcon","getLimitTagsText","more","limitTags","ListboxComponent","ListboxProps","loadingText","noOptionsText","openText","PaperComponent","PopperComponent","popupIcon","ArrowDropDownIcon","renderGroupProp","renderGroup","renderInput","renderOptionProp","renderOption","renderTags","_objectWithoutPropertiesLoose","classes","slots","composeClasses","useUtilityClasses","getCustomizedTagProps","params","clsx","map","Chip","children","_jsxs","component","props2","renderListOption","optionProps","InputLabelProps","InputProps","title","inputProps","as","style","clientWidth","option2","index2","createSvgIcon","d","getChipUtilityClass","chipClasses","ChipRoot","clickable","variant","avatar","icon","deleteIcon","deletable","deleteIconColor","fontFamily","pxToRem","height","borderRadius","whiteSpace","transition","transitions","create","textDecoration","border","verticalAlign","marginLeft","mode","grey","avatarColorPrimary","contrastText","dark","avatarColorSecondary","avatarSmall","userSelect","boxShadow","shadows","iconSmall","deleteIconSmall","ChipLabel","isDeleteKeyboardEvent","keyboardEvent","avatarProp","clickableProp","ComponentProp","deleteIconProp","iconProp","onKeyUp","chipRef","handleRef","useForkRef","handleDeleteIconClick","small","ButtonBase","moreProps","focusVisibleClassName","disableRipple","Boolean","customClasses","CancelIcon"],"mappings":"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","file":"static/js/4.1473b5f4.chunk.js","sourcesContent":["/* eslint-disable react-hooks/rules-of-hooks, react-hooks/exhaustive-deps */\nimport * as React from 'react';\nexport default function useControlled({\n  controlled,\n  default: defaultProp,\n  name,\n  state = 'value'\n}) {\n  // isControlled is ignored in the hook dependency lists as it should never change.\n  const {\n    current: isControlled\n  } = React.useRef(controlled !== undefined);\n  const [valueState, setValue] = React.useState(defaultProp);\n  const value = isControlled ? controlled : valueState;\n\n  if (process.env.NODE_ENV !== 'production') {\n    React.useEffect(() => {\n      if (isControlled !== (controlled !== undefined)) {\n        console.error([`Material-UI: A component is changing the ${isControlled ? '' : 'un'}controlled ${state} state of ${name} to be ${isControlled ? 'un' : ''}controlled.`, 'Elements should not switch from uncontrolled to controlled (or vice versa).', `Decide between using a controlled or uncontrolled ${name} ` + 'element for the lifetime of the component.', \"The nature of the state is determined during the first render. It's considered controlled if the value is not `undefined`.\", 'More info: https://fb.me/react-controlled-components'].join('\\n'));\n      }\n    }, [state, name, controlled]);\n    const {\n      current: defaultValue\n    } = React.useRef(defaultProp);\n    React.useEffect(() => {\n      if (!isControlled && defaultValue !== defaultProp) {\n        console.error([`Material-UI: A component is changing the default ${state} state of an uncontrolled ${name} after being initialized. ` + `To suppress this warning opt to use a controlled ${name}.`].join('\\n'));\n      }\n    }, [JSON.stringify(defaultProp)]);\n  }\n\n  const setValueIfUncontrolled = React.useCallback(newValue => {\n    if (!isControlled) {\n      setValue(newValue);\n    }\n  }, []);\n  return [value, setValueIfUncontrolled];\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\n\n/* eslint-disable no-constant-condition */\nimport * as React from 'react';\nimport { unstable_setRef as setRef, unstable_useEventCallback as useEventCallback, unstable_useControlled as useControlled, unstable_useId as useId } from '@material-ui/utils'; // https://stackoverflow.com/questions/990904/remove-accents-diacritics-in-a-string-in-javascript\n// Give up on IE11 support for this feature\n\nfunction stripDiacritics(string) {\n  return typeof string.normalize !== 'undefined' ? string.normalize('NFD').replace(/[\\u0300-\\u036f]/g, '') : string;\n}\n\nexport function createFilterOptions(config = {}) {\n  const {\n    ignoreAccents = true,\n    ignoreCase = true,\n    limit,\n    matchFrom = 'any',\n    stringify,\n    trim = false\n  } = config;\n  return (options, {\n    inputValue,\n    getOptionLabel\n  }) => {\n    let input = trim ? inputValue.trim() : inputValue;\n\n    if (ignoreCase) {\n      input = input.toLowerCase();\n    }\n\n    if (ignoreAccents) {\n      input = stripDiacritics(input);\n    }\n\n    const filteredOptions = options.filter(option => {\n      let candidate = (stringify || getOptionLabel)(option);\n\n      if (ignoreCase) {\n        candidate = candidate.toLowerCase();\n      }\n\n      if (ignoreAccents) {\n        candidate = stripDiacritics(candidate);\n      }\n\n      return matchFrom === 'start' ? candidate.indexOf(input) === 0 : candidate.indexOf(input) > -1;\n    });\n    return typeof limit === 'number' ? filteredOptions.slice(0, limit) : filteredOptions;\n  };\n} // To replace with .findIndex() once we stop IE11 support.\n\nfunction findIndex(array, comp) {\n  for (let i = 0; i < array.length; i += 1) {\n    if (comp(array[i])) {\n      return i;\n    }\n  }\n\n  return -1;\n}\n\nconst defaultFilterOptions = createFilterOptions(); // Number of options to jump in list box when pageup and pagedown keys are used.\n\nconst pageSize = 5;\nexport default function useAutocomplete(props) {\n  const {\n    autoComplete = false,\n    autoHighlight = false,\n    autoSelect = false,\n    blurOnSelect = false,\n    disabled: disabledProp,\n    clearOnBlur = !props.freeSolo,\n    clearOnEscape = false,\n    componentName = 'useAutocomplete',\n    defaultValue = props.multiple ? [] : null,\n    disableClearable = false,\n    disableCloseOnSelect = false,\n    disabledItemsFocusable = false,\n    disableListWrap = false,\n    filterOptions = defaultFilterOptions,\n    filterSelectedOptions = false,\n    freeSolo = false,\n    getOptionDisabled,\n    getOptionLabel: getOptionLabelProp = option => {\n      var _option$label;\n\n      return (_option$label = option.label) != null ? _option$label : option;\n    },\n    isOptionEqualToValue = (option, value) => option === value,\n    groupBy,\n    handleHomeEndKeys = !props.freeSolo,\n    id: idProp,\n    includeInputInList = false,\n    inputValue: inputValueProp,\n    multiple = false,\n    onChange,\n    onClose,\n    onHighlightChange,\n    onInputChange,\n    onOpen,\n    open: openProp,\n    openOnFocus = false,\n    options,\n    selectOnFocus = !props.freeSolo,\n    value: valueProp\n  } = props;\n  const id = useId(idProp);\n  let getOptionLabel = getOptionLabelProp;\n\n  getOptionLabel = option => {\n    const optionLabel = getOptionLabelProp(option);\n\n    if (typeof optionLabel !== 'string') {\n      if (process.env.NODE_ENV !== 'production') {\n        const erroneousReturn = optionLabel === undefined ? 'undefined' : `${typeof optionLabel} (${optionLabel})`;\n        console.error(`Material-UI: The \\`getOptionLabel\\` method of ${componentName} returned ${erroneousReturn} instead of a string for ${JSON.stringify(option)}.`);\n      }\n\n      return String(optionLabel);\n    }\n\n    return optionLabel;\n  };\n\n  const ignoreFocus = React.useRef(false);\n  const firstFocus = React.useRef(true);\n  const inputRef = React.useRef(null);\n  const listboxRef = React.useRef(null);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [focusedTag, setFocusedTag] = React.useState(-1);\n  const defaultHighlighted = autoHighlight ? 0 : -1;\n  const highlightedIndexRef = React.useRef(defaultHighlighted);\n  const [value, setValueState] = useControlled({\n    controlled: valueProp,\n    default: defaultValue,\n    name: componentName\n  });\n  const [inputValue, setInputValueState] = useControlled({\n    controlled: inputValueProp,\n    default: '',\n    name: componentName,\n    state: 'inputValue'\n  });\n  const [focused, setFocused] = React.useState(false);\n  const resetInputValue = React.useCallback((event, newValue) => {\n    let newInputValue;\n\n    if (multiple) {\n      newInputValue = '';\n    } else if (newValue == null) {\n      newInputValue = '';\n    } else {\n      const optionLabel = getOptionLabel(newValue);\n      newInputValue = typeof optionLabel === 'string' ? optionLabel : '';\n    }\n\n    if (inputValue === newInputValue) {\n      return;\n    }\n\n    setInputValueState(newInputValue);\n\n    if (onInputChange) {\n      onInputChange(event, newInputValue, 'reset');\n    }\n  }, [getOptionLabel, inputValue, multiple, onInputChange, setInputValueState]);\n  const prevValue = React.useRef();\n  React.useEffect(() => {\n    const valueChange = value !== prevValue.current;\n    prevValue.current = value;\n\n    if (focused && !valueChange) {\n      return;\n    }\n\n    resetInputValue(null, value);\n  }, [value, resetInputValue, focused, prevValue]);\n  const [open, setOpenState] = useControlled({\n    controlled: openProp,\n    default: false,\n    name: componentName,\n    state: 'open'\n  });\n  const [inputPristine, setInputPristine] = React.useState(true);\n  const inputValueIsSelectedValue = !multiple && value != null && inputValue === getOptionLabel(value);\n  const popupOpen = open;\n  const filteredOptions = popupOpen ? filterOptions(options.filter(option => {\n    if (filterSelectedOptions && (multiple ? value : [value]).some(value2 => value2 !== null && isOptionEqualToValue(option, value2))) {\n      return false;\n    }\n\n    return true;\n  }), // we use the empty string to manipulate `filterOptions` to not filter any options\n  // i.e. the filter predicate always returns true\n  {\n    inputValue: inputValueIsSelectedValue && inputPristine ? '' : inputValue,\n    getOptionLabel\n  }) : [];\n  const listboxAvailable = open && filteredOptions.length > 0;\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (value !== null && !freeSolo && options.length > 0) {\n      const missingValue = (multiple ? value : [value]).filter(value2 => !options.some(option => isOptionEqualToValue(option, value2)));\n\n      if (missingValue.length > 0) {\n        console.warn([`Material-UI: The value provided to ${componentName} is invalid.`, `None of the options match with \\`${missingValue.length > 1 ? JSON.stringify(missingValue) : JSON.stringify(missingValue[0])}\\`.`, 'You can use the `isOptionEqualToValue` prop to customize the equality test.'].join('\\n'));\n      }\n    }\n  }\n\n  const focusTag = useEventCallback(tagToFocus => {\n    if (tagToFocus === -1) {\n      inputRef.current.focus();\n    } else {\n      anchorEl.querySelector(`[data-tag-index=\"${tagToFocus}\"]`).focus();\n    }\n  }); // Ensure the focusedTag is never inconsistent\n\n  React.useEffect(() => {\n    if (multiple && focusedTag > value.length - 1) {\n      setFocusedTag(-1);\n      focusTag(-1);\n    }\n  }, [value, multiple, focusedTag, focusTag]);\n\n  function validOptionIndex(index, direction) {\n    if (!listboxRef.current || index === -1) {\n      return -1;\n    }\n\n    let nextFocus = index;\n\n    while (true) {\n      // Out of range\n      if (direction === 'next' && nextFocus === filteredOptions.length || direction === 'previous' && nextFocus === -1) {\n        return -1;\n      }\n\n      const option = listboxRef.current.querySelector(`[data-option-index=\"${nextFocus}\"]`); // Same logic as MenuList.js\n\n      const nextFocusDisabled = disabledItemsFocusable ? false : !option || option.disabled || option.getAttribute('aria-disabled') === 'true';\n\n      if (option && !option.hasAttribute('tabindex') || nextFocusDisabled) {\n        // Move to the next element.\n        nextFocus += direction === 'next' ? 1 : -1;\n      } else {\n        return nextFocus;\n      }\n    }\n  }\n\n  const setHighlightedIndex = useEventCallback(({\n    event,\n    index,\n    reason = 'auto'\n  }) => {\n    highlightedIndexRef.current = index; // does the index exist?\n\n    if (index === -1) {\n      inputRef.current.removeAttribute('aria-activedescendant');\n    } else {\n      inputRef.current.setAttribute('aria-activedescendant', `${id}-option-${index}`);\n    }\n\n    if (onHighlightChange) {\n      onHighlightChange(event, index === -1 ? null : filteredOptions[index], reason);\n    }\n\n    if (!listboxRef.current) {\n      return;\n    }\n\n    const prev = listboxRef.current.querySelector('[role=\"option\"].Mui-focused');\n\n    if (prev) {\n      prev.classList.remove('Mui-focused');\n      prev.classList.remove('Mui-focusVisible');\n    }\n\n    const listboxNode = listboxRef.current.parentElement.querySelector('[role=\"listbox\"]'); // \"No results\"\n\n    if (!listboxNode) {\n      return;\n    }\n\n    if (index === -1) {\n      listboxNode.scrollTop = 0;\n      return;\n    }\n\n    const option = listboxRef.current.querySelector(`[data-option-index=\"${index}\"]`);\n\n    if (!option) {\n      return;\n    }\n\n    option.classList.add('Mui-focused');\n\n    if (reason === 'keyboard') {\n      option.classList.add('Mui-focusVisible');\n    } // Scroll active descendant into view.\n    // Logic copied from https://www.w3.org/TR/wai-aria-practices/examples/listbox/js/listbox.js\n    //\n    // Consider this API instead once it has a better browser support:\n    // .scrollIntoView({ scrollMode: 'if-needed', block: 'nearest' });\n\n\n    if (listboxNode.scrollHeight > listboxNode.clientHeight && reason !== 'mouse') {\n      const element = option;\n      const scrollBottom = listboxNode.clientHeight + listboxNode.scrollTop;\n      const elementBottom = element.offsetTop + element.offsetHeight;\n\n      if (elementBottom > scrollBottom) {\n        listboxNode.scrollTop = elementBottom - listboxNode.clientHeight;\n      } else if (element.offsetTop - element.offsetHeight * (groupBy ? 1.3 : 0) < listboxNode.scrollTop) {\n        listboxNode.scrollTop = element.offsetTop - element.offsetHeight * (groupBy ? 1.3 : 0);\n      }\n    }\n  });\n  const changeHighlightedIndex = useEventCallback(({\n    event,\n    diff,\n    direction = 'next',\n    reason = 'auto'\n  }) => {\n    if (!popupOpen) {\n      return;\n    }\n\n    const getNextIndex = () => {\n      const maxIndex = filteredOptions.length - 1;\n\n      if (diff === 'reset') {\n        return defaultHighlighted;\n      }\n\n      if (diff === 'start') {\n        return 0;\n      }\n\n      if (diff === 'end') {\n        return maxIndex;\n      }\n\n      const newIndex = highlightedIndexRef.current + diff;\n\n      if (newIndex < 0) {\n        if (newIndex === -1 && includeInputInList) {\n          return -1;\n        }\n\n        if (disableListWrap && highlightedIndexRef.current !== -1 || Math.abs(diff) > 1) {\n          return 0;\n        }\n\n        return maxIndex;\n      }\n\n      if (newIndex > maxIndex) {\n        if (newIndex === maxIndex + 1 && includeInputInList) {\n          return -1;\n        }\n\n        if (disableListWrap || Math.abs(diff) > 1) {\n          return maxIndex;\n        }\n\n        return 0;\n      }\n\n      return newIndex;\n    };\n\n    const nextIndex = validOptionIndex(getNextIndex(), direction);\n    setHighlightedIndex({\n      index: nextIndex,\n      reason,\n      event\n    }); // Sync the content of the input with the highlighted option.\n\n    if (autoComplete && diff !== 'reset') {\n      if (nextIndex === -1) {\n        inputRef.current.value = inputValue;\n      } else {\n        const option = getOptionLabel(filteredOptions[nextIndex]);\n        inputRef.current.value = option; // The portion of the selected suggestion that has not been typed by the user,\n        // a completion string, appears inline after the input cursor in the textbox.\n\n        const index = option.toLowerCase().indexOf(inputValue.toLowerCase());\n\n        if (index === 0 && inputValue.length > 0) {\n          inputRef.current.setSelectionRange(inputValue.length, option.length);\n        }\n      }\n    }\n  });\n  const syncHighlightedIndex = React.useCallback(() => {\n    if (!popupOpen) {\n      return;\n    }\n\n    const valueItem = multiple ? value[0] : value; // The popup is empty, reset\n\n    if (filteredOptions.length === 0 || valueItem == null) {\n      changeHighlightedIndex({\n        diff: 'reset'\n      });\n      return;\n    }\n\n    if (!listboxRef.current) {\n      return;\n    } // Synchronize the value with the highlighted index\n\n\n    if (valueItem != null) {\n      const currentOption = filteredOptions[highlightedIndexRef.current]; // Keep the current highlighted index if possible\n\n      if (multiple && currentOption && findIndex(value, val => isOptionEqualToValue(currentOption, val)) !== -1) {\n        return;\n      }\n\n      const itemIndex = findIndex(filteredOptions, optionItem => isOptionEqualToValue(optionItem, valueItem));\n\n      if (itemIndex === -1) {\n        changeHighlightedIndex({\n          diff: 'reset'\n        });\n      } else {\n        setHighlightedIndex({\n          index: itemIndex\n        });\n      }\n\n      return;\n    } // Prevent the highlighted index to leak outside the boundaries.\n\n\n    if (highlightedIndexRef.current >= filteredOptions.length - 1) {\n      setHighlightedIndex({\n        index: filteredOptions.length - 1\n      });\n      return;\n    } // Restore the focus to the previous index.\n\n\n    setHighlightedIndex({\n      index: highlightedIndexRef.current\n    }); // Ignore filteredOptions (and options, isOptionEqualToValue, getOptionLabel) not to break the scroll position\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [// Only sync the highlighted index when the option switch between empty and not\n  filteredOptions.length, // Don't sync the highlighted index with the value when multiple\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  multiple ? false : value, filterSelectedOptions, changeHighlightedIndex, setHighlightedIndex, popupOpen, inputValue, multiple]);\n  const handleListboxRef = useEventCallback(node => {\n    setRef(listboxRef, node);\n\n    if (!node) {\n      return;\n    }\n\n    syncHighlightedIndex();\n  });\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useEffect(() => {\n      if (!inputRef.current || inputRef.current.nodeName !== 'INPUT') {\n        console.error([`Material-UI: Unable to find the input element. It was resolved to ${inputRef.current} while an HTMLInputElement was expected.`, `Instead, ${componentName} expects an input element.`, '', componentName === 'useAutocomplete' ? 'Make sure you have binded getInputProps correctly and that the normal ref/effect resolutions order is guaranteed.' : 'Make sure you have customized the input component correctly.'].join('\\n'));\n      }\n    }, [componentName]);\n  }\n\n  React.useEffect(() => {\n    syncHighlightedIndex();\n  }, [syncHighlightedIndex]);\n\n  const handleOpen = event => {\n    if (open) {\n      return;\n    }\n\n    setOpenState(true);\n    setInputPristine(true);\n\n    if (onOpen) {\n      onOpen(event);\n    }\n  };\n\n  const handleClose = (event, reason) => {\n    if (!open) {\n      return;\n    }\n\n    setOpenState(false);\n\n    if (onClose) {\n      onClose(event, reason);\n    }\n  };\n\n  const handleValue = (event, newValue, reason, details) => {\n    if (value === newValue) {\n      return;\n    }\n\n    if (onChange) {\n      onChange(event, newValue, reason, details);\n    }\n\n    setValueState(newValue);\n  };\n\n  const isTouch = React.useRef(false);\n\n  const selectNewValue = (event, option, reasonProp = 'selectOption', origin = 'options') => {\n    let reason = reasonProp;\n    let newValue = option;\n\n    if (multiple) {\n      newValue = Array.isArray(value) ? value.slice() : [];\n\n      if (process.env.NODE_ENV !== 'production') {\n        const matches = newValue.filter(val => isOptionEqualToValue(option, val));\n\n        if (matches.length > 1) {\n          console.error([`Material-UI: The \\`isOptionEqualToValue\\` method of ${componentName} do not handle the arguments correctly.`, `The component expects a single value to match a given option but found ${matches.length} matches.`].join('\\n'));\n        }\n      }\n\n      const itemIndex = findIndex(newValue, valueItem => isOptionEqualToValue(option, valueItem));\n\n      if (itemIndex === -1) {\n        newValue.push(option);\n      } else if (origin !== 'freeSolo') {\n        newValue.splice(itemIndex, 1);\n        reason = 'removeOption';\n      }\n    }\n\n    resetInputValue(event, newValue);\n    handleValue(event, newValue, reason, {\n      option\n    });\n\n    if (!disableCloseOnSelect && !event.ctrlKey && !event.metaKey) {\n      handleClose(event, reason);\n    }\n\n    if (blurOnSelect === true || blurOnSelect === 'touch' && isTouch.current || blurOnSelect === 'mouse' && !isTouch.current) {\n      inputRef.current.blur();\n    }\n  };\n\n  function validTagIndex(index, direction) {\n    if (index === -1) {\n      return -1;\n    }\n\n    let nextFocus = index;\n\n    while (true) {\n      // Out of range\n      if (direction === 'next' && nextFocus === value.length || direction === 'previous' && nextFocus === -1) {\n        return -1;\n      }\n\n      const option = anchorEl.querySelector(`[data-tag-index=\"${nextFocus}\"]`); // Same logic as MenuList.js\n\n      if (!option || !option.hasAttribute('tabindex') || option.disabled || option.getAttribute('aria-disabled') === 'true') {\n        nextFocus += direction === 'next' ? 1 : -1;\n      } else {\n        return nextFocus;\n      }\n    }\n  }\n\n  const handleFocusTag = (event, direction) => {\n    if (!multiple) {\n      return;\n    }\n\n    handleClose(event, 'toggleInput');\n    let nextTag = focusedTag;\n\n    if (focusedTag === -1) {\n      if (inputValue === '' && direction === 'previous') {\n        nextTag = value.length - 1;\n      }\n    } else {\n      nextTag += direction === 'next' ? 1 : -1;\n\n      if (nextTag < 0) {\n        nextTag = 0;\n      }\n\n      if (nextTag === value.length) {\n        nextTag = -1;\n      }\n    }\n\n    nextTag = validTagIndex(nextTag, direction);\n    setFocusedTag(nextTag);\n    focusTag(nextTag);\n  };\n\n  const handleClear = event => {\n    ignoreFocus.current = true;\n    setInputValueState('');\n\n    if (onInputChange) {\n      onInputChange(event, '', 'clear');\n    }\n\n    handleValue(event, multiple ? [] : null, 'clear');\n  };\n\n  const handleKeyDown = other => event => {\n    if (other.onKeyDown) {\n      other.onKeyDown(event);\n    }\n\n    if (event.defaultMuiPrevented) {\n      return;\n    }\n\n    if (focusedTag !== -1 && ['ArrowLeft', 'ArrowRight'].indexOf(event.key) === -1) {\n      setFocusedTag(-1);\n      focusTag(-1);\n    } // Wait until IME is settled.\n\n\n    if (event.which !== 229) {\n      switch (event.key) {\n        case 'Home':\n          if (popupOpen && handleHomeEndKeys) {\n            // Prevent scroll of the page\n            event.preventDefault();\n            changeHighlightedIndex({\n              diff: 'start',\n              direction: 'next',\n              reason: 'keyboard',\n              event\n            });\n          }\n\n          break;\n\n        case 'End':\n          if (popupOpen && handleHomeEndKeys) {\n            // Prevent scroll of the page\n            event.preventDefault();\n            changeHighlightedIndex({\n              diff: 'end',\n              direction: 'previous',\n              reason: 'keyboard',\n              event\n            });\n          }\n\n          break;\n\n        case 'PageUp':\n          // Prevent scroll of the page\n          event.preventDefault();\n          changeHighlightedIndex({\n            diff: -pageSize,\n            direction: 'previous',\n            reason: 'keyboard',\n            event\n          });\n          handleOpen(event);\n          break;\n\n        case 'PageDown':\n          // Prevent scroll of the page\n          event.preventDefault();\n          changeHighlightedIndex({\n            diff: pageSize,\n            direction: 'next',\n            reason: 'keyboard',\n            event\n          });\n          handleOpen(event);\n          break;\n\n        case 'ArrowDown':\n          // Prevent cursor move\n          event.preventDefault();\n          changeHighlightedIndex({\n            diff: 1,\n            direction: 'next',\n            reason: 'keyboard',\n            event\n          });\n          handleOpen(event);\n          break;\n\n        case 'ArrowUp':\n          // Prevent cursor move\n          event.preventDefault();\n          changeHighlightedIndex({\n            diff: -1,\n            direction: 'previous',\n            reason: 'keyboard',\n            event\n          });\n          handleOpen(event);\n          break;\n\n        case 'ArrowLeft':\n          handleFocusTag(event, 'previous');\n          break;\n\n        case 'ArrowRight':\n          handleFocusTag(event, 'next');\n          break;\n\n        case 'Enter':\n          if (highlightedIndexRef.current !== -1 && popupOpen) {\n            const option = filteredOptions[highlightedIndexRef.current];\n            const disabled = getOptionDisabled ? getOptionDisabled(option) : false; // Avoid early form validation, let the end-users continue filling the form.\n\n            event.preventDefault();\n\n            if (disabled) {\n              return;\n            }\n\n            selectNewValue(event, option, 'selectOption'); // Move the selection to the end.\n\n            if (autoComplete) {\n              inputRef.current.setSelectionRange(inputRef.current.value.length, inputRef.current.value.length);\n            }\n          } else if (freeSolo && inputValue !== '' && inputValueIsSelectedValue === false) {\n            if (multiple) {\n              // Allow people to add new values before they submit the form.\n              event.preventDefault();\n            }\n\n            selectNewValue(event, inputValue, 'createOption', 'freeSolo');\n          }\n\n          break;\n\n        case 'Escape':\n          if (popupOpen) {\n            // Avoid Opera to exit fullscreen mode.\n            event.preventDefault(); // Avoid the Modal to handle the event.\n\n            event.stopPropagation();\n            handleClose(event, 'escape');\n          } else if (clearOnEscape && (inputValue !== '' || multiple && value.length > 0)) {\n            // Avoid Opera to exit fullscreen mode.\n            event.preventDefault(); // Avoid the Modal to handle the event.\n\n            event.stopPropagation();\n            handleClear(event);\n          }\n\n          break;\n\n        case 'Backspace':\n          if (multiple && inputValue === '' && value.length > 0) {\n            const index = focusedTag === -1 ? value.length - 1 : focusedTag;\n            const newValue = value.slice();\n            newValue.splice(index, 1);\n            handleValue(event, newValue, 'removeOption', {\n              option: value[index]\n            });\n          }\n\n          break;\n\n        default:\n      }\n    }\n  };\n\n  const handleFocus = event => {\n    setFocused(true);\n\n    if (openOnFocus && !ignoreFocus.current) {\n      handleOpen(event);\n    }\n  };\n\n  const handleBlur = event => {\n    // Ignore the event when using the scrollbar with IE11\n    if (listboxRef.current !== null && listboxRef.current.parentElement.contains(document.activeElement)) {\n      inputRef.current.focus();\n      return;\n    }\n\n    setFocused(false);\n    firstFocus.current = true;\n    ignoreFocus.current = false;\n\n    if (autoSelect && highlightedIndexRef.current !== -1 && popupOpen) {\n      selectNewValue(event, filteredOptions[highlightedIndexRef.current], 'blur');\n    } else if (autoSelect && freeSolo && inputValue !== '') {\n      selectNewValue(event, inputValue, 'blur', 'freeSolo');\n    } else if (clearOnBlur) {\n      resetInputValue(event, value);\n    }\n\n    handleClose(event, 'blur');\n  };\n\n  const handleInputChange = event => {\n    const newValue = event.target.value;\n\n    if (inputValue !== newValue) {\n      setInputValueState(newValue);\n      setInputPristine(false);\n\n      if (onInputChange) {\n        onInputChange(event, newValue, 'input');\n      }\n    }\n\n    if (newValue === '') {\n      if (!disableClearable && !multiple) {\n        handleValue(event, null, 'clear');\n      }\n    } else {\n      handleOpen(event);\n    }\n  };\n\n  const handleOptionMouseOver = event => {\n    setHighlightedIndex({\n      event,\n      index: Number(event.currentTarget.getAttribute('data-option-index')),\n      reason: 'mouse'\n    });\n  };\n\n  const handleOptionTouchStart = () => {\n    isTouch.current = true;\n  };\n\n  const handleOptionClick = event => {\n    const index = Number(event.currentTarget.getAttribute('data-option-index'));\n    selectNewValue(event, filteredOptions[index], 'selectOption');\n    isTouch.current = false;\n  };\n\n  const handleTagDelete = index => event => {\n    const newValue = value.slice();\n    newValue.splice(index, 1);\n    handleValue(event, newValue, 'removeOption', {\n      option: value[index]\n    });\n  };\n\n  const handlePopupIndicator = event => {\n    if (open) {\n      handleClose(event, 'toggleInput');\n    } else {\n      handleOpen(event);\n    }\n  }; // Prevent input blur when interacting with the combobox\n\n\n  const handleMouseDown = event => {\n    if (event.target.getAttribute('id') !== id) {\n      event.preventDefault();\n    }\n  }; // Focus the input when interacting with the combobox\n\n\n  const handleClick = () => {\n    inputRef.current.focus();\n\n    if (selectOnFocus && firstFocus.current && inputRef.current.selectionEnd - inputRef.current.selectionStart === 0) {\n      inputRef.current.select();\n    }\n\n    firstFocus.current = false;\n  };\n\n  const handleInputMouseDown = event => {\n    if (inputValue === '' || !open) {\n      handlePopupIndicator(event);\n    }\n  };\n\n  let dirty = freeSolo && inputValue.length > 0;\n  dirty = dirty || (multiple ? value.length > 0 : value !== null);\n  let groupedOptions = filteredOptions;\n\n  if (groupBy) {\n    // used to keep track of key and indexes in the result array\n    const indexBy = new Map();\n    let warn = false;\n    groupedOptions = filteredOptions.reduce((acc, option, index) => {\n      const group = groupBy(option);\n\n      if (acc.length > 0 && acc[acc.length - 1].group === group) {\n        acc[acc.length - 1].options.push(option);\n      } else {\n        if (process.env.NODE_ENV !== 'production') {\n          if (indexBy.get(group) && !warn) {\n            console.warn(`Material-UI: The options provided combined with the \\`groupBy\\` method of ${componentName} returns duplicated headers.`, 'You can solve the issue by sorting the options with the output of `groupBy`.');\n            warn = true;\n          }\n\n          indexBy.set(group, true);\n        }\n\n        acc.push({\n          key: index,\n          index,\n          group,\n          options: [option]\n        });\n      }\n\n      return acc;\n    }, []);\n  }\n\n  if (disabledProp && focused) {\n    handleBlur();\n  }\n\n  return {\n    getRootProps: (other = {}) => _extends({\n      'aria-owns': listboxAvailable ? `${id}-listbox` : null,\n      role: 'combobox',\n      'aria-expanded': listboxAvailable\n    }, other, {\n      onKeyDown: handleKeyDown(other),\n      onMouseDown: handleMouseDown,\n      onClick: handleClick\n    }),\n    getInputLabelProps: () => ({\n      id: `${id}-label`,\n      htmlFor: id\n    }),\n    getInputProps: () => ({\n      id,\n      value: inputValue,\n      onBlur: handleBlur,\n      onFocus: handleFocus,\n      onChange: handleInputChange,\n      onMouseDown: handleInputMouseDown,\n      // if open then this is handled imperativeley so don't let react override\n      // only have an opinion about this when closed\n      'aria-activedescendant': popupOpen ? '' : null,\n      'aria-autocomplete': autoComplete ? 'both' : 'list',\n      'aria-controls': listboxAvailable ? `${id}-listbox` : null,\n      // Disable browser's suggestion that might overlap with the popup.\n      // Handle autocomplete but not autofill.\n      autoComplete: 'off',\n      ref: inputRef,\n      autoCapitalize: 'none',\n      spellCheck: 'false'\n    }),\n    getClearProps: () => ({\n      tabIndex: -1,\n      onClick: handleClear\n    }),\n    getPopupIndicatorProps: () => ({\n      tabIndex: -1,\n      onClick: handlePopupIndicator\n    }),\n    getTagProps: ({\n      index\n    }) => ({\n      key: index,\n      'data-tag-index': index,\n      tabIndex: -1,\n      onDelete: handleTagDelete(index)\n    }),\n    getListboxProps: () => ({\n      role: 'listbox',\n      id: `${id}-listbox`,\n      'aria-labelledby': `${id}-label`,\n      ref: handleListboxRef,\n      onMouseDown: event => {\n        // Prevent blur\n        event.preventDefault();\n      }\n    }),\n    getOptionProps: ({\n      index,\n      option\n    }) => {\n      const selected = (multiple ? value : [value]).some(value2 => value2 != null && isOptionEqualToValue(option, value2));\n      const disabled = getOptionDisabled ? getOptionDisabled(option) : false;\n      return {\n        key: getOptionLabel(option),\n        tabIndex: -1,\n        role: 'option',\n        id: `${id}-option-${index}`,\n        onMouseOver: handleOptionMouseOver,\n        onClick: handleOptionClick,\n        onTouchStart: handleOptionTouchStart,\n        'data-option-index': index,\n        'aria-disabled': disabled,\n        'aria-selected': selected\n      };\n    },\n    id,\n    inputValue,\n    value,\n    dirty,\n    popupOpen,\n    focused: focused || focusedTag !== -1,\n    anchorEl,\n    setAnchorEl,\n    focusedTag,\n    groupedOptions\n  };\n}","import * as React from 'react';\nexport default function useId(idOverride) {\n  const [defaultId, setDefaultId] = React.useState(idOverride);\n  const id = idOverride || defaultId;\n  React.useEffect(() => {\n    if (defaultId == null) {\n      // Fallback to this default id when possible.\n      // Use the random value for client-side rendering only.\n      // We can't use it server-side.\n      setDefaultId(`mui-${Math.round(Math.random() * 1e9)}`);\n    }\n  }, [defaultId]);\n  return id;\n}","import { generateUtilityClass, generateUtilityClasses } from '@material-ui/unstyled';\nexport function getAutocompleteUtilityClass(slot) {\n  return generateUtilityClass('MuiAutocomplete', slot);\n}\nconst autocompleteClasses = generateUtilityClasses('MuiAutocomplete', ['root', 'fullWidth', 'focused', 'focusVisible', 'tag', 'tagSizeSmall', 'tagSizeMedium', 'hasPopupIcon', 'hasClearIcon', 'inputRoot', 'input', 'inputFocused', 'endAdornment', 'clearIndicator', 'popupIndicator', 'popupIndicatorOpen', 'popper', 'popperDisablePortal', 'paper', 'listbox', 'loading', 'noOptions', 'option', 'groupLabel', 'groupUl']);\nexport default autocompleteClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar _ClearIcon, _ArrowDropDownIcon;\n\nconst _excluded = [\"autoComplete\", \"autoHighlight\", \"autoSelect\", \"blurOnSelect\", \"ChipProps\", \"className\", \"clearIcon\", \"clearOnBlur\", \"clearOnEscape\", \"clearText\", \"closeText\", \"componentsProps\", \"defaultValue\", \"disableClearable\", \"disableCloseOnSelect\", \"disabled\", \"disabledItemsFocusable\", \"disableListWrap\", \"disablePortal\", \"filterOptions\", \"filterSelectedOptions\", \"forcePopupIcon\", \"freeSolo\", \"fullWidth\", \"getLimitTagsText\", \"getOptionDisabled\", \"getOptionLabel\", \"isOptionEqualToValue\", \"groupBy\", \"handleHomeEndKeys\", \"id\", \"includeInputInList\", \"inputValue\", \"limitTags\", \"ListboxComponent\", \"ListboxProps\", \"loading\", \"loadingText\", \"multiple\", \"noOptionsText\", \"onChange\", \"onClose\", \"onHighlightChange\", \"onInputChange\", \"onOpen\", \"open\", \"openOnFocus\", \"openText\", \"options\", \"PaperComponent\", \"PopperComponent\", \"popupIcon\", \"renderGroup\", \"renderInput\", \"renderOption\", \"renderTags\", \"selectOnFocus\", \"size\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes, integerPropType } from '@material-ui/utils';\nimport { unstable_composeClasses as composeClasses, useAutocomplete, createFilterOptions } from '@material-ui/unstyled';\nimport { alpha } from '@material-ui/system';\nimport Popper from '../Popper';\nimport ListSubheader from '../ListSubheader';\nimport Paper from '../Paper';\nimport IconButton from '../IconButton';\nimport Chip from '../Chip';\nimport ClearIcon from '../internal/svg-icons/Close';\nimport ArrowDropDownIcon from '../internal/svg-icons/ArrowDropDown';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport autocompleteClasses, { getAutocompleteUtilityClass } from './autocompleteClasses';\nimport capitalize from '../utils/capitalize';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes,\n    disablePortal,\n    focused,\n    fullWidth,\n    hasClearIcon,\n    hasPopupIcon,\n    inputFocused,\n    popupOpen,\n    size\n  } = styleProps;\n  const slots = {\n    root: ['root', focused && 'focused', fullWidth && 'fullWidth', hasClearIcon && 'hasClearIcon', hasPopupIcon && 'hasPopupIcon'],\n    inputRoot: ['inputRoot'],\n    input: ['input', inputFocused && 'inputFocused'],\n    tag: ['tag', `tagSize${capitalize(size)}`],\n    endAdornment: ['endAdornment'],\n    clearIndicator: ['clearIndicator'],\n    popupIndicator: ['popupIndicator', popupOpen && 'popupIndicatorOpen'],\n    popper: ['popper', disablePortal && 'popperDisablePortal'],\n    paper: ['paper'],\n    listbox: ['listbox'],\n    loading: ['loading'],\n    noOptions: ['noOptions'],\n    option: ['option'],\n    groupLabel: ['groupLabel'],\n    groupUl: ['groupUl']\n  };\n  return composeClasses(slots, getAutocompleteUtilityClass, classes);\n};\n\nconst AutocompleteRoot = styled('div', {\n  name: 'MuiAutocomplete',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      styleProps\n    } = props;\n    const {\n      fullWidth,\n      hasClearIcon,\n      hasPopupIcon,\n      inputFocused,\n      size\n    } = styleProps;\n    return [{\n      [`& .${autocompleteClasses.tag}`]: styles.tag\n    }, {\n      [`& .${autocompleteClasses.tag}`]: styles[`tagSize${capitalize(size)}`]\n    }, {\n      [`& .${autocompleteClasses.inputRoot}`]: styles.inputRoot\n    }, {\n      [`& .${autocompleteClasses.input}`]: styles.input\n    }, {\n      [`& .${autocompleteClasses.input}`]: inputFocused && styles.inputFocused\n    }, styles.root, fullWidth && styles.fullWidth, hasPopupIcon && styles.hasPopupIcon, hasClearIcon && styles.hasClearIcon];\n  }\n})(({\n  styleProps\n}) => _extends({\n  [`&.${autocompleteClasses.focused} .${autocompleteClasses.clearIndicator}`]: {\n    visibility: 'visible'\n  },\n\n  /* Avoid double tap issue on iOS */\n  '@media (pointer: fine)': {\n    [`&:hover .${autocompleteClasses.clearIndicator}`]: {\n      visibility: 'visible'\n    }\n  }\n}, styleProps.fullWidth && {\n  width: '100%'\n}, {\n  [`& .${autocompleteClasses.tag}`]: _extends({\n    margin: 3,\n    maxWidth: 'calc(100% - 6px)'\n  }, styleProps.size === 'small' && {\n    margin: 2,\n    maxWidth: 'calc(100% - 4px)'\n  }),\n  [`& .${autocompleteClasses.inputRoot}`]: {\n    flexWrap: 'wrap',\n    [`.${autocompleteClasses.hasPopupIcon}&, .${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 26 + 4\n    },\n    [`.${autocompleteClasses.hasPopupIcon}.${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 52 + 4\n    },\n    [`& .${autocompleteClasses.input}`]: {\n      width: 0,\n      minWidth: 30\n    }\n  },\n  '& .MuiInput-root': {\n    paddingBottom: 1,\n    '& .MuiInput-input': {\n      padding: '4px 4px 4px 0px'\n    }\n  },\n  '& .MuiInput-root.MuiInputBase-sizeSmall': {\n    '& .MuiInput-input': {\n      padding: '2px 4px 3px 0'\n    }\n  },\n  '& .MuiOutlinedInput-root': {\n    padding: 9,\n    [`.${autocompleteClasses.hasPopupIcon}&, .${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 26 + 4 + 9\n    },\n    [`.${autocompleteClasses.hasPopupIcon}.${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 52 + 4 + 9\n    },\n    [`& .${autocompleteClasses.input}`]: {\n      padding: '7.5px 4px 7.5px 6px'\n    },\n    [`& .${autocompleteClasses.endAdornment}`]: {\n      right: 9\n    }\n  },\n  '& .MuiOutlinedInput-root.MuiInputBase-sizeSmall': {\n    padding: 6,\n    [`& .${autocompleteClasses.input}`]: {\n      padding: '2.5px 4px 2.5px 6px'\n    }\n  },\n  '& .MuiFilledInput-root': {\n    paddingTop: 19,\n    paddingLeft: 8,\n    [`.${autocompleteClasses.hasPopupIcon}&, .${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 26 + 4 + 9\n    },\n    [`.${autocompleteClasses.hasPopupIcon}.${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 52 + 4 + 9\n    },\n    '& .MuiFilledInput-input': {\n      padding: '7px 4px'\n    },\n    [`& .${autocompleteClasses.endAdornment}`]: {\n      right: 9\n    }\n  },\n  '& .MuiFilledInput-root.MuiInputBase-sizeSmall': {\n    paddingBottom: 1,\n    '& .MuiFilledInput-input': {\n      padding: '2.5px 4px'\n    }\n  },\n  [`& .${autocompleteClasses.input}`]: _extends({\n    flexGrow: 1,\n    textOverflow: 'ellipsis',\n    opacity: 0\n  }, styleProps.inputFocused && {\n    opacity: 1\n  })\n}));\nconst AutocompleteEndAdornment = styled('div', {\n  name: 'MuiAutocomplete',\n  slot: 'EndAdornment',\n  overridesResolver: (props, styles) => styles.endAdornment\n})({\n  // We use a position absolute to support wrapping tags.\n  position: 'absolute',\n  right: 0,\n  top: 'calc(50% - 14px)' // Center vertically\n\n});\nconst AutocompleteClearIndicator = styled(IconButton, {\n  name: 'MuiAutocomplete',\n  slot: 'ClearIndicator',\n  overridesResolver: (props, styles) => styles.clearIndicator\n})({\n  marginRight: -2,\n  padding: 4,\n  visibility: 'hidden'\n});\nconst AutocompletePopupIndicator = styled(IconButton, {\n  name: 'MuiAutocomplete',\n  slot: 'PopupIndicator',\n  overridesResolver: ({\n    styleProps\n  }, styles) => _extends({}, styles.popupIndicator, styleProps.popupOpen && styles.popupIndicatorOpen)\n})(({\n  styleProps\n}) => _extends({\n  padding: 2,\n  marginRight: -2\n}, styleProps.popupOpen && {\n  transform: 'rotate(180deg)'\n}));\nconst AutocompletePopper = styled(Popper, {\n  name: 'MuiAutocomplete',\n  slot: 'Popper',\n  overridesResolver: (props, styles) => {\n    const {\n      styleProps\n    } = props;\n    return [{\n      [`& .${autocompleteClasses.option}`]: styles.option\n    }, styles.popper, styleProps.disablePortal && styles.popperDisablePortal];\n  }\n})(({\n  theme,\n  styleProps\n}) => _extends({\n  zIndex: theme.zIndex.modal\n}, styleProps.disablePortal && {\n  position: 'absolute'\n}));\nconst AutocompletePaper = styled(Paper, {\n  name: 'MuiAutocomplete',\n  slot: 'Paper',\n  overridesResolver: (props, styles) => styles.paper\n})(({\n  theme\n}) => _extends({}, theme.typography.body1, {\n  overflow: 'auto'\n}));\nconst AutocompleteLoading = styled('div', {\n  name: 'MuiAutocomplete',\n  slot: 'Loading',\n  overridesResolver: (props, styles) => styles.loading\n})(({\n  theme\n}) => ({\n  color: theme.palette.text.secondary,\n  padding: '14px 16px'\n}));\nconst AutocompleteNoOptions = styled('div', {\n  name: 'MuiAutocomplete',\n  slot: 'NoOptions',\n  overridesResolver: (props, styles) => styles.noOptions\n})(({\n  theme\n}) => ({\n  color: theme.palette.text.secondary,\n  padding: '14px 16px'\n}));\nconst AutocompleteListbox = styled('div', {\n  name: 'MuiAutocomplete',\n  slot: 'Listbox',\n  overridesResolver: (props, styles) => styles.listbox\n})(({\n  theme\n}) => ({\n  listStyle: 'none',\n  margin: 0,\n  padding: '8px 0',\n  maxHeight: '40vh',\n  overflow: 'auto',\n  [`& .${autocompleteClasses.option}`]: {\n    minHeight: 48,\n    display: 'flex',\n    overflow: 'hidden',\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n    cursor: 'pointer',\n    paddingTop: 6,\n    boxSizing: 'border-box',\n    outline: '0',\n    WebkitTapHighlightColor: 'transparent',\n    paddingBottom: 6,\n    paddingLeft: 16,\n    paddingRight: 16,\n    [theme.breakpoints.up('sm')]: {\n      minHeight: 'auto'\n    },\n    [`&.${autocompleteClasses.focused}`]: {\n      backgroundColor: theme.palette.action.hover,\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: 'transparent'\n      }\n    },\n    '&[aria-disabled=\"true\"]': {\n      opacity: theme.palette.action.disabledOpacity,\n      pointerEvents: 'none'\n    },\n    [`&.${autocompleteClasses.focusVisible}`]: {\n      backgroundColor: theme.palette.action.focus\n    },\n    '&[aria-selected=\"true\"]': {\n      backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity),\n      [`&.${autocompleteClasses.focused}`]: {\n        backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: theme.palette.action.selected\n        }\n      },\n      [`&.${autocompleteClasses.focusVisible}`]: {\n        backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.focusOpacity)\n      }\n    }\n  }\n}));\nconst AutocompleteGroupLabel = styled(ListSubheader, {\n  name: 'MuiAutocomplete',\n  slot: 'GroupLabel',\n  overridesResolver: (props, styles) => styles.groupLabel\n})(({\n  theme\n}) => ({\n  backgroundColor: theme.palette.background.paper,\n  top: -8\n}));\nconst AutocompleteGroupUl = styled('ul', {\n  name: 'MuiAutocomplete',\n  slot: 'GroupUl',\n  overridesResolver: (props, styles) => styles.groupUl\n})({\n  padding: 0,\n  [`& .${autocompleteClasses.option}`]: {\n    paddingLeft: 24\n  }\n});\nexport { createFilterOptions };\nconst Autocomplete = /*#__PURE__*/React.forwardRef(function Autocomplete(inProps, ref) {\n  var _componentsProps$clea;\n\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiAutocomplete'\n  });\n  /* eslint-disable @typescript-eslint/no-unused-vars */\n\n  const {\n    autoComplete = false,\n    autoHighlight = false,\n    autoSelect = false,\n    blurOnSelect = false,\n    ChipProps,\n    className,\n    clearIcon = _ClearIcon || (_ClearIcon = /*#__PURE__*/_jsx(ClearIcon, {\n      fontSize: \"small\"\n    })),\n    clearOnBlur = !props.freeSolo,\n    clearOnEscape = false,\n    clearText = 'Clear',\n    closeText = 'Close',\n    componentsProps = {},\n    defaultValue = props.multiple ? [] : null,\n    disableClearable = false,\n    disableCloseOnSelect = false,\n    disabled = false,\n    disabledItemsFocusable = false,\n    disableListWrap = false,\n    disablePortal = false,\n    filterSelectedOptions = false,\n    forcePopupIcon = 'auto',\n    freeSolo = false,\n    fullWidth = false,\n    getLimitTagsText = more => `+${more}`,\n    getOptionLabel = option => {\n      var _option$label;\n\n      return (_option$label = option.label) != null ? _option$label : option;\n    },\n    groupBy,\n    handleHomeEndKeys = !props.freeSolo,\n    includeInputInList = false,\n    limitTags = -1,\n    ListboxComponent = 'ul',\n    ListboxProps,\n    loading = false,\n    loadingText = 'Loading…',\n    multiple = false,\n    noOptionsText = 'No options',\n    openOnFocus = false,\n    openText = 'Open',\n    PaperComponent = Paper,\n    PopperComponent = Popper,\n    popupIcon = _ArrowDropDownIcon || (_ArrowDropDownIcon = /*#__PURE__*/_jsx(ArrowDropDownIcon, {})),\n    renderGroup: renderGroupProp,\n    renderInput,\n    renderOption: renderOptionProp,\n    renderTags,\n    selectOnFocus = !props.freeSolo,\n    size = 'medium'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n  /* eslint-enable @typescript-eslint/no-unused-vars */\n\n\n  const {\n    getRootProps,\n    getInputProps,\n    getInputLabelProps,\n    getPopupIndicatorProps,\n    getClearProps,\n    getTagProps,\n    getListboxProps,\n    getOptionProps,\n    value,\n    dirty,\n    id,\n    popupOpen,\n    focused,\n    focusedTag,\n    anchorEl,\n    setAnchorEl,\n    inputValue,\n    groupedOptions\n  } = useAutocomplete(_extends({}, props, {\n    componentName: 'Autocomplete'\n  }));\n  const hasClearIcon = !disableClearable && !disabled && dirty;\n  const hasPopupIcon = (!freeSolo || forcePopupIcon === true) && forcePopupIcon !== false;\n\n  const styleProps = _extends({}, props, {\n    disablePortal,\n    focused,\n    fullWidth,\n    hasClearIcon,\n    hasPopupIcon,\n    inputFocused: focusedTag === -1,\n    popupOpen,\n    size\n  });\n\n  const classes = useUtilityClasses(styleProps);\n  let startAdornment;\n\n  if (multiple && value.length > 0) {\n    const getCustomizedTagProps = params => _extends({\n      className: clsx(classes.tag),\n      disabled\n    }, getTagProps(params));\n\n    if (renderTags) {\n      startAdornment = renderTags(value, getCustomizedTagProps);\n    } else {\n      startAdornment = value.map((option, index) => /*#__PURE__*/_jsx(Chip, _extends({\n        label: getOptionLabel(option),\n        size: size\n      }, getCustomizedTagProps({\n        index\n      }), ChipProps)));\n    }\n  }\n\n  if (limitTags > -1 && Array.isArray(startAdornment)) {\n    const more = startAdornment.length - limitTags;\n\n    if (!focused && more > 0) {\n      startAdornment = startAdornment.splice(0, limitTags);\n      startAdornment.push( /*#__PURE__*/_jsx(\"span\", {\n        className: classes.tag,\n        children: getLimitTagsText(more)\n      }, startAdornment.length));\n    }\n  }\n\n  const defaultRenderGroup = params => /*#__PURE__*/_jsxs(\"li\", {\n    children: [/*#__PURE__*/_jsx(AutocompleteGroupLabel, {\n      className: classes.groupLabel,\n      styleProps: styleProps,\n      component: \"div\",\n      children: params.group\n    }), /*#__PURE__*/_jsx(AutocompleteGroupUl, {\n      className: classes.groupUl,\n      styleProps: styleProps,\n      children: params.children\n    })]\n  }, params.key);\n\n  const renderGroup = renderGroupProp || defaultRenderGroup;\n\n  const defaultRenderOption = (props2, option) => /*#__PURE__*/_jsx(\"li\", _extends({}, props2, {\n    children: getOptionLabel(option)\n  }));\n\n  const renderOption = renderOptionProp || defaultRenderOption;\n\n  const renderListOption = (option, index) => {\n    const optionProps = getOptionProps({\n      option,\n      index\n    });\n    return renderOption(_extends({}, optionProps, {\n      className: classes.option\n    }), option, {\n      selected: optionProps['aria-selected'],\n      inputValue\n    });\n  };\n\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(AutocompleteRoot, _extends({\n      ref: ref,\n      className: clsx(classes.root, className),\n      styleProps: styleProps\n    }, getRootProps(other), {\n      children: renderInput({\n        id,\n        disabled,\n        fullWidth: true,\n        size: size === 'small' ? 'small' : undefined,\n        InputLabelProps: getInputLabelProps(),\n        InputProps: {\n          ref: setAnchorEl,\n          className: classes.inputRoot,\n          startAdornment,\n          endAdornment: /*#__PURE__*/_jsxs(AutocompleteEndAdornment, {\n            className: classes.endAdornment,\n            styleProps: styleProps,\n            children: [hasClearIcon ? /*#__PURE__*/_jsx(AutocompleteClearIndicator, _extends({}, getClearProps(), {\n              \"aria-label\": clearText,\n              title: clearText,\n              styleProps: styleProps\n            }, componentsProps.clearIndicator, {\n              className: clsx(classes.clearIndicator, (_componentsProps$clea = componentsProps.clearIndicator) == null ? void 0 : _componentsProps$clea.className),\n              children: clearIcon\n            })) : null, hasPopupIcon ? /*#__PURE__*/_jsx(AutocompletePopupIndicator, _extends({}, getPopupIndicatorProps(), {\n              disabled: disabled,\n              \"aria-label\": popupOpen ? closeText : openText,\n              title: popupOpen ? closeText : openText,\n              className: clsx(classes.popupIndicator),\n              styleProps: styleProps,\n              children: popupIcon\n            })) : null]\n          })\n        },\n        inputProps: _extends({\n          className: clsx(classes.input),\n          disabled\n        }, getInputProps())\n      })\n    })), popupOpen && anchorEl ? /*#__PURE__*/_jsx(AutocompletePopper, {\n      as: PopperComponent,\n      className: clsx(classes.popper),\n      disablePortal: disablePortal,\n      style: {\n        width: anchorEl ? anchorEl.clientWidth : null\n      },\n      styleProps: styleProps,\n      role: \"presentation\",\n      anchorEl: anchorEl,\n      open: true,\n      children: /*#__PURE__*/_jsxs(AutocompletePaper, {\n        as: PaperComponent,\n        className: classes.paper,\n        styleProps: styleProps,\n        children: [loading && groupedOptions.length === 0 ? /*#__PURE__*/_jsx(AutocompleteLoading, {\n          className: classes.loading,\n          styleProps: styleProps,\n          children: loadingText\n        }) : null, groupedOptions.length === 0 && !freeSolo && !loading ? /*#__PURE__*/_jsx(AutocompleteNoOptions, {\n          className: classes.noOptions,\n          styleProps: styleProps,\n          role: \"presentation\",\n          onMouseDown: event => {\n            // Prevent input blur when interacting with the \"no options\" content\n            event.preventDefault();\n          },\n          children: noOptionsText\n        }) : null, groupedOptions.length > 0 ? /*#__PURE__*/_jsx(AutocompleteListbox, _extends({\n          as: ListboxComponent,\n          className: classes.listbox,\n          styleProps: styleProps\n        }, getListboxProps(), ListboxProps, {\n          children: groupedOptions.map((option, index) => {\n            if (groupBy) {\n              return renderGroup({\n                key: option.key,\n                group: option.group,\n                children: option.options.map((option2, index2) => renderListOption(option2, option.index + index2))\n              });\n            }\n\n            return renderListOption(option, index);\n          })\n        })) : null]\n      })\n    }) : null]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Autocomplete.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the portion of the selected suggestion that has not been typed by the user,\n   * known as the completion string, appears inline after the input cursor in the textbox.\n   * The inline completion string is visually highlighted and has a selected state.\n   * @default false\n   */\n  autoComplete: PropTypes.bool,\n\n  /**\n   * If `true`, the first option is automatically highlighted.\n   * @default false\n   */\n  autoHighlight: PropTypes.bool,\n\n  /**\n   * If `true`, the selected option becomes the value of the input\n   * when the Autocomplete loses focus unless the user chooses\n   * a different option or changes the character string in the input.\n   * @default false\n   */\n  autoSelect: PropTypes.bool,\n\n  /**\n   * Control if the input should be blurred when an option is selected:\n   *\n   * - `false` the input is not blurred.\n   * - `true` the input is always blurred.\n   * - `touch` the input is blurred after a touch event.\n   * - `mouse` the input is blurred after a mouse event.\n   * @default false\n   */\n  blurOnSelect: PropTypes.oneOfType([PropTypes.oneOf(['mouse', 'touch']), PropTypes.bool]),\n\n  /**\n   * Props applied to the [`Chip`](/api/chip/) element.\n   */\n  ChipProps: PropTypes.object,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The icon to display in place of the default clear icon.\n   * @default <ClearIcon fontSize=\"small\" />\n   */\n  clearIcon: PropTypes.node,\n\n  /**\n   * If `true`, the input's text is cleared on blur if no value is selected.\n   *\n   * Set to `true` if you want to help the user enter a new value.\n   * Set to `false` if you want to help the user resume his search.\n   * @default !props.freeSolo\n   */\n  clearOnBlur: PropTypes.bool,\n\n  /**\n   * If `true`, clear all values when the user presses escape and the popup is closed.\n   * @default false\n   */\n  clearOnEscape: PropTypes.bool,\n\n  /**\n   * Override the default text for the *clear* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   * @default 'Clear'\n   */\n  clearText: PropTypes.string,\n\n  /**\n   * Override the default text for the *close popup* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   * @default 'Close'\n   */\n  closeText: PropTypes.string,\n\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  componentsProps: PropTypes.object,\n\n  /**\n   * The default value. Use when the component is not controlled.\n   * @default props.multiple ? [] : null\n   */\n  defaultValue: PropTypes.any,\n\n  /**\n   * If `true`, the input can't be cleared.\n   * @default false\n   */\n  disableClearable: PropTypes.bool,\n\n  /**\n   * If `true`, the popup won't close when a value is selected.\n   * @default false\n   */\n  disableCloseOnSelect: PropTypes.bool,\n\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, will allow focus on disabled items.\n   * @default false\n   */\n  disabledItemsFocusable: PropTypes.bool,\n\n  /**\n   * If `true`, the list box in the popup will not wrap focus.\n   * @default false\n   */\n  disableListWrap: PropTypes.bool,\n\n  /**\n   * If `true`, the `Popper` content will be under the DOM hierarchy of the parent component.\n   * @default false\n   */\n  disablePortal: PropTypes.bool,\n\n  /**\n   * A filter function that determines the options that are eligible.\n   *\n   * @param {T[]} options The options to render.\n   * @param {object} state The state of the component.\n   * @returns {T[]}\n   */\n  filterOptions: PropTypes.func,\n\n  /**\n   * If `true`, hide the selected options from the list box.\n   * @default false\n   */\n  filterSelectedOptions: PropTypes.bool,\n\n  /**\n   * Force the visibility display of the popup icon.\n   * @default 'auto'\n   */\n  forcePopupIcon: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.bool]),\n\n  /**\n   * If `true`, the Autocomplete is free solo, meaning that the user input is not bound to provided options.\n   * @default false\n   */\n  freeSolo: PropTypes.bool,\n\n  /**\n   * If `true`, the input will take up the full width of its container.\n   * @default false\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * The label to display when the tags are truncated (`limitTags`).\n   *\n   * @param {number} more The number of truncated tags.\n   * @returns {ReactNode}\n   * @default (more) => `+${more}`\n   */\n  getLimitTagsText: PropTypes.func,\n\n  /**\n   * Used to determine the disabled state for a given option.\n   *\n   * @param {T} option The option to test.\n   * @returns {boolean}\n   */\n  getOptionDisabled: PropTypes.func,\n\n  /**\n   * Used to determine the string value for a given option.\n   * It's used to fill the input (and the list box options if `renderOption` is not provided).\n   *\n   * @param {T} option\n   * @returns {string}\n   * @default (option) => option.label ?? option\n   */\n  getOptionLabel: PropTypes.func,\n\n  /**\n   * If provided, the options will be grouped under the returned string.\n   * The groupBy value is also used as the text for group headings when `renderGroup` is not provided.\n   *\n   * @param {T} options The options to group.\n   * @returns {string}\n   */\n  groupBy: PropTypes.func,\n\n  /**\n   * If `true`, the component handles the \"Home\" and \"End\" keys when the popup is open.\n   * It should move focus to the first option and last option, respectively.\n   * @default !props.freeSolo\n   */\n  handleHomeEndKeys: PropTypes.bool,\n\n  /**\n   * This prop is used to help implement the accessibility logic.\n   * If you don't provide an id it will fall back to a randomly generated one.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the highlight can move to the input.\n   * @default false\n   */\n  includeInputInList: PropTypes.bool,\n\n  /**\n   * The input value.\n   */\n  inputValue: PropTypes.string,\n\n  /**\n   * Used to determine if the option represents the given value.\n   * Uses strict equality by default.\n   * ⚠️ Both arguments need to be handled, an option can only match with one value.\n   *\n   * @param {T} option The option to test.\n   * @param {T} value The value to test against.\n   * @returns {boolean}\n   */\n  isOptionEqualToValue: PropTypes.func,\n\n  /**\n   * The maximum number of tags that will be visible when not focused.\n   * Set `-1` to disable the limit.\n   * @default -1\n   */\n  limitTags: integerPropType,\n\n  /**\n   * The component used to render the listbox.\n   * @default 'ul'\n   */\n  ListboxComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the Listbox element.\n   */\n  ListboxProps: PropTypes.object,\n\n  /**\n   * If `true`, the component is in a loading state.\n   * This shows the `loadingText` in place of suggestions (only if there are no suggestions to show, e.g. `options` are empty).\n   * @default false\n   */\n  loading: PropTypes.bool,\n\n  /**\n   * Text to display when in a loading state.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   * @default 'Loading…'\n   */\n  loadingText: PropTypes.node,\n\n  /**\n   * If `true`, `value` must be an array and the menu will support multiple selections.\n   * @default false\n   */\n  multiple: PropTypes.bool,\n\n  /**\n   * Text to display when there are no options.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   * @default 'No options'\n   */\n  noOptionsText: PropTypes.node,\n\n  /**\n   * Callback fired when the value changes.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * @param {T|T[]} value The new value of the component.\n   * @param {string} reason One of \"createOption\", \"selectOption\", \"removeOption\", \"blur\" or \"clear\".\n   * @param {string} [details]\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Callback fired when the popup requests to be closed.\n   * Use in controlled mode (see open).\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * @param {string} reason Can be: `\"toggleInput\"`, `\"escape\"`, `\"selectOption\"`, `\"removeOption\"`, `\"blur\"`.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * Callback fired when the highlight option changes.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * @param {T} option The highlighted option.\n   * @param {string} reason Can be: `\"keyboard\"`, `\"auto\"`, `\"mouse\"`.\n   */\n  onHighlightChange: PropTypes.func,\n\n  /**\n   * Callback fired when the input value changes.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * @param {string} value The new value of the text input.\n   * @param {string} reason Can be: `\"input\"` (user input), `\"reset\"` (programmatic change), `\"clear\"`.\n   */\n  onInputChange: PropTypes.func,\n\n  /**\n   * Callback fired when the popup requests to be opened.\n   * Use in controlled mode (see open).\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   */\n  onOpen: PropTypes.func,\n\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool,\n\n  /**\n   * If `true`, the popup will open on input focus.\n   * @default false\n   */\n  openOnFocus: PropTypes.bool,\n\n  /**\n   * Override the default text for the *open popup* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   * @default 'Open'\n   */\n  openText: PropTypes.string,\n\n  /**\n   * Array of options.\n   */\n  options: PropTypes.array.isRequired,\n\n  /**\n   * The component used to render the body of the popup.\n   * @default Paper\n   */\n  PaperComponent: PropTypes.elementType,\n\n  /**\n   * The component used to position the popup.\n   * @default Popper\n   */\n  PopperComponent: PropTypes.elementType,\n\n  /**\n   * The icon to display in place of the default popup icon.\n   * @default <ArrowDropDownIcon />\n   */\n  popupIcon: PropTypes.node,\n\n  /**\n   * Render the group.\n   *\n   * @param {any} option The group to render.\n   * @returns {ReactNode}\n   */\n  renderGroup: PropTypes.func,\n\n  /**\n   * Render the input.\n   *\n   * @param {object} params\n   * @returns {ReactNode}\n   */\n  renderInput: PropTypes.func.isRequired,\n\n  /**\n   * Render the option, use `getOptionLabel` by default.\n   *\n   * @param {object} props The props to apply on the li element.\n   * @param {T} option The option to render.\n   * @param {object} state The state of the component.\n   * @returns {ReactNode}\n   */\n  renderOption: PropTypes.func,\n\n  /**\n   * Render the selected value.\n   *\n   * @param {T[]} value The `value` provided to the component.\n   * @param {function} getTagProps A tag props getter.\n   * @returns {ReactNode}\n   */\n  renderTags: PropTypes.func,\n\n  /**\n   * If `true`, the input's text is selected on focus.\n   * It helps the user clear the selected value.\n   * @default !props.freeSolo\n   */\n  selectOnFocus: PropTypes.bool,\n\n  /**\n   * The size of the component.\n   * @default 'medium'\n   */\n  size: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['small', 'medium']), PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * The value of the autocomplete.\n   *\n   * The value must have reference equality with the option in order to be selected.\n   * You can customize the equality behavior with the `isOptionEqualToValue` prop.\n   */\n  value: chainPropTypes(PropTypes.any, props => {\n    if (props.multiple && props.value !== undefined && !Array.isArray(props.value)) {\n      return new Error(['Material-UI: The Autocomplete expects the `value` prop to be an array or undefined.', `However, ${props.value} was provided.`].join('\\n'));\n    }\n\n    return null;\n  })\n} : void 0;\nexport default Autocomplete;","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12 17 15.59z\"\n}), 'Cancel');","import { generateUtilityClass, generateUtilityClasses } from '@material-ui/unstyled';\nexport function getChipUtilityClass(slot) {\n  return generateUtilityClass('MuiChip', slot);\n}\nconst chipClasses = generateUtilityClasses('MuiChip', ['root', 'sizeSmall', 'sizeMedium', 'colorPrimary', 'colorSecondary', 'disabled', 'clickable', 'clickableColorPrimary', 'clickableColorSecondary', 'deletable', 'deletableColorPrimary', 'deletableColorSecondary', 'outlined', 'filled', 'outlinedPrimary', 'outlinedSecondary', 'avatar', 'avatarSmall', 'avatarMedium', 'avatarColorPrimary', 'avatarColorSecondary', 'icon', 'iconSmall', 'iconMedium', 'iconColorPrimary', 'iconColorSecondary', 'label', 'labelSmall', 'labelMedium', 'deleteIcon', 'deleteIconSmall', 'deleteIconMedium', 'deleteIconColorPrimary', 'deleteIconColorSecondary', 'deleteIconOutlinedColorPrimary', 'deleteIconOutlinedColorSecondary', 'focusVisible']);\nexport default chipClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"avatar\", \"className\", \"clickable\", \"color\", \"component\", \"deleteIcon\", \"disabled\", \"icon\", \"label\", \"onClick\", \"onDelete\", \"onKeyDown\", \"onKeyUp\", \"size\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport { alpha } from '@material-ui/system';\nimport CancelIcon from '../internal/svg-icons/Cancel';\nimport useForkRef from '../utils/useForkRef';\nimport unsupportedProp from '../utils/unsupportedProp';\nimport capitalize from '../utils/capitalize';\nimport ButtonBase from '../ButtonBase';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport chipClasses, { getChipUtilityClass } from './chipClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes,\n    disabled,\n    size,\n    color,\n    onDelete,\n    clickable,\n    variant\n  } = styleProps;\n  const slots = {\n    root: ['root', variant, disabled && 'disabled', `size${capitalize(size)}`, `color${capitalize(color)}`, clickable && 'clickable', clickable && `clickableColor${capitalize(color)}`, onDelete && 'deletable', onDelete && `deletableColor${capitalize(color)}`, `${variant}${capitalize(color)}`],\n    label: ['label', `label${capitalize(size)}`],\n    avatar: ['avatar', `avatar${capitalize(size)}`, `avatarColor${capitalize(color)}`],\n    icon: ['icon', `icon${capitalize(size)}`, `iconColor${capitalize(color)}`],\n    deleteIcon: ['deleteIcon', `deleteIcon${capitalize(size)}`, `deleteIconColor${capitalize(color)}`, `deleteIconOutlinedColor${capitalize(color)}`]\n  };\n  return composeClasses(slots, getChipUtilityClass, classes);\n};\n\nconst ChipRoot = styled('div', {\n  name: 'MuiChip',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      styleProps\n    } = props;\n    const {\n      color,\n      clickable,\n      onDelete,\n      size,\n      variant\n    } = styleProps;\n    return [{\n      [`& .${chipClasses.avatar}`]: styles.avatar\n    }, {\n      [`& .${chipClasses.avatar}`]: styles[`avatar${capitalize(size)}`]\n    }, {\n      [`& .${chipClasses.avatar}`]: styles[`avatarColor${capitalize(color)}`]\n    }, {\n      [`& .${chipClasses.icon}`]: styles.icon\n    }, {\n      [`& .${chipClasses.icon}`]: styles[`icon${capitalize(size)}`]\n    }, {\n      [`& .${chipClasses.icon}`]: styles[`iconColor${capitalize(color)}`]\n    }, {\n      [`& .${chipClasses.deleteIcon}`]: styles.deleteIcon\n    }, {\n      [`& .${chipClasses.deleteIcon}`]: styles[`deleteIcon${capitalize(size)}`]\n    }, {\n      [`& .${chipClasses.deleteIcon}`]: styles[`deleteIconColor${capitalize(color)}`]\n    }, {\n      [`& .${chipClasses.deleteIcon}`]: styles[`deleteIconOutlinedColor${capitalize(color)}`]\n    }, styles.root, styles[`size${capitalize(size)}`], styles[`color${capitalize(color)}`], clickable && styles.clickable, clickable && color !== 'default' && styles[`clickableColor${capitalize(color)})`], onDelete && styles.deletable, onDelete && color !== 'default' && styles[`deletableColor${capitalize(color)}`], styles[variant], variant === 'outlined' && styles[`outlined${capitalize(color)}`]];\n  }\n})(({\n  theme,\n  styleProps\n}) => {\n  const deleteIconColor = alpha(theme.palette.text.primary, 0.26);\n  return _extends({\n    fontFamily: theme.typography.fontFamily,\n    fontSize: theme.typography.pxToRem(13),\n    display: 'inline-flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: 32,\n    color: theme.palette.text.primary,\n    backgroundColor: theme.palette.action.selected,\n    borderRadius: 32 / 2,\n    whiteSpace: 'nowrap',\n    transition: theme.transitions.create(['background-color', 'box-shadow']),\n    // label will inherit this from root, then `clickable` class overrides this for both\n    cursor: 'default',\n    // We disable the focus ring for mouse, touch and keyboard users.\n    outline: 0,\n    textDecoration: 'none',\n    border: 0,\n    // Remove `button` border\n    padding: 0,\n    // Remove `button` padding\n    verticalAlign: 'middle',\n    boxSizing: 'border-box',\n    [`&.${chipClasses.disabled}`]: {\n      opacity: theme.palette.action.disabledOpacity,\n      pointerEvents: 'none'\n    },\n    [`& .${chipClasses.avatar}`]: {\n      marginLeft: 5,\n      marginRight: -6,\n      width: 24,\n      height: 24,\n      color: theme.palette.mode === 'light' ? theme.palette.grey[700] : theme.palette.grey[300],\n      fontSize: theme.typography.pxToRem(12)\n    },\n    [`& .${chipClasses.avatarColorPrimary}`]: {\n      color: theme.palette.primary.contrastText,\n      backgroundColor: theme.palette.primary.dark\n    },\n    [`& .${chipClasses.avatarColorSecondary}`]: {\n      color: theme.palette.secondary.contrastText,\n      backgroundColor: theme.palette.secondary.dark\n    },\n    [`& .${chipClasses.avatarSmall}`]: {\n      marginLeft: 4,\n      marginRight: -4,\n      width: 18,\n      height: 18,\n      fontSize: theme.typography.pxToRem(10)\n    },\n    [`& .${chipClasses.icon}`]: _extends({\n      color: theme.palette.mode === 'light' ? theme.palette.grey[700] : theme.palette.grey[300],\n      marginLeft: 5,\n      marginRight: -6\n    }, styleProps.size === 'small' && {\n      fontSize: 18,\n      marginLeft: 4,\n      marginRight: -4\n    }, styleProps.color !== 'default' && {\n      color: 'inherit'\n    }),\n    [`& .${chipClasses.deleteIcon}`]: _extends({\n      WebkitTapHighlightColor: 'transparent',\n      color: deleteIconColor,\n      fontSize: 22,\n      cursor: 'pointer',\n      margin: '0 5px 0 -6px',\n      '&:hover': {\n        color: alpha(deleteIconColor, 0.4)\n      }\n    }, styleProps.size === 'small' && {\n      fontSize: 16,\n      marginRight: 4,\n      marginLeft: -4\n    }, styleProps.color !== 'default' && {\n      color: alpha(theme.palette[styleProps.color].contrastText, 0.7),\n      '&:hover, &:active': {\n        color: theme.palette[styleProps.color].contrastText\n      }\n    })\n  }, styleProps.size === 'small' && {\n    height: 24\n  }, styleProps.color !== 'default' && {\n    backgroundColor: theme.palette[styleProps.color].main,\n    color: theme.palette[styleProps.color].contrastText\n  }, styleProps.onDelete && {\n    [`&.${chipClasses.focusVisible}`]: {\n      backgroundColor: alpha(theme.palette.action.selected, theme.palette.action.selectedOpacity + theme.palette.action.focusOpacity)\n    }\n  }, styleProps.onDelete && styleProps.color !== 'default' && {\n    [`&.${chipClasses.focusVisible}`]: {\n      backgroundColor: theme.palette[styleProps.color].dark\n    }\n  });\n}, ({\n  theme,\n  styleProps\n}) => _extends({}, styleProps.clickable && {\n  userSelect: 'none',\n  WebkitTapHighlightColor: 'transparent',\n  cursor: 'pointer',\n  '&:hover': {\n    backgroundColor: alpha(theme.palette.action.selected, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity)\n  },\n  [`&.${chipClasses.focusVisible}`]: {\n    backgroundColor: alpha(theme.palette.action.selected, theme.palette.action.selectedOpacity + theme.palette.action.focusOpacity)\n  },\n  '&:active': {\n    boxShadow: theme.shadows[1]\n  }\n}, styleProps.clickable && styleProps.color !== 'default' && {\n  [`&:hover, &.${chipClasses.focusVisible}`]: {\n    backgroundColor: theme.palette[styleProps.color].dark\n  }\n}), ({\n  theme,\n  styleProps\n}) => _extends({}, styleProps.variant === 'outlined' && {\n  backgroundColor: 'transparent',\n  border: `1px solid ${theme.palette.mode === 'light' ? theme.palette.grey[400] : theme.palette.grey[700]}`,\n  [`&.${chipClasses.clickable}:hover`]: {\n    backgroundColor: theme.palette.action.hover\n  },\n  [`&.${chipClasses.focusVisible}`]: {\n    backgroundColor: theme.palette.action.focus\n  },\n  [`& .${chipClasses.avatar}`]: {\n    marginLeft: 4\n  },\n  [`& .${chipClasses.avatarSmall}`]: {\n    marginLeft: 2\n  },\n  [`& .${chipClasses.icon}`]: {\n    marginLeft: 4\n  },\n  [`& .${chipClasses.iconSmall}`]: {\n    marginLeft: 2\n  },\n  [`& .${chipClasses.deleteIcon}`]: {\n    marginRight: 5\n  },\n  [`& .${chipClasses.deleteIconSmall}`]: {\n    marginRight: 3\n  }\n}, styleProps.variant === 'outlined' && styleProps.color !== 'default' && {\n  color: theme.palette[styleProps.color].main,\n  border: `1px solid ${alpha(theme.palette[styleProps.color].main, 0.7)}`,\n  [`&.${chipClasses.clickable}:hover`]: {\n    backgroundColor: alpha(theme.palette[styleProps.color].main, theme.palette.action.hoverOpacity)\n  },\n  [`&.${chipClasses.focusVisible}`]: {\n    backgroundColor: alpha(theme.palette[styleProps.color].main, theme.palette.action.focusOpacity)\n  },\n  [`& .${chipClasses.deleteIcon}`]: {\n    color: alpha(theme.palette[styleProps.color].main, 0.7),\n    '&:hover, &:active': {\n      color: theme.palette[styleProps.color].main\n    }\n  }\n}));\nconst ChipLabel = styled('span', {\n  name: 'MuiChip',\n  slot: 'Label',\n  overridesResolver: (props, styles) => {\n    const {\n      styleProps\n    } = props;\n    const {\n      size\n    } = styleProps;\n    return [styles.label, styles[`label${capitalize(size)}`]];\n  }\n})(({\n  styleProps\n}) => _extends({\n  overflow: 'hidden',\n  textOverflow: 'ellipsis',\n  paddingLeft: 12,\n  paddingRight: 12,\n  whiteSpace: 'nowrap'\n}, styleProps.size === 'small' && {\n  paddingLeft: 8,\n  paddingRight: 8\n}));\n\nfunction isDeleteKeyboardEvent(keyboardEvent) {\n  return keyboardEvent.key === 'Backspace' || keyboardEvent.key === 'Delete';\n}\n/**\n * Chips represent complex entities in small blocks, such as a contact.\n */\n\n\nconst Chip = /*#__PURE__*/React.forwardRef(function Chip(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiChip'\n  });\n\n  const {\n    avatar: avatarProp,\n    className,\n    clickable: clickableProp,\n    color = 'default',\n    component: ComponentProp,\n    deleteIcon: deleteIconProp,\n    disabled = false,\n    icon: iconProp,\n    label,\n    onClick,\n    onDelete,\n    onKeyDown,\n    onKeyUp,\n    size = 'medium',\n    variant = 'filled'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const chipRef = React.useRef(null);\n  const handleRef = useForkRef(chipRef, ref);\n\n  const handleDeleteIconClick = event => {\n    // Stop the event from bubbling up to the `Chip`\n    event.stopPropagation();\n\n    if (onDelete) {\n      onDelete(event);\n    }\n  };\n\n  const handleKeyDown = event => {\n    // Ignore events from children of `Chip`.\n    if (event.currentTarget === event.target && isDeleteKeyboardEvent(event)) {\n      // Will be handled in keyUp, otherwise some browsers\n      // might init navigation\n      event.preventDefault();\n    }\n\n    if (onKeyDown) {\n      onKeyDown(event);\n    }\n  };\n\n  const handleKeyUp = event => {\n    // Ignore events from children of `Chip`.\n    if (event.currentTarget === event.target) {\n      if (onDelete && isDeleteKeyboardEvent(event)) {\n        onDelete(event);\n      } else if (event.key === 'Escape' && chipRef.current) {\n        chipRef.current.blur();\n      }\n    }\n\n    if (onKeyUp) {\n      onKeyUp(event);\n    }\n  };\n\n  const clickable = clickableProp !== false && onClick ? true : clickableProp;\n  const small = size === 'small';\n  const component = clickable || onDelete ? ButtonBase : ComponentProp || 'div';\n\n  const styleProps = _extends({}, props, {\n    component,\n    disabled,\n    size,\n    color,\n    onDelete: !!onDelete,\n    clickable,\n    variant\n  });\n\n  const classes = useUtilityClasses(styleProps);\n  const moreProps = component === ButtonBase ? {\n    component: ComponentProp || 'div',\n    focusVisibleClassName: classes.focusVisible,\n    disableRipple: Boolean(onDelete)\n  } : {};\n  let deleteIcon = null;\n\n  if (onDelete) {\n    const customClasses = clsx(color !== 'default' && (variant === 'outlined' ? classes[`deleteIconOutlinedColor${capitalize(color)}`] : classes[`deleteIconColor${capitalize(color)}`]), small && classes.deleteIconSmall);\n    deleteIcon = deleteIconProp && /*#__PURE__*/React.isValidElement(deleteIconProp) ? /*#__PURE__*/React.cloneElement(deleteIconProp, {\n      className: clsx(deleteIconProp.props.className, classes.deleteIcon, customClasses),\n      onClick: handleDeleteIconClick\n    }) : /*#__PURE__*/_jsx(CancelIcon, {\n      className: clsx(classes.deleteIcon, customClasses),\n      onClick: handleDeleteIconClick\n    });\n  }\n\n  let avatar = null;\n\n  if (avatarProp && /*#__PURE__*/React.isValidElement(avatarProp)) {\n    avatar = /*#__PURE__*/React.cloneElement(avatarProp, {\n      className: clsx(classes.avatar, avatarProp.props.className)\n    });\n  }\n\n  let icon = null;\n\n  if (iconProp && /*#__PURE__*/React.isValidElement(iconProp)) {\n    icon = /*#__PURE__*/React.cloneElement(iconProp, {\n      className: clsx(classes.icon, iconProp.props.className)\n    });\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (avatar && icon) {\n      console.error('Material-UI: The Chip component can not handle the avatar ' + 'and the icon prop at the same time. Pick one.');\n    }\n  }\n\n  return /*#__PURE__*/_jsxs(ChipRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    disabled: clickable && disabled ? true : undefined,\n    onClick: onClick,\n    onKeyDown: handleKeyDown,\n    onKeyUp: handleKeyUp,\n    ref: handleRef,\n    styleProps: styleProps\n  }, moreProps, other, {\n    children: [avatar || icon, /*#__PURE__*/_jsx(ChipLabel, {\n      className: clsx(classes.label),\n      styleProps: styleProps,\n      children: label\n    }), deleteIcon]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Chip.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The Avatar element to display.\n   */\n  avatar: PropTypes.element,\n\n  /**\n   * This prop isn't supported.\n   * Use the `component` prop if you need to change the children structure.\n   */\n  children: unsupportedProp,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the chip will appear clickable, and will raise when pressed,\n   * even if the onClick prop is not defined.\n   * If `false`, the chip will not appear clickable, even if onClick prop is defined.\n   * This can be used, for example,\n   * along with the component prop to indicate an anchor Chip is clickable.\n   * Note: this controls the UI and does not affect the onClick event.\n   */\n  clickable: PropTypes.bool,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'default'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Override the default delete icon element. Shown only if `onDelete` is set.\n   */\n  deleteIcon: PropTypes.element,\n\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Icon element.\n   */\n  icon: PropTypes.element,\n\n  /**\n   * The content of the component.\n   */\n  label: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * Callback fired when the delete icon is clicked.\n   * If set, the delete icon will be shown.\n   */\n  onDelete: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onKeyDown: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onKeyUp: PropTypes.func,\n\n  /**\n   * The size of the component.\n   * @default 'medium'\n   */\n  size: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * The variant to use.\n   * @default 'filled'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['filled', 'outlined']), PropTypes.string])\n} : void 0;\nexport default Chip;"],"sourceRoot":""}