{"version":3,"sources":["utils/formatNumber.js","components/HeaderBreadcrumbs.js","utils/constants/regexs.js","components/DynamicFormItem.js","components/upload/UploadMultiFile.js","components/upload/UploadSingleFile.js","components/upload/UploadAvatar.js","components/Steps.js","components/campaign/CampaignTypeForm.js","components/campaign/task/TaskAndRewardsForm.js","components/campaign/task/TaskDetailForm.js","components/campaign/task/TaskNewForm.js","pages/TaskCreate.js"],"names":["fShortenNumber","number","replace","numeral","format","fData","HeaderBreadcrumbs","links","action","heading","moreLink","sx","other","mb","spacing","direction","alignItems","flexGrow","variant","gutterBottom","flexShrink","isString","href","target","map","noWrap","display","phoneRegExp","addressRegExp","nameRegExp","DynamicFormItem","label","fieldProps","error","helperText","isLastItem","onAddClick","onRemoveClick","fullWidth","size","color","onClick","styled","theme","outline","textAlign","flexDirection","justifyContent","padding","borderRadius","shape","backgroundColor","palette","background","neutral","border","grey","opacity","cursor","breakpoints","up","DropZoneStyle","overflow","position","transition","transitions","create","UploadSingleFile","file","useDropzone","multiple","getRootProps","getInputProps","isDragActive","isDragReject","fileRejections","ShowRejectionItems","Paper","py","px","mt","borderColor","bgcolor","alpha","main","errors","path","Box","my","Typography","e","component","message","code","width","p","ml","md","textDecoration","alt","src","preview","top","objectFit","height","length","RootStyle","margin","zIndex","PlaceholderStyle","text","secondary","easing","easeInOut","duration","shorter","UploadAvatar","caption","className","Icon","icon","roundAddAPhoto","QontoConnector","withStyles","alternativeLabel","left","right","active","primary","completed","line","borderTopWidth","divider","StepConnector","QontoStepIcon","CheckmarkFill","Steps","steps","activeStep","connector","StepIconComponent","typography","CampaignTypeForm","formik","useTheme","values","touched","getFieldProps","container","item","xs","select","placeholder","SelectProps","native","Boolean","brand","value","option","index","campaignType","columns","type","isSelected","image","title","control","TaskAndRewardsForm","Grid","Stack","Card","CardHeader","CardContent","sm","TextField","name","taskType","totalBudget","perUser","starPerUser","continueAfterBudget","tier","FormControlLabel","labelPlacement","Switch","checked","isPublic","mx","LabelStyle","subtitle2","marginBottom","TaskDetailForm","setFieldValue","handleCoverDrop","useCallback","acceptedFiles","URL","createObjectURL","maxSize","accept","coverUrl","onDrop","FormHelperText","Button","Avatar","multiline","rows","description","render","arrHelper","doList","fieldName","getIn","push","remove","dontList","igCaptionQuestions","noOfPhotoRequired","noOfVideoRequired","Autocomplete","freeSolo","hashtags","onChange","event","newValue","options","renderTags","getTagProps","Chip","renderInput","params","mentions","DateTimePicker","startDate","inputFormat","date","isValidDate","endDate","STEPS","TaskNewForm","isEdit","currentTask","navigate","useNavigate","enqueueSnackbar","useSnackbar","useState","setActiveStep","VALIDATION_SCHEMAS","Yup","matches","required","headerImage","of","nullable","when","schema","min","isLastStep","useFormik","enableReinitialize","initialValues","undefined","Date","validationSchema","onSubmit","a","setSubmitting","resetForm","setErrors","alert","JSON","stringify","PATH_DASHBOARD","task","list","console","prev","handleSubmit","isSubmitting","log","noValidate","autoComplete","mr","LoadingButton","loading","TaskCreate","themeStretch","useSettings","pathname","useLocation","useParams","includes","Page","Container","maxWidth"],"mappings":"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","file":"static/js/9.c862dc99.chunk.js","sourcesContent":["import { replace } from 'lodash';\nimport numeral from 'numeral';\n\n// ----------------------------------------------------------------------\n\nexport function fCurrency(number) {\n  return numeral(number).format(Number.isInteger(number) ? '$0,0' : '$0,0.00');\n}\n\nexport function fPercent(number) {\n  return numeral(number / 100).format('0.0%');\n}\n\nexport function fNumber(number) {\n  return numeral(number).format();\n}\n\nexport function fShortenNumber(number) {\n  return replace(numeral(number).format('0.00a'), '.00', '');\n}\n\nexport function fData(number) {\n  return numeral(number).format('0.0 b');\n}\n","import { isString } from 'lodash';\nimport PropTypes from 'prop-types';\n// material\nimport { Box, Typography, Link, Stack } from '@material-ui/core';\n//\nimport { MBreadcrumbs } from './@material-extend';\n\n// ----------------------------------------------------------------------\n\nHeaderBreadcrumbs.propTypes = {\n  links: PropTypes.array,\n  action: PropTypes.node,\n  heading: PropTypes.string.isRequired,\n  moreLink: PropTypes.oneOfType([PropTypes.string, PropTypes.array]),\n  sx: PropTypes.object,\n};\n\nexport default function HeaderBreadcrumbs({ links, action, heading, moreLink = '' || [], sx, ...other }) {\n  return (\n    <Stack sx={sx} mb={5} spacing={2}>\n      <Stack direction=\"row\" alignItems=\"center\">\n        <Box sx={{ flexGrow: 1 }}>\n          <Typography variant=\"h4\" gutterBottom>\n            {heading}\n          </Typography>\n          <MBreadcrumbs links={links} {...other} />\n        </Box>\n\n        {action && <Box sx={{ flexShrink: 0 }}>{action}</Box>}\n      </Stack>\n\n      {isString(moreLink) ? (\n        <Link href={moreLink} target=\"_blank\" variant=\"body2\">\n          {moreLink}\n        </Link>\n      ) : (\n        moreLink.map((href) => (\n          <Link noWrap key={href} href={href} variant=\"body2\" target=\"_blank\" sx={{ display: 'flex' }}>\n            {href}\n          </Link>\n        ))\n      )}\n    </Stack>\n  );\n}\n","export const phoneRegExp =\n  /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/;\nexport const addressRegExp = /^[a-zA-Z0-9 ]*$/;\nexport const nameRegExp = /^[a-zA-Z ]*$/;\n","import PropTypes from 'prop-types';\nimport { Add as AddIcon, Delete as DeleteIcon } from '@material-ui/icons';\nimport { IconButton, Stack, TextField } from '@material-ui/core';\n\nconst DynamicFormItem = ({ label, fieldProps, error, helperText, isLastItem, onAddClick, onRemoveClick }) => (\n  <Stack direction=\"row\" spacing={1}>\n    <TextField fullWidth size=\"small\" label={label} {...fieldProps} error={error} helperText={helperText} />\n    {isLastItem ? (\n      <IconButton color=\"primary\" onClick={onAddClick}>\n        <AddIcon />\n      </IconButton>\n    ) : (\n      <IconButton color=\"error\" onClick={onRemoveClick}>\n        <DeleteIcon />\n      </IconButton>\n    )}\n  </Stack>\n);\n\nDynamicFormItem.propTypes = {\n  label: PropTypes.string,\n  fieldProps: PropTypes.object,\n  error: PropTypes.bool,\n  helperText: PropTypes.string,\n  isLastItem: PropTypes.bool,\n  onAddClick: PropTypes.func,\n  onRemoveClick: PropTypes.func,\n};\n\nexport default DynamicFormItem;\n","import { isString } from 'lodash';\nimport PropTypes from 'prop-types';\nimport { Icon } from '@iconify/react';\nimport { useDropzone } from 'react-dropzone';\nimport fileFill from '@iconify/icons-eva/file-fill';\nimport closeFill from '@iconify/icons-eva/close-fill';\nimport { motion, AnimatePresence } from 'framer-motion';\n// material\nimport { alpha, styled } from '@material-ui/core/styles';\nimport {\n  Box,\n  List,\n  Stack,\n  Paper,\n  Button,\n  ListItem,\n  Typography,\n  ListItemIcon,\n  ListItemText,\n  ListItemSecondaryAction,\n} from '@material-ui/core';\n// utils\nimport { fData } from '../../utils/formatNumber';\n//\nimport { MIconButton } from '../@material-extend';\nimport { varFadeInRight } from '../animate';\nimport { UploadIllustration } from '../../assets';\n\n// ----------------------------------------------------------------------\n\nconst DropZoneStyle = styled('div')(({ theme }) => ({\n  outline: 'none',\n  display: 'flex',\n  textAlign: 'center',\n  alignItems: 'center',\n  flexDirection: 'column',\n  justifyContent: 'center',\n  padding: theme.spacing(5, 1),\n  borderRadius: theme.shape.borderRadius,\n  backgroundColor: theme.palette.background.neutral,\n  border: `1px dashed ${theme.palette.grey[500_32]}`,\n  '&:hover': { opacity: 0.72, cursor: 'pointer' },\n  [theme.breakpoints.up('md')]: { textAlign: 'left', flexDirection: 'row' },\n}));\n\n// ----------------------------------------------------------------------\n\nUploadMultiFile.propTypes = {\n  error: PropTypes.bool,\n  showPreview: PropTypes.bool,\n  files: PropTypes.array,\n  onRemove: PropTypes.func,\n  onRemoveAll: PropTypes.func,\n  sx: PropTypes.object,\n};\n\nexport default function UploadMultiFile({ error, showPreview = false, files, onRemove, onRemoveAll, sx, ...other }) {\n  const hasFile = files.length > 0;\n\n  const { getRootProps, getInputProps, isDragActive, isDragReject, fileRejections } = useDropzone({\n    ...other,\n  });\n\n  const ShowRejectionItems = () => (\n    <Paper\n      variant=\"outlined\"\n      sx={{\n        py: 1,\n        px: 2,\n        mt: 3,\n        borderColor: 'error.light',\n        bgcolor: (theme) => alpha(theme.palette.error.main, 0.08),\n      }}\n    >\n      {fileRejections.map(({ file, errors }) => {\n        const { path, size } = file;\n        return (\n          <Box key={path} sx={{ my: 1 }}>\n            <Typography variant=\"subtitle2\" noWrap>\n              {path} - {fData(size)}\n            </Typography>\n            {errors.map((e) => (\n              <Typography key={e.code} variant=\"caption\" component=\"p\">\n                - {e.message}\n              </Typography>\n            ))}\n          </Box>\n        );\n      })}\n    </Paper>\n  );\n\n  return (\n    <Box sx={{ width: '100%', ...sx }}>\n      <DropZoneStyle\n        {...getRootProps()}\n        sx={{\n          ...(isDragActive && { opacity: 0.72 }),\n          ...((isDragReject || error) && {\n            color: 'error.main',\n            borderColor: 'error.light',\n            bgcolor: 'error.lighter',\n          }),\n        }}\n      >\n        <input {...getInputProps()} />\n\n        <UploadIllustration sx={{ width: 220 }} />\n\n        <Box sx={{ p: 3, ml: { md: 2 } }}>\n          <Typography gutterBottom variant=\"h5\">\n            Drop or Select file\n          </Typography>\n\n          <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\n            Drop files here or click&nbsp;\n            <Typography variant=\"body2\" component=\"span\" sx={{ color: 'primary.main', textDecoration: 'underline' }}>\n              browse\n            </Typography>\n            &nbsp;thorough your machine\n          </Typography>\n        </Box>\n      </DropZoneStyle>\n\n      {fileRejections.length > 0 && <ShowRejectionItems />}\n\n      <List disablePadding sx={{ ...(hasFile && { my: 3 }) }}>\n        <AnimatePresence>\n          {files.map((file) => {\n            const { name, size, preview } = file;\n            const key = isString(file) ? file : name;\n\n            if (showPreview) {\n              return (\n                <ListItem\n                  key={key}\n                  component={motion.div}\n                  {...varFadeInRight}\n                  sx={{\n                    p: 0,\n                    m: 0.5,\n                    width: 80,\n                    height: 80,\n                    borderRadius: 1.5,\n                    overflow: 'hidden',\n                    position: 'relative',\n                    display: 'inline-flex',\n                  }}\n                >\n                  <Paper\n                    variant=\"outlined\"\n                    component=\"img\"\n                    src={isString(file) ? file : preview}\n                    sx={{ width: '100%', height: '100%', objectFit: 'cover', position: 'absolute' }}\n                  />\n                  <Box sx={{ top: 6, right: 6, position: 'absolute' }}>\n                    <MIconButton\n                      size=\"small\"\n                      onClick={() => onRemove(file)}\n                      sx={{\n                        p: '2px',\n                        color: 'common.white',\n                        bgcolor: (theme) => alpha(theme.palette.grey[900], 0.72),\n                        '&:hover': {\n                          bgcolor: (theme) => alpha(theme.palette.grey[900], 0.48),\n                        },\n                      }}\n                    >\n                      <Icon icon={closeFill} />\n                    </MIconButton>\n                  </Box>\n                </ListItem>\n              );\n            }\n\n            return (\n              <ListItem\n                key={key}\n                component={motion.div}\n                {...varFadeInRight}\n                sx={{\n                  my: 1,\n                  py: 0.75,\n                  px: 2,\n                  borderRadius: 1,\n                  border: (theme) => `solid 1px ${theme.palette.divider}`,\n                  bgcolor: 'background.paper',\n                }}\n              >\n                <ListItemIcon>\n                  <Icon icon={fileFill} width={28} height={28} />\n                </ListItemIcon>\n                <ListItemText\n                  primary={isString(file) ? file : name}\n                  secondary={isString(file) ? '' : fData(size)}\n                  primaryTypographyProps={{ variant: 'subtitle2' }}\n                  secondaryTypographyProps={{ variant: 'caption' }}\n                />\n                <ListItemSecondaryAction>\n                  <MIconButton edge=\"end\" size=\"small\" onClick={() => onRemove(file)}>\n                    <Icon icon={closeFill} />\n                  </MIconButton>\n                </ListItemSecondaryAction>\n              </ListItem>\n            );\n          })}\n        </AnimatePresence>\n      </List>\n\n      {hasFile && (\n        <Stack direction=\"row\" justifyContent=\"flex-end\">\n          <Button onClick={onRemoveAll} sx={{ mr: 1.5 }}>\n            Remove all\n          </Button>\n          <Button variant=\"contained\">Upload files</Button>\n        </Stack>\n      )}\n    </Box>\n  );\n}\n","import { isString } from 'lodash';\nimport PropTypes from 'prop-types';\nimport { useDropzone } from 'react-dropzone';\n// material\nimport { alpha, styled } from '@material-ui/core/styles';\nimport { Paper, Box, Typography } from '@material-ui/core';\n// utils\nimport { fData } from '../../utils/formatNumber';\n//\nimport { UploadIllustration } from '../../assets';\n\n// ----------------------------------------------------------------------\n\nconst DropZoneStyle = styled('div')(({ theme }) => ({\n  outline: 'none',\n  display: 'flex',\n  overflow: 'hidden',\n  textAlign: 'center',\n  position: 'relative',\n  alignItems: 'center',\n  flexDirection: 'column',\n  justifyContent: 'center',\n  padding: theme.spacing(5, 0),\n  borderRadius: theme.shape.borderRadius,\n  transition: theme.transitions.create('padding'),\n  backgroundColor: theme.palette.background.neutral,\n  border: `1px dashed ${theme.palette.grey[500_32]}`,\n  '&:hover': {\n    opacity: 0.72,\n    cursor: 'pointer',\n  },\n  [theme.breakpoints.up('md')]: { textAlign: 'left', flexDirection: 'row' },\n}));\n\n// ----------------------------------------------------------------------\n\nUploadSingleFile.propTypes = {\n  error: PropTypes.bool,\n  file: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n  sx: PropTypes.object,\n};\n\nexport default function UploadSingleFile({ error, file, sx, ...other }) {\n  const { getRootProps, getInputProps, isDragActive, isDragReject, fileRejections } = useDropzone({\n    multiple: false,\n    ...other,\n  });\n\n  const ShowRejectionItems = () => (\n    <Paper\n      variant=\"outlined\"\n      sx={{\n        py: 1,\n        px: 2,\n        mt: 3,\n        borderColor: 'error.light',\n        bgcolor: (theme) => alpha(theme.palette.error.main, 0.08),\n      }}\n    >\n      {fileRejections.map(({ file, errors }) => {\n        const { path, size } = file;\n        return (\n          <Box key={path} sx={{ my: 1 }}>\n            <Typography variant=\"subtitle2\" noWrap>\n              {path} - {fData(size)}\n            </Typography>\n            {errors.map((e) => (\n              <Typography key={e.code} variant=\"caption\" component=\"p\">\n                - {e.message}\n              </Typography>\n            ))}\n          </Box>\n        );\n      })}\n    </Paper>\n  );\n\n  return (\n    <Box sx={{ width: '100%', ...sx }}>\n      <DropZoneStyle\n        {...getRootProps()}\n        sx={{\n          ...(isDragActive && { opacity: 0.72 }),\n          ...((isDragReject || error) && {\n            color: 'error.main',\n            borderColor: 'error.light',\n            bgcolor: 'error.lighter',\n          }),\n          ...(file && { padding: '12% 0' }),\n        }}\n      >\n        <input {...getInputProps()} />\n\n        <UploadIllustration sx={{ width: 220 }} />\n\n        <Box sx={{ p: 3, ml: { md: 2 } }}>\n          <Typography gutterBottom variant=\"h5\">\n            Drop or Select file\n          </Typography>\n\n          <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\n            Drop files here or click&nbsp;\n            <Typography variant=\"body2\" component=\"span\" sx={{ color: 'primary.main', textDecoration: 'underline' }}>\n              browse\n            </Typography>\n            &nbsp;thorough your machine\n          </Typography>\n        </Box>\n\n        {file && (\n          <Box\n            component=\"img\"\n            alt=\"file preview\"\n            src={isString(file) ? file : file.preview}\n            sx={{\n              top: 8,\n              borderRadius: 1,\n              objectFit: 'cover',\n              position: 'absolute',\n              width: 'calc(100% - 16px)',\n              height: 'calc(100% - 16px)',\n            }}\n          />\n        )}\n      </DropZoneStyle>\n\n      {fileRejections.length > 0 && <ShowRejectionItems />}\n    </Box>\n  );\n}\n","import { isString } from 'lodash';\nimport PropTypes from 'prop-types';\nimport { Icon } from '@iconify/react';\nimport { useDropzone } from 'react-dropzone';\nimport roundAddAPhoto from '@iconify/icons-ic/round-add-a-photo';\n// material\nimport { alpha, styled } from '@material-ui/core/styles';\nimport { Box, Typography, Paper } from '@material-ui/core';\n// utils\nimport { fData } from '../../utils/formatNumber';\n\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled('div')(({ theme }) => ({\n  width: 144,\n  height: 144,\n  margin: 'auto',\n  borderRadius: '50%',\n  padding: theme.spacing(1),\n  border: `1px dashed ${theme.palette.grey[500_32]}`,\n}));\n\nconst DropZoneStyle = styled('div')({\n  zIndex: 0,\n  width: '100%',\n  height: '100%',\n  outline: 'none',\n  display: 'flex',\n  overflow: 'hidden',\n  borderRadius: '50%',\n  position: 'relative',\n  alignItems: 'center',\n  justifyContent: 'center',\n  '& > *': { width: '100%', height: '100%' },\n  '&:hover': {\n    cursor: 'pointer',\n    '& .placeholder': {\n      zIndex: 9,\n    },\n  },\n});\n\nconst PlaceholderStyle = styled('div')(({ theme }) => ({\n  display: 'flex',\n  position: 'absolute',\n  alignItems: 'center',\n  flexDirection: 'column',\n  justifyContent: 'center',\n  color: theme.palette.text.secondary,\n  backgroundColor: theme.palette.background.neutral,\n  transition: theme.transitions.create('opacity', {\n    easing: theme.transitions.easing.easeInOut,\n    duration: theme.transitions.duration.shorter,\n  }),\n  '&:hover': { opacity: 0.72 },\n}));\n\n// ----------------------------------------------------------------------\n\nUploadAvatar.propTypes = {\n  error: PropTypes.bool,\n  file: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n  caption: PropTypes.node,\n  sx: PropTypes.object,\n};\n\nexport default function UploadAvatar({ error, file, caption, sx, ...other }) {\n  const { getRootProps, getInputProps, isDragActive, isDragReject, fileRejections } = useDropzone({\n    multiple: false,\n    ...other,\n  });\n\n  const ShowRejectionItems = () => (\n    <Paper\n      variant=\"outlined\"\n      sx={{\n        py: 1,\n        px: 2,\n        my: 2,\n        borderColor: 'error.light',\n        bgcolor: (theme) => alpha(theme.palette.error.main, 0.08),\n      }}\n    >\n      {fileRejections.map(({ file, errors }) => {\n        const { path, size } = file;\n        return (\n          <Box key={path} sx={{ my: 1 }}>\n            <Typography variant=\"subtitle2\" noWrap>\n              {path} - {fData(size)}\n            </Typography>\n            {errors.map((e) => (\n              <Typography key={e.code} variant=\"caption\" component=\"p\">\n                - {e.message}\n              </Typography>\n            ))}\n          </Box>\n        );\n      })}\n    </Paper>\n  );\n\n  return (\n    <>\n      <RootStyle sx={sx}>\n        <DropZoneStyle\n          {...getRootProps()}\n          sx={{\n            ...(isDragActive && { opacity: 0.72 }),\n            ...((isDragReject || error) && {\n              color: 'error.main',\n              borderColor: 'error.light',\n              bgcolor: 'error.lighter',\n            }),\n          }}\n        >\n          <input {...getInputProps()} />\n\n          {file && (\n            <Box\n              component=\"img\"\n              alt=\"avatar\"\n              src={isString(file) ? file : file.preview}\n              sx={{ zIndex: 8, objectFit: 'cover' }}\n            />\n          )}\n\n          <PlaceholderStyle\n            className=\"placeholder\"\n            sx={{\n              ...(file && {\n                opacity: 0,\n                color: 'common.white',\n                bgcolor: 'grey.900',\n                '&:hover': { opacity: 0.72 },\n              }),\n            }}\n          >\n            <Box component={Icon} icon={roundAddAPhoto} sx={{ width: 24, height: 24, mb: 1 }} />\n            <Typography variant=\"caption\">{file ? 'Update photo' : 'Upload photo'}</Typography>\n          </PlaceholderStyle>\n        </DropZoneStyle>\n      </RootStyle>\n\n      {caption}\n\n      {fileRejections.length > 0 && <ShowRejectionItems />}\n    </>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Icon } from '@iconify/react';\nimport CheckmarkFill from '@iconify/icons-eva/checkmark-fill';\nimport { withStyles } from '@material-ui/styles';\nimport { Box, Step, StepConnector, StepLabel, Stepper } from '@material-ui/core';\n\nconst QontoConnector = withStyles((theme) => ({\n  alternativeLabel: {\n    top: 10,\n    left: 'calc(-50% + 20px)',\n    right: 'calc(50% + 20px)',\n  },\n  active: {\n    '& $line': { borderColor: theme.palette.primary.main },\n  },\n  completed: {\n    '& $line': { borderColor: theme.palette.primary.main },\n  },\n  line: {\n    borderTopWidth: 2,\n    borderColor: theme.palette.divider,\n  },\n}))(StepConnector);\n\nfunction QontoStepIcon({ active, completed }) {\n  return (\n    <Box\n      sx={{\n        zIndex: 9,\n        width: 24,\n        height: 24,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        color: active ? 'primary.main' : 'divider',\n        bgcolor: 'background.default',\n      }}\n    >\n      {completed ? (\n        <Box component={Icon} icon={CheckmarkFill} sx={{ zIndex: 1, width: 20, height: 20, color: 'primary.main' }} />\n      ) : (\n        <Box\n          sx={{\n            width: 8,\n            height: 8,\n            borderRadius: '50%',\n            backgroundColor: 'currentColor',\n          }}\n        />\n      )}\n    </Box>\n  );\n}\n\nQontoStepIcon.propTypes = {\n  active: PropTypes.bool,\n  completed: PropTypes.bool,\n};\n\nconst Steps = ({ steps, activeStep }) => (\n  <Stepper alternativeLabel activeStep={activeStep} connector={<QontoConnector />}>\n    {steps.map((label) => (\n      <Step key={label}>\n        <StepLabel\n          StepIconComponent={QontoStepIcon}\n          sx={{\n            '& .MuiStepLabel-label': {\n              typography: 'subtitle2',\n              color: 'text.disabled',\n            },\n          }}\n        >\n          {label}\n        </StepLabel>\n      </Step>\n    ))}\n  </Stepper>\n);\n\nSteps.propTypes = {\n  steps: PropTypes.array,\n  activeStep: PropTypes.number,\n};\n\nexport default Steps;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useTheme } from '@material-ui/core/styles';\nimport {\n  Card,\n  CardActions,\n  CardContent,\n  CardMedia,\n  FormControlLabel,\n  Grid,\n  Radio,\n  RadioGroup,\n  Stack,\n  TextField,\n} from '@material-ui/core';\n\nconst CampaignTypeForm = ({ formik }) => {\n  const theme = useTheme();\n  const { errors, values, touched, getFieldProps } = formik;\n  return (\n    <Grid container spacing={3}>\n      <Grid item md={12}>\n        <Stack spacing={3}>\n          <Grid container>\n            <Grid item xs={12} md={4}>\n              <TextField\n                select\n                fullWidth\n                size=\"small\"\n                label=\"Select Brand\"\n                placeholder=\"Brand\"\n                {...getFieldProps('brand')}\n                SelectProps={{ native: true }}\n                error={Boolean(touched.brand && errors.brand)}\n                helperText={touched.brand && errors.brand}\n              >\n                <option value=\"\" />\n                {['Adidas', 'Nike'].map((option, index) => (\n                  <option key={option + index} value={option}>\n                    {option}\n                  </option>\n                ))}\n              </TextField>\n            </Grid>\n          </Grid>\n\n          <RadioGroup {...getFieldProps('campaignType')} value={values.campaignType}>\n            <Grid container spacing={1.5} direction=\"row\" columns={10}>\n              {['Single Task', 'Voting and Winner', 'Question and Answer', 'Watch Ad', 'Campaign'].map((type) => {\n                const isSelected = values.campaignType === type;\n                return (\n                  <Grid item xs={5} md={2} key={type}>\n                    <Card\n                      variant={isSelected ? 'elevation' : 'outlined'}\n                      sx={{\n                        ...(isSelected && {\n                          border: `solid 2px ${theme.palette.primary.main}`,\n                        }),\n                      }}\n                    >\n                      <CardMedia\n                        sx={{ height: 140 }}\n                        image=\"/static/mock-images/products/product_1.jpg\"\n                        title=\"Contemplative Reptile\"\n                      />\n                      <CardContent>{type}</CardContent>\n                      <CardActions>\n                        <FormControlLabel\n                          label=\"\"\n                          value={type}\n                          control={<Radio sx={{ display: 'none' }} />}\n                          sx={{\n                            top: 0,\n                            margin: 0,\n                            width: '100%',\n                            height: '100%',\n                            position: 'absolute',\n                          }}\n                        />\n                      </CardActions>\n                    </Card>\n                  </Grid>\n                );\n              })}\n            </Grid>\n          </RadioGroup>\n        </Stack>\n      </Grid>\n    </Grid>\n  );\n};\n\nCampaignTypeForm.propTypes = {\n  formik: PropTypes.object,\n};\n\nexport default CampaignTypeForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  FormControlLabel,\n  Grid,\n  Stack,\n  Switch,\n  TextField,\n  Typography,\n} from '@material-ui/core';\n\nconst TaskAndRewardsForm = ({ formik }) => {\n  const { values, errors, touched, getFieldProps } = formik;\n  return (\n    <Grid container spacing={3}>\n      <Grid item md={12}>\n        <Stack spacing={3}>\n          <Card>\n            <CardHeader title=\"Task Detail\" />\n            <CardContent>\n              <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 3, sm: 2 }}>\n                <TextField\n                  fullWidth\n                  size=\"small\"\n                  label=\"Task Name\"\n                  {...getFieldProps('name')}\n                  error={Boolean(touched.name && errors.name)}\n                  helperText={touched.name && errors.name}\n                />\n                <TextField\n                  fullWidth\n                  size=\"small\"\n                  label=\"Task Type\"\n                  {...getFieldProps('taskType')}\n                  error={Boolean(touched.taskType && errors.taskType)}\n                  helperText={touched.taskType && errors.taskType}\n                />\n              </Stack>\n            </CardContent>\n          </Card>\n\n          <Card>\n            <CardHeader title=\"Rewards\" />\n            <CardContent>\n              <Stack spacing={3}>\n                <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 3, sm: 2 }}>\n                  <TextField\n                    fullWidth\n                    size=\"small\"\n                    label=\"Total Budget\"\n                    type=\"number\"\n                    {...getFieldProps('totalBudget')}\n                    error={Boolean(touched.totalBudget && errors.totalBudget)}\n                    helperText={touched.totalBudget && errors.totalBudget}\n                  />\n                  <TextField\n                    fullWidth\n                    size=\"small\"\n                    label=\"Per User\"\n                    {...getFieldProps('perUser')}\n                    error={Boolean(touched.perUser && errors.perUser)}\n                    helperText={touched.perUser && errors.perUser}\n                  />\n                </Stack>\n\n                <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 3, sm: 2 }}>\n                  <TextField\n                    fullWidth\n                    size=\"small\"\n                    label=\"Star Per User\"\n                    type=\"number\"\n                    {...getFieldProps('starPerUser')}\n                    error={Boolean(touched.starPerUser && errors.starPerUser)}\n                    helperText={touched.starPerUser && errors.starPerUser}\n                  />\n                  <TextField\n                    fullWidth\n                    size=\"small\"\n                    label=\"Continue After Budget\"\n                    {...getFieldProps('continueAfterBudget')}\n                    error={Boolean(touched.continueAfterBudget && errors.continueAfterBudget)}\n                    helperText={touched.continueAfterBudget && errors.continueAfterBudget}\n                  />\n                </Stack>\n              </Stack>\n            </CardContent>\n          </Card>\n\n          <Card>\n            <CardHeader title=\"Audience\" />\n            <CardContent>\n              <Stack alignItems=\"center\" direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 3, sm: 2 }}>\n                <TextField\n                  fullWidth\n                  size=\"small\"\n                  label=\"Select Tier\"\n                  {...getFieldProps('tier')}\n                  error={Boolean(touched.tier && errors.tier)}\n                  helperText={touched.tier && errors.tier}\n                />\n                <Stack direction=\"row\" justifyContent=\"space-around\">\n                  <Typography variant=\"caption\">\n                    In case of public, the task goes to the activity feed and all users can see\n                  </Typography>\n                  <FormControlLabel\n                    labelPlacement=\"start\"\n                    control={<Switch {...getFieldProps('isPublic')} checked={values.isPublic} />}\n                    label={<Typography variant=\"subtitle2\">Public</Typography>}\n                    sx={{ mx: 0, width: 1, justifyContent: 'center' }}\n                  />\n                </Stack>\n              </Stack>\n            </CardContent>\n          </Card>\n        </Stack>\n      </Grid>\n    </Grid>\n  );\n};\n\nTaskAndRewardsForm.propTypes = {\n  formik: PropTypes.object,\n};\n\nexport default TaskAndRewardsForm;\n","import React, { useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { FieldArray, getIn } from 'formik';\nimport { isValid as isValidDate } from 'date-fns';\n// material\nimport { styled } from '@material-ui/core/styles';\nimport { DateTimePicker } from '@material-ui/lab';\nimport {\n  Autocomplete,\n  Avatar,\n  Button,\n  Card,\n  Chip,\n  FormHelperText,\n  Grid,\n  Stack,\n  TextField,\n  Typography,\n} from '@material-ui/core';\n// components\nimport { UploadSingleFile } from '../../upload';\nimport DynamicFormItem from '../../DynamicFormItem';\n\nconst LabelStyle = styled(Typography)(({ theme }) => ({\n  ...theme.typography.subtitle2,\n  color: theme.palette.text.secondary,\n  marginBottom: theme.spacing(1),\n}));\n\nconst TaskDetailForm = ({ formik }) => {\n  const { values, errors, touched, getFieldProps, setFieldValue } = formik;\n\n  const handleCoverDrop = useCallback(\n    (acceptedFiles) => {\n      const file = acceptedFiles[0];\n      if (file) {\n        setFieldValue('headerImage', {\n          ...file,\n          preview: URL.createObjectURL(file),\n        });\n      }\n    },\n    [setFieldValue]\n  );\n\n  return (\n    <Grid container spacing={3}>\n      <Grid item xs={12} md={8}>\n        <Stack spacing={3}>\n          <Stack>\n            <LabelStyle>Header Image</LabelStyle>\n            <UploadSingleFile\n              maxSize={3145728}\n              accept=\"image/*\"\n              file={values.coverUrl}\n              onDrop={handleCoverDrop}\n              error={Boolean(touched.coverUrl && errors.coverUrl)}\n            />\n            {touched.coverUrl && errors.coverUrl && (\n              <FormHelperText error sx={{ px: 2 }}>\n                {touched.coverUrl && errors.coverUrl}\n              </FormHelperText>\n            )}\n          </Stack>\n\n          <Stack>\n            <Stack direction=\"row\" justifyContent=\"space-between\" alignItems=\"center\">\n              <LabelStyle>Bonus Reward & Benefits</LabelStyle>\n              <Stack direction=\"row\" spacing={1} alignItems=\"center\">\n                <Button variant=\"contained\">Add New</Button>\n                <Button variant=\"contained\">Select More</Button>\n              </Stack>\n            </Stack>\n            <Stack direction=\"row\" spacing={1}>\n              {[1, 2, 3, 4, 5, 6].map((item, index) => (\n                <Avatar\n                  key={item + index}\n                  alt=\"bonus&rewards\"\n                  src=\"/static/mock-images/products/product_1.jpg\"\n                  sx={{ width: 64, height: 64 }}\n                />\n              ))}\n            </Stack>\n          </Stack>\n\n          <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 3, sm: 2 }}>\n            <TextField\n              fullWidth\n              multiline\n              rows={3}\n              size=\"small\"\n              label=\"Description\"\n              {...getFieldProps('description')}\n              error={Boolean(touched.description && errors.description)}\n              helperText={touched.description && errors.description}\n            />\n          </Stack>\n\n          <FieldArray\n            name=\"doList\"\n            render={(arrHelper) => {\n              const value = values.doList;\n              return (\n                <>\n                  {value.map((item, index) => {\n                    const fieldName = `doList.${index}`;\n                    return (\n                      <DynamicFormItem\n                        key={index}\n                        label={`Do ${index + 1}`}\n                        fieldProps={{ ...getFieldProps(fieldName) }}\n                        error={Boolean(getIn(touched, fieldName) && getIn(errors, fieldName))}\n                        helperText={getIn(touched, fieldName) && getIn(errors, fieldName)}\n                        isLastItem={index === value.length - 1}\n                        onAddClick={() => arrHelper.push('')}\n                        onRemoveClick={() => arrHelper.remove(index)}\n                      />\n                    );\n                  })}\n                </>\n              );\n            }}\n          />\n\n          <FieldArray\n            name=\"dontList\"\n            render={(arrHelper) => {\n              const value = values.dontList;\n              return (\n                <>\n                  {value.map((item, index) => {\n                    const fieldName = `dontList.${index}`;\n                    return (\n                      <DynamicFormItem\n                        key={index}\n                        label={`Don't ${index + 1}`}\n                        fieldProps={{ ...getFieldProps(fieldName) }}\n                        error={Boolean(getIn(touched, fieldName) && getIn(errors, fieldName))}\n                        helperText={getIn(touched, fieldName) && getIn(errors, fieldName)}\n                        isLastItem={index === value.length - 1}\n                        onAddClick={() => arrHelper.push('')}\n                        onRemoveClick={() => arrHelper.remove(index)}\n                      />\n                    );\n                  })}\n                </>\n              );\n            }}\n          />\n\n          <FieldArray\n            name=\"igCaptionQuestions\"\n            render={(arrHelper) => {\n              const value = values.igCaptionQuestions;\n              return (\n                <>\n                  {value.map((item, index) => {\n                    const fieldName = `igCaptionQuestions.${index}`;\n                    return (\n                      <DynamicFormItem\n                        key={index}\n                        label={`Instagram Caption Question ${index + 1}`}\n                        fieldProps={{ ...getFieldProps(fieldName) }}\n                        error={Boolean(getIn(touched, fieldName) && getIn(errors, fieldName))}\n                        helperText={getIn(touched, fieldName) && getIn(errors, fieldName)}\n                        isLastItem={index === value.length - 1}\n                        onAddClick={() => arrHelper.push('')}\n                        onRemoveClick={() => arrHelper.remove(index)}\n                      />\n                    );\n                  })}\n                </>\n              );\n            }}\n          />\n\n          <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 3, sm: 2 }}>\n            <TextField\n              fullWidth\n              size=\"small\"\n              label=\"Number of photo required\"\n              type=\"number\"\n              {...getFieldProps('noOfPhotoRequired')}\n              error={Boolean(touched.noOfPhotoRequired && errors.noOfPhotoRequired)}\n              helperText={touched.noOfPhotoRequired && errors.noOfPhotoRequired}\n            />\n            <TextField\n              fullWidth\n              size=\"small\"\n              label=\"Number of video required\"\n              type=\"number\"\n              {...getFieldProps('noOfVideoRequired')}\n              error={Boolean(touched.noOfVideoRequired && errors.noOfVideoRequired)}\n              helperText={touched.noOfVideoRequired && errors.noOfVideoRequired}\n            />\n          </Stack>\n\n          <Autocomplete\n            multiple\n            freeSolo\n            value={values.hashtags}\n            onChange={(event, newValue) => {\n              setFieldValue('hashtags', newValue);\n            }}\n            options={[]}\n            renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n                <Chip key={option} size=\"small\" label={option} {...getTagProps({ index })} />\n              ))\n            }\n            renderInput={(params) => <TextField {...params} label=\"Hashtags\" />}\n          />\n\n          <Autocomplete\n            multiple\n            freeSolo\n            value={values.mentions}\n            onChange={(event, newValue) => {\n              setFieldValue('mentions', newValue);\n            }}\n            options={[]}\n            renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n                <Chip key={option} size=\"small\" label={option} {...getTagProps({ index })} />\n              ))\n            }\n            renderInput={(params) => <TextField {...params} label=\"Mentions\" />}\n          />\n\n          <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 3, sm: 2 }}>\n            <DateTimePicker\n              label=\"Start date\"\n              value={values.startDate}\n              inputFormat=\"dd/MM/yyyy hh:mm a\"\n              onChange={(date) => (isValidDate(date) ? setFieldValue('startDate', date) : null)}\n              renderInput={(params) => (\n                <TextField\n                  {...params}\n                  size=\"small\"\n                  fullWidth\n                  error={Boolean(touched.startDate && errors.startDate)}\n                  helperText={touched.startDate && errors.startDate}\n                  sx={{ mb: 3 }}\n                />\n              )}\n            />\n            <DateTimePicker\n              label=\"End date\"\n              value={values.endDate}\n              inputFormat=\"dd/MM/yyyy hh:mm a\"\n              onChange={(date) => (isValidDate(date) ? setFieldValue('endDate', date) : null)}\n              renderInput={(params) => (\n                <TextField\n                  {...params}\n                  size=\"small\"\n                  fullWidth\n                  error={Boolean(touched.endDate && errors.endDate)}\n                  helperText={touched.endDate && errors.endDate}\n                  sx={{ mb: 3 }}\n                />\n              )}\n            />\n          </Stack>\n        </Stack>\n      </Grid>\n      <Grid item xs={12} md={4} sx={{ height: 'auto' }}>\n        <Card sx={{ p: 3, height: '100%' }}>Later Phase</Card>\n      </Grid>\n    </Grid>\n  );\n};\n\nTaskDetailForm.propTypes = {\n  formik: PropTypes.object,\n};\n\nexport default TaskDetailForm;\n","import * as Yup from 'yup';\nimport PropTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport { useSnackbar } from 'notistack5';\nimport { useNavigate } from 'react-router-dom';\nimport { Form, FormikProvider, useFormik } from 'formik';\n\n// material\nimport { LoadingButton } from '@material-ui/lab';\nimport { Box, Card, Grid, Stack, Button } from '@material-ui/core';\n// paths\nimport { PATH_DASHBOARD } from '../../../routes/paths';\n// utils\nimport { nameRegExp } from '../../../utils/constants/regexs';\n// components\nimport Steps from '../../Steps';\nimport CampaignTypeForm from '../CampaignTypeForm';\nimport TaskAndRewardsForm from './TaskAndRewardsForm';\nimport TaskDetailForm from './TaskDetailForm';\n\n// ----------------------------------------------------------------------\n\nconst STEPS = ['Campaign Type', 'Task & Rewards', 'Task Detail'];\n\nfunction TaskNewForm({ isEdit, currentTask }) {\n  const navigate = useNavigate();\n  const { enqueueSnackbar } = useSnackbar();\n  const [activeStep, setActiveStep] = useState(0);\n\n  const CampaignTypeSchema = Yup.object().shape({\n    brand: Yup.string().matches(nameRegExp, 'Cannot include special characters.').required('Brand is required'),\n    campaignType: Yup.string(),\n  });\n\n  const TaskAndRewardsSchema = Yup.object().shape({\n    name: Yup.string().matches(nameRegExp, 'Cannot include special characters.').required('Name is required'),\n    taskType: Yup.string(),\n    totalBudget: Yup.number(),\n    perUser: Yup.string(),\n    starPerUser: Yup.number(),\n    continueAfterBudget: Yup.string(),\n    tier: Yup.string(),\n    isPublic: Yup.boolean().required('Status is required'),\n  });\n\n  const TaskDetailSchema = Yup.object().shape({\n    headerImage: Yup.mixed(),\n    description: Yup.string(),\n    doList: Yup.array().of(Yup.string()),\n    dontList: Yup.array().of(Yup.string()),\n    igCaptionQuestions: Yup.array().of(Yup.string()),\n    noOfPhotoRequired: Yup.number(),\n    noOfVideoRequired: Yup.number(),\n    hashtags: Yup.array().of(Yup.string()),\n    mentions: Yup.array().of(Yup.string()),\n    startDate: Yup.date().nullable(true),\n    endDate: Yup.date().when('startDate', (startDate, schema) =>\n      startDate ? schema.min(startDate, 'End date must be later than start date') : schema.nullable(true)\n    ),\n  });\n\n  const VALIDATION_SCHEMAS = [CampaignTypeSchema, TaskAndRewardsSchema, TaskDetailSchema];\n\n  const isLastStep = () => activeStep === STEPS.length - 1;\n\n  const handlePrevStep = () => setActiveStep((prev) => prev - 1);\n\n  const handleNextStep = () => setActiveStep((prev) => prev + 1);\n\n  const formik = useFormik({\n    enableReinitialize: true,\n    initialValues: {\n      brand: currentTask?.brand || '',\n      campaignType: currentTask?.type || '',\n      name: currentTask?.name || '',\n      taskType: currentTask?.taskType || '',\n      totalBudget: currentTask?.totalBudget || undefined,\n      perUser: currentTask?.perUser || '',\n      starPerUser: currentTask?.starPerUser || undefined,\n      continueAfterBudget: currentTask?.continueAfterBudget || '',\n      tier: currentTask?.tier || '',\n      isPublic: currentTask?.isPublic || false,\n      headerImage: currentTask?.headerImage || undefined,\n      doList: currentTask?.doList || [''],\n      dontList: currentTask?.dontList || [''],\n      igCaptionQuestions: currentTask?.igCaptionQuestions || [''],\n      noOfPhotoRequired: currentTask?.noOfPhotoRequired || undefined,\n      noOfVideoRequired: currentTask?.noOfVideoRequired || undefined,\n      hashtags: currentTask?.hashtags || [],\n      mentions: currentTask?.mentions || [],\n      startDate: currentTask?.startDate ? new Date(currentTask.startDate) : null,\n      endDate: currentTask?.endDate ? new Date(currentTask.endDate) : null,\n    },\n    validationSchema: VALIDATION_SCHEMAS[activeStep],\n    onSubmit: async (values, { setSubmitting, resetForm, setErrors }) => {\n      if (isLastStep()) {\n        try {\n          alert(JSON.stringify(values));\n          resetForm();\n          setSubmitting(false);\n          enqueueSnackbar(!isEdit ? 'Create success' : 'Update success', { variant: 'success' });\n          navigate(PATH_DASHBOARD.task.list);\n        } catch (error) {\n          console.error(error);\n          setSubmitting(false);\n          setErrors(error);\n        }\n      } else {\n        handleNextStep();\n      }\n    },\n  });\n\n  const { errors, values, handleSubmit, isSubmitting } = formik;\n\n  console.log('Active Step: ', activeStep);\n  console.log('*** ', values, errors);\n\n  return (\n    <FormikProvider value={formik}>\n      <Form noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\n        <Grid container justifyContent=\"center\">\n          <Grid item xs={12} md={8} sx={{ mb: 5 }}>\n            <Steps steps={STEPS} activeStep={activeStep} />\n          </Grid>\n        </Grid>\n\n        <Card sx={{ p: 3 }}>\n          <Stack spacing={3}>\n            {activeStep === 0 && <CampaignTypeForm formik={formik} />}\n            {activeStep === 1 && <TaskAndRewardsForm formik={formik} />}\n            {activeStep === 2 && <TaskDetailForm formik={formik} />}\n            <Box sx={{ mt: 3, display: 'flex', justifyContent: 'flex-end' }}>\n              {activeStep !== 0 && (\n                <Button\n                  sx={{ mr: 2 }}\n                  variant=\"outlined\"\n                  onClick={isLastStep() ? () => console.log('Draft Clicked') : handlePrevStep}\n                >\n                  {isLastStep() ? 'Draft' : 'Back'}\n                </Button>\n              )}\n              <LoadingButton type=\"submit\" variant=\"contained\" loading={isSubmitting}>\n                {isLastStep() ? 'Setup Complete' : 'Next'}\n              </LoadingButton>\n            </Box>\n          </Stack>\n        </Card>\n      </Form>\n    </FormikProvider>\n  );\n}\n\nTaskNewForm.propTypes = {\n  isEdit: PropTypes.bool,\n  currentTask: PropTypes.object,\n};\n\nexport default TaskNewForm;\n","import { useParams, useLocation } from 'react-router-dom';\n// material\nimport { Container } from '@material-ui/core';\n// routes\nimport { PATH_DASHBOARD } from '../routes/paths';\n// hooks\nimport useSettings from '../hooks/useSettings';\n// components\nimport Page from '../components/Page';\nimport HeaderBreadcrumbs from '../components/HeaderBreadcrumbs';\nimport TaskNewForm from '../components/campaign/task/TaskNewForm';\n\n// ----------------------------------------------------------------------\n\nfunction TaskCreate() {\n  const { themeStretch } = useSettings();\n  const { pathname } = useLocation();\n  const { name } = useParams();\n  const isEdit = pathname.includes('edit');\n\n  const currentTask = {};\n\n  return (\n    <Page title=\"Task: Create a new task\">\n      <Container maxWidth={themeStretch ? false : 'lg'}>\n        <HeaderBreadcrumbs\n          heading={!isEdit ? 'Create Task' : 'Edit Task'}\n          links={[{ name: 'Task', href: PATH_DASHBOARD.task.list }, { name: !isEdit ? 'Create Task' : name }]}\n        />\n        <TaskNewForm isEdit={isEdit} currentTask={currentTask} />\n      </Container>\n    </Page>\n  );\n}\n\nexport default TaskCreate;\n"],"sourceRoot":""}