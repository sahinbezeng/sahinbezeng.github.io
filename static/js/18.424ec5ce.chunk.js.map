{"version":3,"sources":["pages/CampaignList.js","components/HeaderBreadcrumbs.js","components/Label.js","components/campaign/list/CampaignListTable.js"],"names":["CampaignList","themeStretch","useSettings","title","maxWidth","heading","links","name","href","PATH_DASHBOARD","campaign","list","all","action","variant","component","RouterLink","to","create","startIcon","icon","PlusFill","sx","height","HeaderBreadcrumbs","moreLink","other","mb","spacing","direction","alignItems","flexGrow","gutterBottom","flexShrink","isString","target","map","noWrap","display","RootStyle","styled","theme","styleProps","isLight","palette","mode","color","minWidth","lineHeight","borderRadius","cursor","whiteSpace","justifyContent","padding","grey","fontSize","typography","pxToRem","fontFamily","backgroundColor","fontWeight","fontWeightBold","contrastText","main","styleFilled","border","styleOutlined","alpha","styleGhost","text","primary","secondary","common","white","Label","children","columns","field","headerName","width","type","valueOptions","renderCell","params","getStatus","getValue","id","textTransform","mx","align","sortable","filterable","disableColumnMenu","selectedID","row","onClick","console","log","Icon","moreVerticalFill","CAMPAIGN_TYPES","rows","Array","_","index","faker","commerce","productName","brandName","company","companyName","brandStatus","datatype","number","min","max","precision","campaignType","helpers","randomize","campaignBudget","budgetLeft","tokensGiven","starsGiven","additionalTokensAdded","engagementRate","reach","targetReach","brandShared","entries","followingUsersNotCompleted","entriesAfterRewardsCompleted","deletedEntries","tickets","bonusSet","status","sample","CustomPagination","useGridSlotComponentProps","state","apiRef","count","pagination","pageCount","page","onChange","event","value","current","setPage","RatingInputValue","item","applyValue","pl","size","placeholder","Number","newValue","CampaignListTable","length","ratingColumn","find","column","ratingColIndex","findIndex","col","ratingFilterOperators","getGridNumericColumnOperators","operator","InputComponent","filterOperators","pageSize","components","Toolbar","GridToolbar","Pagination","filterModel","items","columnField","operatorValue"],"mappings":"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CACEF,MAAO,YACPC,WAAY,aACZC,MAAO,KAET,CACEF,MAAO,cACPC,WAAY,eACZE,KAAM,SACND,MAAO,KAET,CACEF,MAAO,eACPC,WAAY,gBACZC,MAAO,KAET,CACEF,MAAO,iBACPC,WAAY,kBACZE,KAAM,SACND,MAAO,KAET,CACEF,MAAO,aACPC,WAAY,cACZE,KAAM,SACND,MAAO,KAET,CACEF,MAAO,cACPC,WAAY,eACZE,KAAM,SACND,MAAO,KAET,CACEF,MAAO,aACPC,WAAY,cACZE,KAAM,SACND,MAAO,KAET,CACEF,MAAO,wBACPC,WAAY,eACZE,KAAM,SACND,MAAO,KAET,CACEF,MAAO,iBACPC,WAAY,kBACZE,KAAM,SACND,MAAO,KAET,CACEF,MAAO,QACPC,WAAY,QACZE,KAAM,SACND,MAAO,KAET,CACEF,MAAO,cACPC,WAAY,eACZE,KAAM,SACND,MAAO,KAET,CACEF,MAAO,cACPC,WAAY,eACZE,KAAM,SACND,MAAO,KAET,CACEF,MAAO,UACPC,WAAY,UACZE,KAAM,SACND,MAAO,KAET,CACEF,MAAO,6BACPC,WAAY,gCACZE,KAAM,SACND,MAAO,KAET,CACEF,MAAO,+BACPC,WAAY,kCACZE,KAAM,SACND,MAAO,KAET,CACEF,MAAO,iBACPC,WAAY,kBACZE,KAAM,SACND,MAAO,KAET,CACEF,MAAO,UACPC,WAAY,UACZE,KAAM,SACND,MAAO,KAET,CACEF,MAAO,WACPC,WAAY,YACZE,KAAM,SACND,MAAO,KAET,CACEF,MAAO,SACPG,KAAM,eACNF,WAAY,SACZC,MAAO,IACPE,aAAc,CAAC,SAAU,OAAQ,QACjCC,WAAY,SAACC,GACX,IAAMC,EAAYD,EAAOE,SAASF,EAAOG,GAAI,UAC7C,OACE,cAAC,IAAD,CACExC,OAAsB,SAAdsC,EAAwB,QAA2B,SAAdA,GAAwB,YAAc,UACnF9D,GAAI,CAAEiE,cAAe,aAAcC,GAAI,QAFzC,SAIGJ,MAKT,CACEP,MAAO,SACPC,WAAY,IACZC,MAAO,GACPU,MAAO,QACPC,UAAU,EACVC,YAAY,EACZC,mBAAm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","file":"static/js/18.424ec5ce.chunk.js","sourcesContent":["import { Link as RouterLink } from 'react-router-dom';\nimport { Icon } from '@iconify/react';\nimport PlusFill from '@iconify/icons-eva/plus-fill';\n// material\nimport { Box, Button, Container } from '@material-ui/core';\n\nimport useSettings from '../hooks/useSettings';\n\nimport { PATH_DASHBOARD } from '../routes/paths';\n\nimport Page from '../components/Page';\nimport HeaderBreadcrumbs from '../components/HeaderBreadcrumbs';\nimport CampaignListTable from '../components/campaign/list/CampaignListTable';\n\n// ----------------------------------------------------------------------\n\nconst CampaignList = () => {\n  const { themeStretch } = useSettings();\n\n  return (\n    <Page title=\"Campaign: List\">\n      <Container maxWidth={themeStretch ? false : 'lg'}>\n        <HeaderBreadcrumbs\n          heading=\"Campaign List\"\n          links={[{ name: 'Campaign', href: PATH_DASHBOARD.campaign.list.all }, { name: 'List' }]}\n          action={\n            <Button\n              variant=\"contained\"\n              component={RouterLink}\n              to={PATH_DASHBOARD.campaign.create}\n              startIcon={<Icon icon={PlusFill} />}\n            >\n              New Campaign\n            </Button>\n          }\n        />\n        <Box sx={{ height: 720 }}>\n          <CampaignListTable />\n        </Box>\n      </Container>\n    </Page>\n  );\n};\n\nexport default CampaignList;\n","import { isString } from 'lodash';\nimport PropTypes from 'prop-types';\n// material\nimport { Box, Typography, Link, Stack } from '@material-ui/core';\n//\nimport { MBreadcrumbs } from './@material-extend';\n\n// ----------------------------------------------------------------------\n\nHeaderBreadcrumbs.propTypes = {\n  links: PropTypes.array,\n  action: PropTypes.node,\n  heading: PropTypes.string.isRequired,\n  moreLink: PropTypes.oneOfType([PropTypes.string, PropTypes.array]),\n  sx: PropTypes.object,\n};\n\nexport default function HeaderBreadcrumbs({ links, action, heading, moreLink = '' || [], sx, ...other }) {\n  return (\n    <Stack sx={sx} mb={5} spacing={2}>\n      <Stack direction=\"row\" alignItems=\"center\">\n        <Box sx={{ flexGrow: 1 }}>\n          <Typography variant=\"h4\" gutterBottom>\n            {heading}\n          </Typography>\n          <MBreadcrumbs links={links} {...other} />\n        </Box>\n\n        {action && <Box sx={{ flexShrink: 0 }}>{action}</Box>}\n      </Stack>\n\n      {isString(moreLink) ? (\n        <Link href={moreLink} target=\"_blank\" variant=\"body2\">\n          {moreLink}\n        </Link>\n      ) : (\n        moreLink.map((href) => (\n          <Link noWrap key={href} href={href} variant=\"body2\" target=\"_blank\" sx={{ display: 'flex' }}>\n            {href}\n          </Link>\n        ))\n      )}\n    </Stack>\n  );\n}\n","import PropTypes from 'prop-types';\n// material\nimport { alpha, styled } from '@material-ui/core/styles';\n\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled('span')(({ theme, styleProps }) => {\n  const isLight = theme.palette.mode === 'light';\n  const { color, variant } = styleProps;\n\n  const styleFilled = (color) => ({\n    color: theme.palette[color].contrastText,\n    backgroundColor: theme.palette[color].main,\n  });\n\n  const styleOutlined = (color) => ({\n    color: theme.palette[color].main,\n    backgroundColor: 'transparent',\n    border: `1px solid ${theme.palette[color].main}`,\n  });\n\n  const styleGhost = (color) => ({\n    color: theme.palette[color][isLight ? 'dark' : 'light'],\n    backgroundColor: alpha(theme.palette[color].main, 0.16),\n  });\n\n  return {\n    height: 22,\n    minWidth: 22,\n    lineHeight: 0,\n    borderRadius: 8,\n    cursor: 'default',\n    alignItems: 'center',\n    whiteSpace: 'nowrap',\n    display: 'inline-flex',\n    justifyContent: 'center',\n    padding: theme.spacing(0, 1),\n    color: theme.palette.grey[800],\n    fontSize: theme.typography.pxToRem(12),\n    fontFamily: theme.typography.fontFamily,\n    backgroundColor: theme.palette.grey[300],\n    fontWeight: theme.typography.fontWeightBold,\n\n    ...(color !== 'default'\n      ? {\n          ...(variant === 'filled' && { ...styleFilled(color) }),\n          ...(variant === 'outlined' && { ...styleOutlined(color) }),\n          ...(variant === 'ghost' && { ...styleGhost(color) }),\n        }\n      : {\n          ...(variant === 'outlined' && {\n            backgroundColor: 'transparent',\n            color: theme.palette.text.primary,\n            border: `1px solid ${theme.palette.grey[500_32]}`,\n          }),\n          ...(variant === 'ghost' && {\n            color: isLight ? theme.palette.text.secondary : theme.palette.common.white,\n            backgroundColor: theme.palette.grey[500_16],\n          }),\n        }),\n  };\n});\n\n// ----------------------------------------------------------------------\n\nexport default function Label({ color = 'default', variant = 'ghost', children, ...other }) {\n  return (\n    <RootStyle styleProps={{ color, variant }} {...other}>\n      {children}\n    </RootStyle>\n  );\n}\n\nLabel.propTypes = {\n  children: PropTypes.node,\n  color: PropTypes.oneOf(['default', 'primary', 'secondary', 'info', 'success', 'warning', 'error']),\n  variant: PropTypes.oneOf(['filled', 'outlined', 'ghost']),\n};\n","import PropTypes from 'prop-types';\nimport faker from 'faker';\nimport { sample } from 'lodash';\nimport { Icon } from '@iconify/react';\nimport moreVerticalFill from '@iconify/icons-eva/more-vertical-fill';\n// material\nimport { Box, Rating, Pagination } from '@material-ui/core';\nimport {\n  DataGrid,\n  GridToolbar,\n  useGridSlotComponentProps,\n  getGridNumericColumnOperators,\n} from '@material-ui/data-grid';\n// utils\n// import { fPercent } from '../../../utils/formatNumber';\n// components\nimport Label from '../../Label';\nimport { MIconButton } from '../../@material-extend';\n\n// ----------------------------------------------------------------------\n\nconst columns = [\n  // OPTIONS\n  // https://material-ui.com/api/data-grid/grid-col-def/#main-content\n  // - hide: false (default)\n  // - editable: false (default)\n  // - filterable: true (default)\n  // - sortable: true (default)\n  // - disableColumnMenu: false (default)\n\n  // FIELD TYPES\n  // --------------------\n  // 'string' (default)\n  // 'number'\n  // 'date'\n  // 'dateTime'\n  // 'boolean'\n  // 'singleSelect'\n\n  {\n    field: 'id',\n  },\n  {\n    field: 'name',\n    headerName: 'Task Name',\n    width: 200,\n  },\n  {\n    field: 'brandName',\n    headerName: 'Brand Name',\n    width: 200,\n  },\n  {\n    field: 'brandStatus',\n    headerName: 'Brand Status',\n    type: 'number',\n    width: 200,\n  },\n  {\n    field: 'campaignType',\n    headerName: 'Campaign Type',\n    width: 200,\n  },\n  {\n    field: 'campaignBudget',\n    headerName: 'Campaign Budget',\n    type: 'number',\n    width: 200,\n  },\n  {\n    field: 'budgetLeft',\n    headerName: 'Budget Left',\n    type: 'number',\n    width: 200,\n  },\n  {\n    field: 'tokensGiven',\n    headerName: 'Tokens Given',\n    type: 'number',\n    width: 200,\n  },\n  {\n    field: 'starsGiven',\n    headerName: 'Stars Given',\n    type: 'number',\n    width: 200,\n  },\n  {\n    field: 'additionalTokensAdded',\n    headerName: 'Tokens Added',\n    type: 'number',\n    width: 200,\n  },\n  {\n    field: 'engagementRate',\n    headerName: 'Engagement Rate',\n    type: 'number',\n    width: 200,\n  },\n  {\n    field: 'reach',\n    headerName: 'Reach',\n    type: 'number',\n    width: 200,\n  },\n  {\n    field: 'targetReach',\n    headerName: 'Target Reach',\n    type: 'number',\n    width: 200,\n  },\n  {\n    field: 'brandShared',\n    headerName: 'Brand Shared',\n    type: 'number',\n    width: 200,\n  },\n  {\n    field: 'entries',\n    headerName: 'Entries',\n    type: 'number',\n    width: 200,\n  },\n  {\n    field: 'followingUsersNotCompleted',\n    headerName: 'Following Users Not Completed',\n    type: 'number',\n    width: 200,\n  },\n  {\n    field: 'entriesAfterRewardsCompleted',\n    headerName: 'Entries After Rewards Completed',\n    type: 'number',\n    width: 200,\n  },\n  {\n    field: 'deletedEntries',\n    headerName: 'Deleted Entries',\n    type: 'number',\n    width: 200,\n  },\n  {\n    field: 'tickets',\n    headerName: 'Tickets',\n    type: 'number',\n    width: 200,\n  },\n  {\n    field: 'bonusSet',\n    headerName: 'Bonus Set',\n    type: 'number',\n    width: 200,\n  },\n  {\n    field: 'status',\n    type: 'singleSelect',\n    headerName: 'Status',\n    width: 120,\n    valueOptions: ['online', 'away', 'busy'],\n    renderCell: (params) => {\n      const getStatus = params.getValue(params.id, 'status');\n      return (\n        <Label\n          color={(getStatus === 'busy' && 'error') || (getStatus === 'away' && 'warning') || 'success'}\n          sx={{ textTransform: 'capitalize', mx: 'auto' }}\n        >\n          {getStatus}\n        </Label>\n      );\n    },\n  },\n  {\n    field: 'action',\n    headerName: ' ',\n    width: 80,\n    align: 'right',\n    sortable: false,\n    filterable: false,\n    disableColumnMenu: true,\n    renderCell: (params) => {\n      const selectedID = params.row.id;\n      const handleClick = () => {\n        console.log('selectedID', selectedID);\n      };\n\n      return (\n        <MIconButton onClick={handleClick}>\n          <Box component={Icon} icon={moreVerticalFill} sx={{ width: 20, height: 20 }} />\n        </MIconButton>\n      );\n    },\n  },\n];\n\nconst CAMPAIGN_TYPES = ['Task', 'Contest', 'Survey', 'Watch Ad', 'Campaign'];\n\nconst rows = [...Array(100)].map((_, index) => {\n  const setIndex = index + 1;\n  return {\n    id: `id ${setIndex}`,\n    name: faker.commerce.productName(),\n    brandName: faker.company.companyName(),\n    brandStatus: faker.datatype.number({ min: 1, max: 5, precision: 1 }),\n    campaignType: faker.helpers.randomize(CAMPAIGN_TYPES),\n    campaignBudget: faker.datatype.number({ min: 1000, max: 500000, precision: 1 }),\n    budgetLeft: faker.datatype.number({ min: 1000, max: 500000, precision: 1 }),\n    tokensGiven: faker.datatype.number({ min: 100, max: 10000, precision: 1 }),\n    starsGiven: faker.datatype.number({ min: 100, max: 1000, precision: 1 }),\n    additionalTokensAdded: faker.datatype.number({ min: 100, max: 5000, precision: 1 }),\n    engagementRate: faker.datatype.number({ min: 100, max: 5000, precision: 1 }),\n    reach: faker.datatype.number({ min: 100, max: 5000, precision: 1 }),\n    targetReach: faker.datatype.number({ min: 100, max: 5000, precision: 1 }),\n    brandShared: faker.datatype.number({ min: 100, max: 5000, precision: 1 }),\n    entries: faker.datatype.number({ min: 100, max: 5000, precision: 1 }),\n    followingUsersNotCompleted: faker.datatype.number({ min: 100, max: 5000, precision: 1 }),\n    entriesAfterRewardsCompleted: faker.datatype.number({ min: 100, max: 5000, precision: 1 }),\n    deletedEntries: faker.datatype.number({ min: 100, max: 5000, precision: 1 }),\n    tickets: faker.datatype.number({ min: 100, max: 5000, precision: 1 }),\n    bonusSet: faker.datatype.number({ min: 100, max: 5000, precision: 1 }),\n    status: sample(['online', 'away', 'busy']),\n  };\n});\n\n// ----------------------------------------------------------------------\n\nfunction CustomPagination() {\n  const { state, apiRef } = useGridSlotComponentProps();\n\n  return (\n    <Pagination\n      color=\"primary\"\n      count={state.pagination.pageCount}\n      page={state.pagination.page + 1}\n      onChange={(event, value) => apiRef.current.setPage(value - 1)}\n    />\n  );\n}\n\nRatingInputValue.propTypes = {\n  applyValue: PropTypes.func,\n  item: PropTypes.shape({\n    value: PropTypes.number,\n  }),\n};\n\nfunction RatingInputValue({ item, applyValue }) {\n  return (\n    <Box sx={{ pl: 2, height: 1, alignItems: 'center', display: 'inline-flex' }}>\n      <Rating\n        size=\"small\"\n        name=\"custom-rating-filter-operator\"\n        placeholder=\"Filter value\"\n        value={Number(item.value)}\n        onChange={(event, newValue) => {\n          applyValue({ ...item, value: newValue });\n        }}\n        precision={0.5}\n      />\n    </Box>\n  );\n}\n\nexport default function CampaignListTable() {\n  if (columns.length > 0) {\n    const ratingColumn = columns.find((column) => column.field === 'rating');\n    const ratingColIndex = columns.findIndex((col) => col.field === 'rating');\n\n    const ratingFilterOperators = getGridNumericColumnOperators().map((operator) => ({\n      ...operator,\n      InputComponent: RatingInputValue,\n    }));\n\n    columns[ratingColIndex] = {\n      ...ratingColumn,\n      filterOperators: ratingFilterOperators,\n    };\n  }\n\n  return (\n    <DataGrid\n      rows={rows}\n      columns={columns}\n      pagination\n      pageSize={10}\n      components={{\n        Toolbar: GridToolbar,\n        Pagination: CustomPagination,\n      }}\n      filterModel={{\n        items: [{ columnField: 'engagementRate', value: '2500', operatorValue: '>=' }],\n      }}\n    />\n  );\n}\n"],"sourceRoot":""}