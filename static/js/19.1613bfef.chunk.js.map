{"version":3,"sources":["../node_modules/@iconify/icons-eva/plus-fill.js","../node_modules/@mui/material/CardContent/cardContentClasses.js","../node_modules/@mui/material/CardContent/CardContent.js","../node_modules/@mui/material/CardHeader/cardHeaderClasses.js","../node_modules/@mui/material/CardHeader/CardHeader.js","../node_modules/@mui/icons-material/esm/Delete.js","components/bonus/TicketRuleNewForm.js","pages/TicketRuleCreate.js"],"names":["exports","__esModule","default","getCardContentUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CardContentRoot","styled","name","overridesResolver","props","styles","root","padding","paddingBottom","CardContent","React","inProps","ref","useThemeProps","className","component","other","_objectWithoutPropertiesLoose","ownerState","_extends","classes","composeClasses","useUtilityClasses","_jsx","as","clsx","getCardHeaderUtilityClass","cardHeaderClasses","CardHeaderRoot","title","subheader","display","alignItems","CardHeaderAvatar","avatar","flex","marginRight","CardHeaderAction","action","alignSelf","marginTop","marginBottom","CardHeaderContent","content","CardHeader","disableTypography","subheaderProp","subheaderTypographyProps","titleProp","titleTypographyProps","type","Typography","variant","children","color","_jsxs","createSvgIcon","d","initialFromToObject","from","to","tickets","initialSocialRuleObject","socialNetworkCount","HistoricalDataRules","formik","errors","values","touched","getFieldProps","render","historicalDataArrayHelpers","Card","Button","size","startIcon","icon","PlusFill","onClick","push","Stack","spacing","historicalDataRules","map","rule","index","fieldNamePrefix","Grid","container","justifyContent","item","sm","md","direction","TextField","fullWidth","error","Boolean","getIn","helperText","IconButton","remove","Delete","AppLevelRules","appLevelArrayHelpers","appLevelRules","FollowerRules","followerArrayHelpers","followerRules","SocialNetworkRules","setFieldValue","socialNetworkArrayHelpers","Autocomplete","multiple","disableCloseOnSelect","value","socialNetworks","onChange","event","newValue","options","renderInput","params","label","socialNetworkRules","NewTicketRuleSchema","Yup","shape","required","TicketRuleNewForm","isEdit","currentTicketRule","navigate","useNavigate","enqueueSnackbar","useSnackbar","useFormik","enableReinitialize","initialValues","types","validationSchema","onSubmit","a","setSubmitting","resetForm","setErrors","alert","JSON","stringify","PATH_DASHBOARD","bonus","createTicketRule","console","handleSubmit","isSubmitting","log","noValidate","autoComplete","xs","includes","Box","sx","mt","LoadingButton","loading","endIcon","Save","TicketRuleCreate","themeStretch","useSettings","pathname","useLocation","useParams","Page","Container","maxWidth","HeaderBreadcrumbs","heading","links","href"],"mappings":"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","file":"static/js/19.1613bfef.chunk.js","sourcesContent":["var data = {\n\t\"body\": \"<path fill=\\\"currentColor\\\" d=\\\"M19 11h-6V5a1 1 0 0 0-2 0v6H5a1 1 0 0 0 0 2h6v6a1 1 0 0 0 2 0v-6h6a1 1 0 0 0 0-2z\\\"/>\",\n\t\"width\": 24,\n\t\"height\": 24\n};\nexports.__esModule = true;\nexports.default = data;\n","import { generateUtilityClass, generateUtilityClasses } from '@mui/core';\nexport function getCardContentUtilityClass(slot) {\n  return generateUtilityClass('MuiCardContent', slot);\n}\nconst cardContentClasses = generateUtilityClasses('MuiCardContent', ['root']);\nexport default cardContentClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/core';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getCardContentUtilityClass } from './cardContentClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardContentUtilityClass, classes);\n};\n\nconst CardContentRoot = styled('div', {\n  name: 'MuiCardContent',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  };\n});\nconst CardContent = /*#__PURE__*/React.forwardRef(function CardContent(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardContent'\n  });\n\n  const {\n    className,\n    component = 'div'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    component\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardContentRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default CardContent;","import { generateUtilityClass, generateUtilityClasses } from '@mui/core';\nexport function getCardHeaderUtilityClass(slot) {\n  return generateUtilityClass('MuiCardHeader', slot);\n}\nconst cardHeaderClasses = generateUtilityClasses('MuiCardHeader', ['root', 'avatar', 'action', 'content', 'title', 'subheader']);\nexport default cardHeaderClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"action\", \"avatar\", \"className\", \"component\", \"disableTypography\", \"subheader\", \"subheaderTypographyProps\", \"title\", \"titleTypographyProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/core';\nimport Typography from '../Typography';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport cardHeaderClasses, { getCardHeaderUtilityClass } from './cardHeaderClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    avatar: ['avatar'],\n    action: ['action'],\n    content: ['content'],\n    title: ['title'],\n    subheader: ['subheader']\n  };\n  return composeClasses(slots, getCardHeaderUtilityClass, classes);\n};\n\nconst CardHeaderRoot = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Root',\n  overridesResolver: (props, styles) => _extends({\n    [`& .${cardHeaderClasses.title}`]: styles.title,\n    [`& .${cardHeaderClasses.subheader}`]: styles.subheader\n  }, styles.root)\n})({\n  display: 'flex',\n  alignItems: 'center',\n  padding: 16\n});\nconst CardHeaderAvatar = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Avatar',\n  overridesResolver: (props, styles) => styles.avatar\n})({\n  display: 'flex',\n  flex: '0 0 auto',\n  marginRight: 16\n});\nconst CardHeaderAction = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Action',\n  overridesResolver: (props, styles) => styles.action\n})({\n  flex: '0 0 auto',\n  alignSelf: 'flex-start',\n  marginTop: -4,\n  marginRight: -8,\n  marginBottom: -4\n});\nconst CardHeaderContent = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Content',\n  overridesResolver: (props, styles) => styles.content\n})({\n  flex: '1 1 auto'\n});\nconst CardHeader = /*#__PURE__*/React.forwardRef(function CardHeader(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardHeader'\n  });\n\n  const {\n    action,\n    avatar,\n    className,\n    component = 'div',\n    disableTypography = false,\n    subheader: subheaderProp,\n    subheaderTypographyProps,\n    title: titleProp,\n    titleTypographyProps\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    component,\n    disableTypography\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  let title = titleProp;\n\n  if (title != null && title.type !== Typography && !disableTypography) {\n    title = /*#__PURE__*/_jsx(Typography, _extends({\n      variant: avatar ? 'body2' : 'h5',\n      className: classes.title,\n      component: \"span\",\n      display: \"block\"\n    }, titleTypographyProps, {\n      children: title\n    }));\n  }\n\n  let subheader = subheaderProp;\n\n  if (subheader != null && subheader.type !== Typography && !disableTypography) {\n    subheader = /*#__PURE__*/_jsx(Typography, _extends({\n      variant: avatar ? 'body2' : 'body1',\n      className: classes.subheader,\n      color: \"text.secondary\",\n      component: \"span\",\n      display: \"block\"\n    }, subheaderTypographyProps, {\n      children: subheader\n    }));\n  }\n\n  return /*#__PURE__*/_jsxs(CardHeaderRoot, _extends({\n    className: clsx(classes.root, className),\n    as: component,\n    ref: ref,\n    ownerState: ownerState\n  }, other, {\n    children: [avatar && /*#__PURE__*/_jsx(CardHeaderAvatar, {\n      className: classes.avatar,\n      ownerState: ownerState,\n      children: avatar\n    }), /*#__PURE__*/_jsxs(CardHeaderContent, {\n      className: classes.content,\n      ownerState: ownerState,\n      children: [title, subheader]\n    }), action && /*#__PURE__*/_jsx(CardHeaderAction, {\n      className: classes.action,\n      ownerState: ownerState,\n      children: action\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardHeader.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The action to display in the card header.\n   */\n  action: PropTypes.node,\n\n  /**\n   * The Avatar element to display.\n   */\n  avatar: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, `subheader` and `title` won't be wrapped by a Typography component.\n   * This can be useful to render an alternative Typography variant by wrapping\n   * the `title` text, and optional `subheader` text\n   * with the Typography component.\n   * @default false\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * The content of the component.\n   */\n  subheader: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the subheader\n   * (as long as disableTypography is not `true`).\n   */\n  subheaderTypographyProps: PropTypes.object,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * The content of the component.\n   */\n  title: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the title\n   * (as long as disableTypography is not `true`).\n   */\n  titleTypographyProps: PropTypes.object\n} : void 0;\nexport default CardHeader;","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');","import React from 'react';\nimport * as Yup from 'yup';\nimport PropTypes from 'prop-types';\nimport { useSnackbar } from 'notistack';\nimport { useNavigate } from 'react-router-dom';\nimport { FieldArray, Form, FormikProvider, getIn, useFormik } from 'formik';\nimport { Icon } from '@iconify/react';\nimport PlusFill from '@iconify/icons-eva/plus-fill';\n// material\nimport { Delete as DeleteIcon, Save as SaveIcon } from '@mui/icons-material';\nimport { LoadingButton } from '@mui/lab';\nimport {\n  Box,\n  Card,\n  Grid,\n  Stack,\n  TextField,\n  Typography,\n  CardHeader,\n  CardContent,\n  Button,\n  Autocomplete,\n  IconButton,\n} from '@mui/material';\n// routes\nimport { PATH_DASHBOARD } from '../../routes/paths';\n// components\n\n// ----------------------------------------------------------------------\n\nconst initialFromToObject = {\n  from: 0,\n  to: 0,\n  tickets: 0,\n};\n\nconst initialSocialRuleObject = { socialNetworkCount: 0, tickets: 0 };\n\nconst HistoricalDataRules = ({ formik }) => {\n  const { errors, values, touched, getFieldProps } = formik;\n  return (\n    <FieldArray\n      name=\"historicalDataRules\"\n      render={(historicalDataArrayHelpers) => (\n        <Card>\n          <CardHeader\n            title=\"Historical Data Rules\"\n            titleTypographyProps={{ variant: 'subtitle1' }}\n            action={\n              <Button\n                size=\"small\"\n                variant=\"contained\"\n                startIcon={<Icon icon={PlusFill} />}\n                onClick={() => historicalDataArrayHelpers.push({ ...initialFromToObject })}\n              >\n                Add Rule\n              </Button>\n            }\n          />\n          <CardContent>\n            <Stack spacing={2}>\n              {values.historicalDataRules.map((rule, index) => {\n                const fieldNamePrefix = `historicalDataRules.${index}`;\n                return (\n                  <Grid container key={index} justifyContent=\"space-between\">\n                    <Grid item sm={12} md={6}>\n                      <Grid container spacing={1}>\n                        <Grid item sm={12} md={2}>\n                          <Typography>did not win</Typography>\n                        </Grid>\n                        <Grid item sm={12} md={4}>\n                          <Stack direction=\"row\" spacing={1}>\n                            <TextField\n                              type=\"number\"\n                              fullWidth\n                              variant=\"standard\"\n                              size=\"small\"\n                              {...getFieldProps(`${fieldNamePrefix}.from`)}\n                              error={Boolean(\n                                getIn(touched, `${fieldNamePrefix}.from`) && getIn(errors, `${fieldNamePrefix}.from`)\n                              )}\n                              helperText={\n                                getIn(touched, `${fieldNamePrefix}.from`) && getIn(errors, `${fieldNamePrefix}.from`)\n                              }\n                            />\n                            <Typography>to</Typography>\n                          </Stack>\n                        </Grid>\n                        <Grid item sm={12} md={4}>\n                          <Stack direction=\"row\" spacing={1}>\n                            <TextField\n                              type=\"number\"\n                              fullWidth\n                              variant=\"standard\"\n                              size=\"small\"\n                              {...getFieldProps(`${fieldNamePrefix}.to`)}\n                              error={Boolean(\n                                getIn(touched, `${fieldNamePrefix}.to`) && getIn(errors, `${fieldNamePrefix}.to`)\n                              )}\n                              helperText={\n                                getIn(touched, `${fieldNamePrefix}.to`) && getIn(errors, `${fieldNamePrefix}.to`)\n                              }\n                            />\n                            <Typography>times</Typography>\n                          </Stack>\n                        </Grid>\n                      </Grid>\n                    </Grid>\n                    <Grid item sm={12} md={4}>\n                      <Stack direction=\"row\">\n                        <TextField\n                          type=\"number\"\n                          fullWidth\n                          variant=\"standard\"\n                          size=\"small\"\n                          {...getFieldProps(`${fieldNamePrefix}.tickets`)}\n                          error={Boolean(\n                            getIn(touched, `${fieldNamePrefix}.tickets`) && getIn(errors, `${fieldNamePrefix}.tickets`)\n                          )}\n                          helperText={\n                            getIn(touched, `${fieldNamePrefix}.tickets`) && getIn(errors, `${fieldNamePrefix}.tickets`)\n                          }\n                        />\n                        <Typography>tickets</Typography>\n                        <IconButton\n                          color=\"error\"\n                          aria-label=\"delete\"\n                          onClick={() => historicalDataArrayHelpers.remove(index)}\n                        >\n                          <DeleteIcon />\n                        </IconButton>\n                      </Stack>\n                    </Grid>\n                  </Grid>\n                );\n              })}\n            </Stack>\n          </CardContent>\n        </Card>\n      )}\n    />\n  );\n};\n\nconst AppLevelRules = ({ formik }) => {\n  const { errors, values, touched, getFieldProps } = formik;\n  return (\n    <FieldArray\n      name=\"appLevelRules\"\n      render={(appLevelArrayHelpers) => (\n        <Card>\n          <CardHeader\n            title=\"App Level Rules\"\n            titleTypographyProps={{ variant: 'subtitle1' }}\n            action={\n              <Button\n                size=\"small\"\n                variant=\"contained\"\n                startIcon={<Icon icon={PlusFill} />}\n                onClick={() => appLevelArrayHelpers.push({ ...initialFromToObject })}\n              >\n                Add Rule\n              </Button>\n            }\n          />\n          <CardContent>\n            <Stack spacing={2}>\n              {values.appLevelRules.map((rule, index) => {\n                const fieldNamePrefix = `appLevelRules.${index}`;\n                return (\n                  <Grid container key={index} justifyContent=\"space-between\">\n                    <Grid item sm={12} md={6}>\n                      <Grid container spacing={1}>\n                        <Grid item sm={12} md={2}>\n                          <Typography>App Level</Typography>\n                        </Grid>\n                        <Grid item sm={12} md={4}>\n                          <Stack direction=\"row\" spacing={1}>\n                            <TextField\n                              type=\"number\"\n                              fullWidth\n                              variant=\"standard\"\n                              size=\"small\"\n                              {...getFieldProps(`${fieldNamePrefix}.from`)}\n                              error={Boolean(\n                                getIn(touched, `${fieldNamePrefix}.from`) && getIn(errors, `${fieldNamePrefix}.from`)\n                              )}\n                              helperText={\n                                getIn(touched, `${fieldNamePrefix}.from`) && getIn(errors, `${fieldNamePrefix}.from`)\n                              }\n                            />\n                            <Typography>to</Typography>\n                          </Stack>\n                        </Grid>\n                        <Grid item sm={12} md={4}>\n                          <Stack direction=\"row\" spacing={1}>\n                            <TextField\n                              type=\"number\"\n                              fullWidth\n                              variant=\"standard\"\n                              size=\"small\"\n                              {...getFieldProps(`${fieldNamePrefix}.to`)}\n                              error={Boolean(\n                                getIn(touched, `${fieldNamePrefix}.to`) && getIn(errors, `${fieldNamePrefix}.to`)\n                              )}\n                              helperText={\n                                getIn(touched, `${fieldNamePrefix}.to`) && getIn(errors, `${fieldNamePrefix}.to`)\n                              }\n                            />\n                            <Typography>times</Typography>\n                          </Stack>\n                        </Grid>\n                      </Grid>\n                    </Grid>\n                    <Grid item sm={12} md={4}>\n                      <Stack direction=\"row\">\n                        <TextField\n                          type=\"number\"\n                          fullWidth\n                          variant=\"standard\"\n                          size=\"small\"\n                          {...getFieldProps(`${fieldNamePrefix}.tickets`)}\n                          error={Boolean(\n                            getIn(touched, `${fieldNamePrefix}.tickets`) && getIn(errors, `${fieldNamePrefix}.tickets`)\n                          )}\n                          helperText={\n                            getIn(touched, `${fieldNamePrefix}.tickets`) && getIn(errors, `${fieldNamePrefix}.tickets`)\n                          }\n                        />\n                        <Typography>tickets</Typography>\n                        <IconButton\n                          color=\"error\"\n                          aria-label=\"delete\"\n                          onClick={() => appLevelArrayHelpers.remove(index)}\n                        >\n                          <DeleteIcon />\n                        </IconButton>\n                      </Stack>\n                    </Grid>\n                  </Grid>\n                );\n              })}\n            </Stack>\n          </CardContent>\n        </Card>\n      )}\n    />\n  );\n};\n\nconst FollowerRules = ({ formik }) => {\n  const { errors, values, touched, getFieldProps } = formik;\n  return (\n    <FieldArray\n      name=\"followerRules\"\n      render={(followerArrayHelpers) => (\n        <Card>\n          <CardHeader\n            title=\"Follower Rules\"\n            titleTypographyProps={{ variant: 'subtitle1' }}\n            action={\n              <Button\n                size=\"small\"\n                variant=\"contained\"\n                startIcon={<Icon icon={PlusFill} />}\n                onClick={() => followerArrayHelpers.push({ ...initialFromToObject })}\n              >\n                Add Rule\n              </Button>\n            }\n          />\n          <CardContent>\n            <Stack spacing={2}>\n              {values.followerRules.map((rule, index) => {\n                const fieldNamePrefix = `followerRules.${index}`;\n                return (\n                  <Grid container key={index} justifyContent=\"space-between\">\n                    <Grid item sm={12} md={6}>\n                      <Grid container spacing={1}>\n                        <Grid item sm={12} md={2}>\n                          <Typography>Follower</Typography>\n                        </Grid>\n                        <Grid item sm={12} md={4}>\n                          <Stack direction=\"row\" spacing={1}>\n                            <TextField\n                              type=\"number\"\n                              fullWidth\n                              variant=\"standard\"\n                              size=\"small\"\n                              {...getFieldProps(`${fieldNamePrefix}.from`)}\n                              error={Boolean(\n                                getIn(touched, `${fieldNamePrefix}.from`) && getIn(errors, `${fieldNamePrefix}.from`)\n                              )}\n                              helperText={\n                                getIn(touched, `${fieldNamePrefix}.from`) && getIn(errors, `${fieldNamePrefix}.from`)\n                              }\n                            />\n                            <Typography>to</Typography>\n                          </Stack>\n                        </Grid>\n                        <Grid item sm={12} md={4}>\n                          <Stack direction=\"row\" spacing={1}>\n                            <TextField\n                              type=\"number\"\n                              fullWidth\n                              variant=\"standard\"\n                              size=\"small\"\n                              {...getFieldProps(`${fieldNamePrefix}.to`)}\n                              error={Boolean(\n                                getIn(touched, `${fieldNamePrefix}.to`) && getIn(errors, `${fieldNamePrefix}.to`)\n                              )}\n                              helperText={\n                                getIn(touched, `${fieldNamePrefix}.to`) && getIn(errors, `${fieldNamePrefix}.to`)\n                              }\n                            />\n                            <Typography>times</Typography>\n                          </Stack>\n                        </Grid>\n                      </Grid>\n                    </Grid>\n                    <Grid item sm={12} md={4}>\n                      <Stack direction=\"row\">\n                        <TextField\n                          type=\"number\"\n                          fullWidth\n                          variant=\"standard\"\n                          size=\"small\"\n                          {...getFieldProps(`${fieldNamePrefix}.tickets`)}\n                          error={Boolean(\n                            getIn(touched, `${fieldNamePrefix}.tickets`) && getIn(errors, `${fieldNamePrefix}.tickets`)\n                          )}\n                          helperText={\n                            getIn(touched, `${fieldNamePrefix}.tickets`) && getIn(errors, `${fieldNamePrefix}.tickets`)\n                          }\n                        />\n                        <Typography>tickets</Typography>\n                        <IconButton\n                          color=\"error\"\n                          aria-label=\"delete\"\n                          onClick={() => followerArrayHelpers.remove(index)}\n                        >\n                          <DeleteIcon />\n                        </IconButton>\n                      </Stack>\n                    </Grid>\n                  </Grid>\n                );\n              })}\n            </Stack>\n          </CardContent>\n        </Card>\n      )}\n    />\n  );\n};\n\nconst SocialNetworkRules = ({ formik }) => {\n  const { errors, values, touched, getFieldProps, setFieldValue } = formik;\n  return (\n    <FieldArray\n      name=\"socialNetworkRules\"\n      render={(socialNetworkArrayHelpers) => (\n        <Card>\n          <CardHeader\n            title=\"Social Network Rules\"\n            titleTypographyProps={{ variant: 'subtitle1' }}\n            action={\n              <Button\n                size=\"small\"\n                variant=\"contained\"\n                startIcon={<Icon icon={PlusFill} />}\n                onClick={() => socialNetworkArrayHelpers.push({ ...initialSocialRuleObject })}\n              >\n                Add Rule\n              </Button>\n            }\n          />\n          <CardContent>\n            <Stack spacing={2}>\n              <Autocomplete\n                multiple\n                disableCloseOnSelect\n                size=\"small\"\n                value={values.socialNetworks}\n                onChange={(event, newValue) => {\n                  setFieldValue('socialNetworks', newValue);\n                }}\n                options={['Facebook', 'Instagram', 'Twitter', 'Pinterest', 'Snapchat', 'Tiktok']}\n                renderInput={(params) => (\n                  <TextField\n                    {...params}\n                    label=\"Social Networks\"\n                    error={Boolean(touched.socialNetworks && errors.socialNetworks)}\n                    helperText={touched.socialNetworks && errors.socialNetworks}\n                  />\n                )}\n              />\n              {values.socialNetworkRules.map((rule, index) => {\n                const fieldNamePrefix = `socialNetworkRules.${index}`;\n                return (\n                  <Grid container key={index} justifyContent=\"center\">\n                    <Grid item sm={12} md={4}>\n                      <Stack direction=\"row\" spacing={1} justifyContent=\"center\">\n                        <TextField\n                          type=\"number\"\n                          variant=\"standard\"\n                          size=\"small\"\n                          {...getFieldProps(`${fieldNamePrefix}.socialNetworkCount`)}\n                          error={Boolean(\n                            getIn(touched, `${fieldNamePrefix}.socialNetworkCount`) &&\n                              getIn(errors, `${fieldNamePrefix}.socialNetworkCount`)\n                          )}\n                          helperText={\n                            getIn(touched, `${fieldNamePrefix}.socialNetworkCount`) &&\n                            getIn(errors, `${fieldNamePrefix}.socialNetworkCount`)\n                          }\n                        />\n                        <Typography>Social Networks</Typography>\n                      </Stack>\n                    </Grid>\n                    <Grid item sm={12} md={4}>\n                      <Stack direction=\"row\" justifyContent=\"center\">\n                        <TextField\n                          type=\"number\"\n                          variant=\"standard\"\n                          size=\"small\"\n                          {...getFieldProps(`${fieldNamePrefix}.tickets`)}\n                          error={Boolean(\n                            getIn(touched, `${fieldNamePrefix}.tickets`) && getIn(errors, `${fieldNamePrefix}.tickets`)\n                          )}\n                          helperText={\n                            getIn(touched, `${fieldNamePrefix}.tickets`) && getIn(errors, `${fieldNamePrefix}.tickets`)\n                          }\n                        />\n                        <Typography>tickets</Typography>\n                        <IconButton\n                          color=\"error\"\n                          aria-label=\"delete\"\n                          onClick={() => socialNetworkArrayHelpers.remove(index)}\n                        >\n                          <DeleteIcon />\n                        </IconButton>\n                      </Stack>\n                    </Grid>\n                  </Grid>\n                );\n              })}\n            </Stack>\n          </CardContent>\n        </Card>\n      )}\n    />\n  );\n};\n\nconst NewTicketRuleSchema = Yup.object().shape({\n  name: Yup.string().required('Name is required'),\n  type: Yup.string(),\n  historicalDataRules: Yup.array(),\n  appLevelRules: Yup.array(),\n  followerRules: Yup.array(),\n  socialNetworks: Yup.array(),\n  socialNetworkRules: Yup.array(),\n});\n\nconst TicketRuleNewForm = ({ isEdit, currentTicketRule }) => {\n  const navigate = useNavigate();\n  const { enqueueSnackbar } = useSnackbar();\n\n  const formik = useFormik({\n    enableReinitialize: true,\n    initialValues: {\n      name: currentTicketRule?.name || '',\n      types: currentTicketRule?.types || ['Historical Data', 'App Level', 'Followers', 'Social'],\n      historicalDataRules: currentTicketRule?.historicalDataRules || [{ ...initialFromToObject }],\n      appLevelRules: currentTicketRule?.appLevelRules || [{ ...initialFromToObject }],\n      followerRules: currentTicketRule?.followerRules || [{ ...initialFromToObject }],\n      socialNetworks: currentTicketRule?.socialNetworks || [],\n      socialNetworkRules: currentTicketRule?.socialNetworkRules || [{ ...initialSocialRuleObject }],\n    },\n    validationSchema: NewTicketRuleSchema,\n    onSubmit: async (values, { setSubmitting, resetForm, setErrors }) => {\n      alert(JSON.stringify(values));\n      try {\n        resetForm();\n        setSubmitting(false);\n        enqueueSnackbar(!isEdit ? 'Create success' : 'Update success', { variant: 'success' });\n        navigate(PATH_DASHBOARD.bonus.createTicketRule);\n      } catch (error) {\n        console.error(error);\n        setSubmitting(false);\n        setErrors(error);\n      }\n    },\n  });\n\n  const { errors, values, touched, handleSubmit, isSubmitting, getFieldProps, setFieldValue } = formik;\n\n  console.log('*** ', values, errors);\n\n  return (\n    <FormikProvider value={formik}>\n      <Form noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\n        <Grid container spacing={3}>\n          <Grid item xs={12}>\n            <Card>\n              <CardContent>\n                <Stack spacing={3}>\n                  <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 3, sm: 2 }}>\n                    <TextField\n                      fullWidth\n                      size=\"small\"\n                      label=\"Name\"\n                      {...getFieldProps('name')}\n                      error={Boolean(touched.name && errors.name)}\n                      helperText={touched.name && errors.name}\n                    />\n                    <Autocomplete\n                      fullWidth\n                      multiple\n                      disableCloseOnSelect\n                      size=\"small\"\n                      value={values.types}\n                      onChange={(event, newValue) => {\n                        setFieldValue('types', newValue);\n                      }}\n                      options={['Historical Data', 'App Level', 'Followers', 'Social']}\n                      renderInput={(params) => (\n                        <TextField\n                          {...params}\n                          label=\"Ticket Rules\"\n                          error={Boolean(touched.types && errors.types)}\n                          helperText={touched.types && errors.types}\n                        />\n                      )}\n                    />\n                  </Stack>\n\n                  {values.types.includes('Historical Data') && <HistoricalDataRules formik={formik} />}\n                  {values.types.includes('App Level') && <AppLevelRules formik={formik} />}\n                  {values.types.includes('Followers') && <FollowerRules formik={formik} />}\n                  {values.types.includes('Social') && <SocialNetworkRules formik={formik} />}\n\n                  <Box sx={{ mt: 3, display: 'flex', justifyContent: 'flex-end' }}>\n                    <LoadingButton type=\"submit\" variant=\"contained\" loading={isSubmitting} endIcon={<SaveIcon />}>\n                      Save\n                    </LoadingButton>\n                  </Box>\n                </Stack>\n              </CardContent>\n            </Card>\n          </Grid>\n        </Grid>\n      </Form>\n    </FormikProvider>\n  );\n};\n\nHistoricalDataRules.propTypes = {\n  formik: PropTypes.object,\n};\nAppLevelRules.propTypes = {\n  formik: PropTypes.object,\n};\nFollowerRules.propTypes = {\n  formik: PropTypes.object,\n};\nSocialNetworkRules.propTypes = {\n  formik: PropTypes.object,\n};\n\nTicketRuleNewForm.propTypes = {\n  isEdit: PropTypes.bool,\n  currentTicketRule: PropTypes.object,\n};\n\nexport default TicketRuleNewForm;\n","import { useParams, useLocation } from 'react-router-dom';\n// material\nimport { Container } from '@mui/material';\n// routes\nimport { PATH_DASHBOARD } from '../routes/paths';\n// hooks\nimport useSettings from '../hooks/useSettings';\n// components\nimport Page from '../components/Page';\nimport HeaderBreadcrumbs from '../components/HeaderBreadcrumbs';\nimport TicketRuleNewForm from '../components/bonus/TicketRuleNewForm';\n\n// ----------------------------------------------------------------------\n\nexport default function TicketRuleCreate() {\n  const { themeStretch } = useSettings();\n  const { pathname } = useLocation();\n  const { name } = useParams();\n  const isEdit = pathname.includes('edit');\n\n  // TODO: will be updated with Ticket Rule\n  const currentTicketRule = {};\n\n  return (\n    <Page title=\"TicketRule: Create a new bonus\">\n      <Container maxWidth={themeStretch ? false : 'lg'}>\n        <HeaderBreadcrumbs\n          heading={!isEdit ? 'Add Ticket Rule' : 'Edit Ticket Rule'}\n          links={[{ name: 'TicketRule', href: PATH_DASHBOARD.root }, { name: !isEdit ? 'Add Ticket Rule' : name }]}\n        />\n        <TicketRuleNewForm isEdit={isEdit} currentTicketRule={currentTicketRule} />\n      </Container>\n    </Page>\n  );\n}\n"],"sourceRoot":""}