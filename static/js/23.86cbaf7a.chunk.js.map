{"version":3,"sources":["components/reward/RewardListToolbar.js","components/reward/RewardListTable.js","components/reward/RewardSettings.js","pages/RewardList.js","components/HeaderBreadcrumbs.js","../node_modules/@mui/icons-material/esm/Save.js","../node_modules/@mui/material/CardContent/cardContentClasses.js","../node_modules/@mui/material/CardContent/CardContent.js","components/SearchNotFound.js","../node_modules/@mui/material/CardHeader/cardHeaderClasses.js","../node_modules/@mui/material/CardHeader/CardHeader.js","utils/mockImages.js"],"names":["RootStyle","styled","Toolbar","height","display","justifyContent","padding","SearchStyle","OutlinedInput","theme","width","transition","transitions","create","easing","easeInOut","duration","shorter","boxShadow","customShadows","z8","borderWidth","borderColor","palette","grey","RewardListToolbar","filterName","onFilterName","size","value","onChange","placeholder","startAdornment","InputAdornment","position","Box","component","Icon","icon","searchFill","sx","color","Tooltip","title","IconButton","roundFilterList","TABLE_HEAD","id","label","alignRight","RewardListTable","rewardList","useTheme","useState","setFilterName","filteredRewards","array","query","stabilizedThis","map","el","index","filter","_notification","name","toLowerCase","indexOf","applyFilter","isRewardNotFound","length","Grid","container","spacing","mt","item","xs","Typography","variant","Scrollbar","event","target","TableContainer","minWidth","Table","TableHead","TableRow","headCell","TableCell","align","TableBody","row","type","weeklyDispensed","dispensedWeeklyTokenValue","averageTokenValue","weeklyEarners","FormControlLabel","labelPlacement","control","Switch","mx","location","colSpan","py","SearchNotFound","searchQuery","SettingsSchema","Yup","shape","tokenValue","required","starValueInTokens","keyValueInTokens","boosterValueInTokens","RewardSettings","currentSettings","enqueueSnackbar","useSnackbar","formik","useFormik","enableReinitialize","initialValues","validationSchema","onSubmit","values","a","setSubmitting","resetForm","setErrors","alert","JSON","stringify","error","console","errors","touched","handleSubmit","getFieldProps","isSubmitting","noValidate","autoComplete","md","Card","CardHeader","CardContent","Stack","direction","sm","TextField","fullWidth","InputProps","endAdornment","Boolean","helperText","LoadingButton","loading","endIcon","Save","RewardList","themeStretch","useSettings","Page","Container","maxWidth","HeaderBreadcrumbs","heading","links","href","PATH_DASHBOARD","reward","list","action","Button","RouterLink","to","startIcon","PlusFill","avatarUrl","mockImgProduct","active","contents","frequency","numberOfKeys","numberOfCoins","numberOfStars","numberOfBoosters","moreLink","other","mb","alignItems","flexGrow","gutterBottom","flexShrink","isString","noWrap","createSvgIcon","_jsx","d","getCardContentUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CardContentRoot","overridesResolver","props","styles","root","paddingBottom","React","inProps","ref","useThemeProps","className","_objectWithoutPropertiesLoose","ownerState","_extends","classes","composeClasses","useUtilityClasses","as","clsx","getCardHeaderUtilityClass","cardHeaderClasses","CardHeaderRoot","subheader","CardHeaderAvatar","avatar","flex","marginRight","CardHeaderAction","alignSelf","marginTop","marginBottom","CardHeaderContent","content","disableTypography","subheaderProp","subheaderTypographyProps","titleProp","titleTypographyProps","children","_jsxs"],"mappings":"4eAUMA,EAAYC,YAAOC,IAAPD,EAAgB,iBAAO,CACvCE,OAAQ,GACRC,QAAS,OACTC,eAAgB,gBAChBC,QAAS,sBAGLC,EAAcN,YAAOO,IAAPP,EAAsB,gBAAGQ,EAAH,EAAGA,MAAH,MAAgB,CACxDC,MAAO,IACPC,WAAYF,EAAMG,YAAYC,OAAO,CAAC,aAAc,SAAU,CAC5DC,OAAQL,EAAMG,YAAYE,OAAOC,UACjCC,SAAUP,EAAMG,YAAYI,SAASC,UAEvC,gBAAiB,CAAEP,MAAO,IAAKQ,UAAWT,EAAMU,cAAcC,IAC9D,aAAc,CACZC,YAAY,iBACZC,YAAY,GAAD,OAAKb,EAAMc,QAAQC,KAAK,OAAxB,oBAWA,SAASC,EAAT,GAA0D,IAA7BC,EAA4B,EAA5BA,WAAYC,EAAgB,EAAhBA,aACtD,OACE,eAAC3B,EAAD,WACE,cAACO,EAAD,CACEqB,KAAK,QACLC,MAAOH,EACPI,SAAUH,EACVI,YAAY,mBACZC,eACE,cAACC,EAAA,EAAD,CAAgBC,SAAS,QAAzB,SACE,cAACC,EAAA,EAAD,CAAKC,UAAWC,IAAMC,KAAMC,IAAYC,GAAI,CAAEC,MAAO,uBAK3D,cAACC,EAAA,EAAD,CAASC,MAAM,cAAf,SACE,cAACC,EAAA,EAAD,UACE,cAAC,IAAD,CAAMN,KAAMO,a,aChChBC,EAAa,CACjB,CAAEC,GAAI,OAAQC,MAAO,OAAQC,YAAY,GACzC,CAAEF,GAAI,OAAQC,MAAO,OAAQC,YAAY,GACzC,CAAEF,GAAI,kBAAmBC,MAAO,mBAAoBC,YAAY,GAChE,CAAEF,GAAI,4BAA6BC,MAAO,gCAAiCC,YAAY,GACvF,CAAEF,GAAI,oBAAqBC,MAAO,sBAAuBC,YAAY,GACrE,CAAEF,GAAI,gBAAiBC,MAAO,oBAAqBC,YAAY,GAC/D,CAAEF,GAAI,SAAUC,MAAO,SAAUC,YAAY,GAC7C,CAAEF,GAAI,WAAYC,MAAO,kBAAmBC,YAAY,IAsF3CC,MAtEf,YAA+C,IAAD,IAAnBC,kBAAmB,MAAN,GAAM,EACtC1C,EAAQ2C,cACd,EAAoCC,mBAAS,IAA7C,mBAAO3B,EAAP,KAAmB4B,EAAnB,KAMMC,EArBR,SAAqBC,EAAOC,GAC1B,IAAMC,EAAiBF,EAAMG,KAAI,SAACC,EAAIC,GAAL,MAAe,CAACD,EAAIC,MAErD,OAAIJ,EACKK,iBAAON,GAAO,SAACO,GAAD,OAAsF,IAAnEA,EAAcC,KAAKC,cAAcC,QAAQT,EAAMQ,kBAElFP,EAAeC,KAAI,SAACC,GAAD,OAAQA,EAAG,MAebO,CAAYhB,EAAYzB,GAE1C0C,EAA8C,IAA3Bb,EAAgBc,OAEzC,OACE,eAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAGhC,GAAI,CAAEiC,GAAIhE,EAAM+D,QAAQ,IAApD,UACE,cAACF,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAf,SACE,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAApB,2BAEF,cAACP,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAf,SACE,eAACG,EAAA,EAAD,WACE,cAACrD,EAAD,CAAmBC,WAAYA,EAAYC,aAfxB,SAACoD,GAC1BzB,EAAcyB,EAAMC,OAAOnD,UAerB,cAACoD,EAAA,EAAD,CAAgBzC,GAAI,CAAE0C,SAAU,KAAhC,SACE,eAACC,EAAA,EAAD,CAAO,aAAW,eAAlB,UACE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,UACGvC,EAAWa,KAAI,SAAC2B,GAAD,OACd,cAACC,EAAA,EAAD,CAA6BC,MAAOF,EAASrC,WAAa,QAAU,OAApE,SACGqC,EAAStC,OADIsC,EAASvC,WAM/B,cAAC0C,EAAA,EAAD,UACGlC,EAAgBI,KAAI,SAAC+B,GAAD,OACnB,eAACL,EAAA,EAAD,WACE,cAACE,EAAA,EAAD,UAAYG,EAAI1B,OAChB,cAACuB,EAAA,EAAD,UAAYG,EAAIC,OAChB,cAACJ,EAAA,EAAD,UAAYG,EAAIE,kBAChB,cAACL,EAAA,EAAD,UAAYG,EAAIG,4BAChB,cAACN,EAAA,EAAD,UAAYG,EAAII,oBAChB,cAACP,EAAA,EAAD,UAAYG,EAAIK,gBAEhB,cAACR,EAAA,EAAD,UACE,cAACS,EAAA,EAAD,CACEC,eAAe,QACfC,QAAS,cAACC,EAAA,EAAD,IACTnD,MAAO,cAAC4B,EAAA,EAAD,CAAYC,QAAQ,YAApB,oBACPrC,GAAI,CAAE4D,GAAI,EAAG1F,MAAO,EAAGL,eAAgB,cAG3C,cAACkF,EAAA,EAAD,UAAYG,EAAIW,aAhBHX,EAAI1B,WAoBtBI,GACC,cAACqB,EAAA,EAAD,UACE,cAACJ,EAAA,EAAD,UACE,cAACE,EAAA,EAAD,CAAWC,MAAM,SAASc,QAAS,EAAG9D,GAAI,CAAE+D,GAAI,GAAhD,SACE,cAACC,EAAA,EAAD,CAAgBC,YAAa/E,wB,sGC9F7CgF,GAAiBC,OAAaC,MAAM,CACxCC,WAAYF,OAAaG,SAAS,2BAClCC,kBAAmBJ,OAAaG,SAAS,2BACzCE,iBAAkBL,OAAaG,SAAS,2BACxCG,qBAAsBN,OAAaG,SAAS,6BAuG/BI,GApGQ,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,gBAChBC,EAAoBC,eAApBD,gBAEFE,EAASC,aAAU,CACvBC,oBAAoB,EACpBC,cAAe,CACbZ,YAA2B,OAAfM,QAAe,IAAfA,OAAA,EAAAA,EAAiBN,aAAc,EAC3CE,mBAAkC,OAAfI,QAAe,IAAfA,OAAA,EAAAA,EAAiBJ,oBAAqB,EACzDC,kBAAiC,OAAfG,QAAe,IAAfA,OAAA,EAAAA,EAAiBH,mBAAoB,EACvDC,sBAAqC,OAAfE,QAAe,IAAfA,OAAA,EAAAA,EAAiBF,uBAAwB,GAEjES,iBAAkBhB,GAClBiB,SAAS,WAAD,4BAAE,WAAOC,EAAP,sBAAAC,EAAA,sDAAiBC,EAAjB,EAAiBA,cAAeC,EAAhC,EAAgCA,UAAWC,EAA3C,EAA2CA,UACnDC,MAAMC,KAAKC,UAAUP,IACrB,IACEG,IACAD,GAAc,GACdV,EAAgB,iBAAkB,CAAEvC,QAAS,YAC7C,MAAOuD,GACPC,QAAQD,MAAMA,GACdN,GAAc,GACdE,EAAUI,GATJ,2CAAF,qDAAC,KAcHE,EAA+DhB,EAA/DgB,OAAQC,EAAuDjB,EAAvDiB,QAASC,EAA8ClB,EAA9CkB,aAAcC,EAAgCnB,EAAhCmB,cAAeC,EAAiBpB,EAAjBoB,aAEtD,OACE,cAAC,KAAD,CAAgB7G,MAAOyF,EAAvB,SACE,cAAC,KAAD,CAAMqB,YAAU,EAACC,aAAa,MAAMjB,SAAUa,EAA9C,SACE,cAAClE,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,SACE,cAACF,EAAA,EAAD,CAAMI,MAAI,EAACmE,GAAI,GAAf,SACE,eAACC,EAAA,EAAD,WACE,cAACC,GAAA,EAAD,CAAYpG,MAAM,oBAClB,cAACqG,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CAAOC,UAAW,CAAEvE,GAAI,SAAUwE,GAAI,OAAS3E,QAAS,CAAEG,GAAI,EAAGwE,GAAI,GAArE,UACE,cAACC,GAAA,EAAD,yBACEC,WAAS,EACTzH,KAAK,QACLoB,MAAM,qBACNsG,WAAY,CACVC,aAAc,cAACtH,EAAA,EAAD,CAAgBC,SAAS,MAAzB,mBAEZuG,EAAc,eAPpB,IAQEL,MAAOoB,QAAQjB,EAAQ1B,YAAcyB,EAAOzB,YAC5C4C,WAAYlB,EAAQ1B,YAAcyB,EAAOzB,cAE3C,cAACuC,GAAA,EAAD,yBACEC,WAAS,EACTzH,KAAK,QACLoB,MAAM,uBACNsG,WAAY,CACVC,aAAc,cAACtH,EAAA,EAAD,CAAgBC,SAAS,MAAzB,sBAEZuG,EAAc,sBAPpB,IAQEL,MAAOoB,QAAQjB,EAAQxB,mBAAqBuB,EAAOvB,mBACnD0C,WAAYlB,EAAQxB,mBAAqBuB,EAAOvB,qBAElD,cAACqC,GAAA,EAAD,yBACEC,WAAS,EACTzH,KAAK,QACLoB,MAAM,sBACNsG,WAAY,CACVC,aAAc,cAACtH,EAAA,EAAD,CAAgBC,SAAS,MAAzB,sBAEZuG,EAAc,qBAPpB,IAQEL,MAAOoB,QAAQjB,EAAQvB,kBAAoBsB,EAAOtB,kBAClDyC,WAAYlB,EAAQvB,kBAAoBsB,EAAOtB,oBAEjD,cAACoC,GAAA,EAAD,yBACEC,WAAS,EACTzH,KAAK,QACLoB,MAAM,0BACNsG,WAAY,CACVC,aAAc,cAACtH,EAAA,EAAD,CAAgBC,SAAS,MAAzB,sBAEZuG,EAAc,yBAPpB,IAQEL,MAAOoB,QAAQjB,EAAQtB,sBAAwBqB,EAAOrB,sBACtDwC,WAAYlB,EAAQtB,sBAAwBqB,EAAOrB,wBAErD,cAAC9E,EAAA,EAAD,CAAKK,GAAI,CAAEiC,GAAI,EAAGrE,QAAS,OAAQC,eAAgB,YAAnD,SACE,cAACqJ,GAAA,EAAD,CAAe/D,KAAK,SAASd,QAAQ,YAAY8E,QAASjB,EAAckB,QAAS,cAACC,GAAA,EAAD,IAAjF,qCCgBLC,UA9FI,WACjB,IAAQC,EAAiBC,cAAjBD,aACFtJ,EAAQ2C,cAEd,OACE,cAAC6G,EAAA,EAAD,CAAMtH,MAAM,eAAZ,SACE,eAACuH,EAAA,EAAD,CAAWC,UAAUJ,GAAuB,KAA5C,UACE,cAACK,EAAA,EAAD,CACEC,QAAQ,cACRC,MAAO,CAAC,CAAEtG,KAAM,SAAUuG,KAAMC,IAAeC,OAAOC,MAAQ,CAAE1G,KAAM,SACtE2G,OACE,cAACC,EAAA,EAAD,CACE/F,QAAQ,YACRzC,UAAWyI,IACXC,GAAIN,IAAeC,OAAO5J,OAC1BkK,UAAW,cAAC,IAAD,CAAMzI,KAAM0I,MAJzB,0BAUJ,cAAC,GAAD,CACE7D,gBAAiB,CAAEN,WAAY,GAAIE,kBAAmB,EAAGC,iBAAkB,GAAIC,qBAAsB,MAEvG,cAAC6B,EAAA,EAAD,CAAMtG,GAAI,CAAEiC,GAAIhE,EAAM+D,QAAQ,IAA9B,SACE,cAACwE,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CAAOzE,QAAS,EAAhB,UACE,eAACyE,EAAA,EAAD,CAAOC,UAAU,MAAM1E,QAAS,EAAhC,UACE,cAACI,EAAA,EAAD,CAAYC,QAAQ,YAApB,wBACA,cAACD,EAAA,EAAD,CAAYC,QAAQ,QAApB,4BAEF,eAACoE,EAAA,EAAD,CAAOC,UAAU,MAAM1E,QAAS,EAAhC,UACE,cAACI,EAAA,EAAD,CAAYC,QAAQ,YAApB,qBACA,cAACD,EAAA,EAAD,CAAYC,QAAQ,QAApB,4BAEF,eAACoE,EAAA,EAAD,CAAOC,UAAU,MAAM1E,QAAS,EAAhC,UACE,cAACI,EAAA,EAAD,CAAYC,QAAQ,YAApB,mBACA,cAACD,EAAA,EAAD,CAAYC,QAAQ,QAApB,4BAEF,eAACoE,EAAA,EAAD,CAAOC,UAAU,MAAM1E,QAAS,EAAhC,UACE,cAACI,EAAA,EAAD,CAAYC,QAAQ,YAApB,4BACA,cAACD,EAAA,EAAD,CAAYC,QAAQ,QAApB,mCAKR,cAAC1C,EAAA,EAAD,CAAKK,GAAI,CAAErC,OAAQ,KAAnB,SACE,cAAC,EAAD,CACEgD,WAAY,CACV,CACE8H,UAAWC,YAAe,GAC1BlH,KAAM,eACN2B,KAAM,aACNC,gBAAiB,KACjBC,0BAA2B,KAC3BC,kBAAmB,IACnBC,cAAe,IACfoF,QAAQ,EACR9E,SAAU,UACV+E,SAAU,CACR,CACEzI,MAAO,QACP0I,UAAW,GACXC,aAAc,EACdC,cAAe,EACfC,cAAe,EACfC,iBAAkB,GAEpB,CACE9I,MAAO,OACP0I,UAAW,GACXC,aAAc,GACdC,cAAe,GACfC,cAAe,EACfC,iBAAkB,IAEpB,CACE9I,MAAO,OACP0I,UAAW,GACXC,aAAc,GACdC,cAAe,GACfC,cAAe,GACfC,iBAAkB,kB,iMCrFvB,SAASrB,EAAT,GAA2F,IAA9DE,EAA6D,EAA7DA,MAAOK,EAAsD,EAAtDA,OAAQN,EAA8C,EAA9CA,QAA8C,IAArCqB,gBAAqC,MAApB,GAAoB,EAAhBlJ,EAAgB,EAAhBA,GAAOmJ,EAAS,iBACvG,OACE,eAAC,IAAD,CAAOnJ,GAAIA,EAAIoJ,GAAI,EAAGpH,QAAS,EAA/B,UACE,eAAC,IAAD,CAAO0E,UAAU,MAAM2C,WAAW,SAAlC,UACE,eAAC,IAAD,CAAKrJ,GAAI,CAAEsJ,SAAU,GAArB,UACE,cAAC,IAAD,CAAYjH,QAAQ,KAAKkH,cAAY,EAArC,SACG1B,IAEH,cAAC,IAAD,aAAcC,MAAOA,GAAWqB,OAGjChB,GAAU,cAAC,IAAD,CAAKnI,GAAI,CAAEwJ,WAAY,GAAvB,SAA6BrB,OAGzCsB,mBAASP,GACR,cAAC,IAAD,CAAMnB,KAAMmB,EAAU1G,OAAO,SAASH,QAAQ,QAA9C,SACG6G,IAGHA,EAAS/H,KAAI,SAAC4G,GAAD,OACX,cAAC,IAAD,CAAM2B,QAAM,EAAY3B,KAAMA,EAAM1F,QAAQ,QAAQG,OAAO,SAASxC,GAAI,CAAEpC,QAAS,QAAnF,SACGmK,GADeA,W,iCCrC5B,mBAEe4B,gBAA4BC,cAAK,OAAQ,CACtDC,EAAG,mJACD,S,mHCHG,SAASC,EAA2BC,GACzC,OAAOC,YAAqB,iBAAkBD,GAErBE,YAAuB,iBAAkB,CAAC,SAArE,I,OCFMC,EAAY,CAAC,YAAa,aAoB1BC,EAAkB1M,YAAO,MAAO,CACpC+D,KAAM,iBACNuI,KAAM,OACNK,kBAAmB,SAACC,EAAOC,GAAR,OAAmBA,EAAOC,OAHvB9M,EAIrB,WACD,MAAO,CACLK,QAAS,GACT,eAAgB,CACd0M,cAAe,QAIfhE,EAA2BiE,cAAiB,SAAqBC,EAASC,GAC9E,IAAMN,EAAQO,YAAc,CAC1BP,MAAOK,EACPlJ,KAAM,mBAINqJ,EAEER,EAFFQ,UADF,EAGIR,EADFzK,iBAFF,MAEc,MAFd,EAIMuJ,EAAQ2B,YAA8BT,EAAOH,GAE7Ca,EAAaC,YAAS,GAAIX,EAAO,CACrCzK,cAGIqL,EAtCkB,SAAAF,GACxB,IACEE,EACEF,EADFE,QAKF,OAAOC,YAHO,CACZX,KAAM,CAAC,SAEoBT,EAA4BmB,GA+BzCE,CAAkBJ,GAClC,OAAoBnB,cAAKO,EAAiBa,YAAS,CACjDI,GAAIxL,EACJiL,UAAWQ,YAAKJ,EAAQV,KAAMM,GAC9BE,WAAYA,EACZJ,IAAKA,GACJxB,OAoCU3C,O,iIClFA,SAASxC,EAAT,GAAyD,IAAD,IAA9BC,mBAA8B,MAAhB,GAAgB,EAATkF,EAAS,iBACrE,OACE,eAAC,IAAD,2BAAWA,GAAX,cACE,cAAC,IAAD,CAAYI,cAAY,EAACvG,MAAM,SAASX,QAAQ,YAAhD,uBAGA,eAAC,IAAD,CAAYA,QAAQ,QAAQW,MAAM,SAAlC,sCAEE,uCAAeiB,EAAf,OAFF,6D,mICfC,SAASqH,EAA0BvB,GACxC,OAAOC,YAAqB,gBAAiBD,GAE/C,IACewB,EADWtB,YAAuB,gBAAiB,CAAC,OAAQ,SAAU,SAAU,UAAW,QAAS,c,OCF7GC,EAAY,CAAC,SAAU,SAAU,YAAa,YAAa,oBAAqB,YAAa,2BAA4B,QAAS,wBA2BlIsB,EAAiB/N,YAAO,MAAO,CACnC+D,KAAM,gBACNuI,KAAM,OACNK,kBAAmB,SAACC,EAAOC,GAAR,aAAmBU,aAAQ,gCACrCO,EAAkBpL,OAAUmK,EAAOnK,OADE,2BAErCoL,EAAkBE,WAAcnB,EAAOmB,WAFF,GAG3CnB,EAAOC,QANW9M,CAOpB,CACDG,QAAS,OACTyL,WAAY,SACZvL,QAAS,KAEL4N,EAAmBjO,YAAO,MAAO,CACrC+D,KAAM,gBACNuI,KAAM,SACNK,kBAAmB,SAACC,EAAOC,GAAR,OAAmBA,EAAOqB,SAHtBlO,CAItB,CACDG,QAAS,OACTgO,KAAM,WACNC,YAAa,KAETC,EAAmBrO,YAAO,MAAO,CACrC+D,KAAM,gBACNuI,KAAM,SACNK,kBAAmB,SAACC,EAAOC,GAAR,OAAmBA,EAAOnC,SAHtB1K,CAItB,CACDmO,KAAM,WACNG,UAAW,aACXC,WAAY,EACZH,aAAc,EACdI,cAAe,IAEXC,EAAoBzO,YAAO,MAAO,CACtC+D,KAAM,gBACNuI,KAAM,UACNK,kBAAmB,SAACC,EAAOC,GAAR,OAAmBA,EAAO6B,UAHrB1O,CAIvB,CACDmO,KAAM,aAEFrF,EAA0BkE,cAAiB,SAAoBC,EAASC,GAC5E,IAAMN,EAAQO,YAAc,CAC1BP,MAAOK,EACPlJ,KAAM,kBAIN2G,EASEkC,EATFlC,OACAwD,EAQEtB,EARFsB,OACAd,EAOER,EAPFQ,UAHF,EAUIR,EANFzK,iBAJF,MAIc,MAJd,IAUIyK,EALF+B,yBALF,SAMaC,EAIThC,EAJFoB,UACAa,EAGEjC,EAHFiC,yBACOC,EAELlC,EAFFlK,MACAqM,EACEnC,EADFmC,qBAEIrD,EAAQ2B,YAA8BT,EAAOH,GAE7Ca,EAAaC,YAAS,GAAIX,EAAO,CACrCzK,YACAwM,sBAGInB,EA9EkB,SAAAF,GACxB,IACEE,EACEF,EADFE,QAUF,OAAOC,YARO,CACZX,KAAM,CAAC,QACPoB,OAAQ,CAAC,UACTxD,OAAQ,CAAC,UACTgE,QAAS,CAAC,WACVhM,MAAO,CAAC,SACRsL,UAAW,CAAC,cAEeH,EAA2BL,GAkExCE,CAAkBJ,GAC9B5K,EAAQoM,EAEC,MAATpM,GAAiBA,EAAMgD,OAASf,KAAegK,IACjDjM,EAAqByJ,cAAKxH,IAAY4I,YAAS,CAC7C3I,QAASsJ,EAAS,QAAU,KAC5Bd,UAAWI,EAAQ9K,MACnBP,UAAW,OACXhC,QAAS,SACR4O,EAAsB,CACvBC,SAAUtM,MAId,IAAIsL,EAAYY,EAchB,OAZiB,MAAbZ,GAAqBA,EAAUtI,OAASf,KAAegK,IACzDX,EAAyB7B,cAAKxH,IAAY4I,YAAS,CACjD3I,QAASsJ,EAAS,QAAU,QAC5Bd,UAAWI,EAAQQ,UACnBxL,MAAO,iBACPL,UAAW,OACXhC,QAAS,SACR0O,EAA0B,CAC3BG,SAAUhB,MAIMiB,eAAMlB,EAAgBR,YAAS,CACjDH,UAAWQ,YAAKJ,EAAQV,KAAMM,GAC9BO,GAAIxL,EACJ+K,IAAKA,EACLI,WAAYA,GACX5B,EAAO,CACRsD,SAAU,CAACd,GAAuB/B,cAAK8B,EAAkB,CACvDb,UAAWI,EAAQU,OACnBZ,WAAYA,EACZ0B,SAAUd,IACKe,eAAMR,EAAmB,CACxCrB,UAAWI,EAAQkB,QACnBpB,WAAYA,EACZ0B,SAAU,CAACtM,EAAOsL,KAChBtD,GAAuByB,cAAKkC,EAAkB,CAChDjB,UAAWI,EAAQ9C,OACnB4C,WAAYA,EACZ0B,SAAUtE,WAiFD5B,O,iCC1Nf,kCAEO,IAEMmC,EAAiB,SAACrH,GAAD,qDAAmDA,EAAnD","file":"static/js/23.86cbaf7a.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nimport { Icon } from '@iconify/react';\nimport searchFill from '@iconify/icons-eva/search-fill';\nimport roundFilterList from '@iconify/icons-ic/round-filter-list';\n// material\nimport { styled } from '@mui/material/styles';\nimport { Box, Toolbar, Tooltip, IconButton, OutlinedInput, InputAdornment } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled(Toolbar)(() => ({\n  height: 96,\n  display: 'flex',\n  justifyContent: 'space-between',\n  padding: '10px !important',\n}));\n\nconst SearchStyle = styled(OutlinedInput)(({ theme }) => ({\n  width: 240,\n  transition: theme.transitions.create(['box-shadow', 'width'], {\n    easing: theme.transitions.easing.easeInOut,\n    duration: theme.transitions.duration.shorter,\n  }),\n  '&.Mui-focused': { width: 320, boxShadow: theme.customShadows.z8 },\n  '& fieldset': {\n    borderWidth: `1px !important`,\n    borderColor: `${theme.palette.grey[500_32]} !important`,\n  },\n}));\n\n// ----------------------------------------------------------------------\n\nRewardListToolbar.propTypes = {\n  filterName: PropTypes.string,\n  onFilterName: PropTypes.func,\n};\n\nexport default function RewardListToolbar({ filterName, onFilterName }) {\n  return (\n    <RootStyle>\n      <SearchStyle\n        size=\"small\"\n        value={filterName}\n        onChange={onFilterName}\n        placeholder=\"Search reward...\"\n        startAdornment={\n          <InputAdornment position=\"start\">\n            <Box component={Icon} icon={searchFill} sx={{ color: 'text.disabled' }} />\n          </InputAdornment>\n        }\n      />\n\n      <Tooltip title=\"Filter list\">\n        <IconButton>\n          <Icon icon={roundFilterList} />\n        </IconButton>\n      </Tooltip>\n    </RootStyle>\n  );\n}\n","import React, { useState } from 'react';\nimport { filter } from 'lodash';\nimport PropTypes from 'prop-types';\n\nimport { useTheme } from '@mui/material/styles';\nimport {\n  FormControlLabel,\n  Grid,\n  Switch,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Typography,\n} from '@mui/material';\n\nimport Scrollbar from '../Scrollbar';\nimport RewardListToolbar from './RewardListToolbar';\nimport SearchNotFound from '../SearchNotFound';\n\nconst TABLE_HEAD = [\n  { id: 'name', label: 'Name', alignRight: false },\n  { id: 'type', label: 'Type', alignRight: false },\n  { id: 'weeklyDispensed', label: 'Weekly Dispensed', alignRight: false },\n  { id: 'dispensedWeeklyTokenValue', label: 'Dispensed Weekly (TokenValue)', alignRight: false },\n  { id: 'averageTokenValue', label: 'Average Token Value', alignRight: false },\n  { id: 'weeklyEarners', label: 'Users Past 7 Days', alignRight: false },\n  { id: 'active', label: 'Active', alignRight: false },\n  { id: 'location', label: 'Location In App', alignRight: false },\n];\n\nfunction applyFilter(array, query) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n\n  if (query) {\n    return filter(array, (_notification) => _notification.name.toLowerCase().indexOf(query.toLowerCase()) !== -1);\n  }\n  return stabilizedThis.map((el) => el[0]);\n}\n\nRewardListTable.propTypes = {\n  rewardList: PropTypes.array,\n};\n\nfunction RewardListTable({ rewardList = [] }) {\n  const theme = useTheme();\n  const [filterName, setFilterName] = useState('');\n\n  const handleFilterByName = (event) => {\n    setFilterName(event.target.value);\n  };\n\n  const filteredRewards = applyFilter(rewardList, filterName);\n\n  const isRewardNotFound = filteredRewards.length === 0;\n\n  return (\n    <Grid container spacing={2} sx={{ mt: theme.spacing(8) }}>\n      <Grid item xs={12}>\n        <Typography variant=\"h5\">Reward List</Typography>\n      </Grid>\n      <Grid item xs={12}>\n        <Scrollbar>\n          <RewardListToolbar filterName={filterName} onFilterName={handleFilterByName} />\n          <TableContainer sx={{ minWidth: 800 }}>\n            <Table aria-label=\"reward table\">\n              <TableHead>\n                <TableRow>\n                  {TABLE_HEAD.map((headCell) => (\n                    <TableCell key={headCell.id} align={headCell.alignRight ? 'right' : 'left'}>\n                      {headCell.label}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {filteredRewards.map((row) => (\n                  <TableRow key={row.name}>\n                    <TableCell>{row.name}</TableCell>\n                    <TableCell>{row.type}</TableCell>\n                    <TableCell>{row.weeklyDispensed}</TableCell>\n                    <TableCell>{row.dispensedWeeklyTokenValue}</TableCell>\n                    <TableCell>{row.averageTokenValue}</TableCell>\n                    <TableCell>{row.weeklyEarners}</TableCell>\n                    {/* <TableCell>{row.active ? 'Yes' : 'No'}</TableCell> */}\n                    <TableCell>\n                      <FormControlLabel\n                        labelPlacement=\"start\"\n                        control={<Switch />}\n                        label={<Typography variant=\"subtitle2\">Active</Typography>}\n                        sx={{ mx: 0, width: 1, justifyContent: 'center' }}\n                      />\n                    </TableCell>\n                    <TableCell>{row.location}</TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n              {isRewardNotFound && (\n                <TableBody>\n                  <TableRow>\n                    <TableCell align=\"center\" colSpan={6} sx={{ py: 3 }}>\n                      <SearchNotFound searchQuery={filterName} />\n                    </TableCell>\n                  </TableRow>\n                </TableBody>\n              )}\n            </Table>\n          </TableContainer>\n        </Scrollbar>\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default RewardListTable;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useSnackbar } from 'notistack';\nimport * as Yup from 'yup';\nimport { Form, FormikProvider, useFormik } from 'formik';\nimport { Box, Card, CardContent, CardHeader, Grid, InputAdornment, Stack, TextField } from '@mui/material';\nimport { LoadingButton } from '@mui/lab';\nimport { Save as SaveIcon } from '@mui/icons-material';\n\nconst SettingsSchema = Yup.object().shape({\n  tokenValue: Yup.number().required('This field is required.'),\n  starValueInTokens: Yup.number().required('This field is required.'),\n  keyValueInTokens: Yup.number().required('This field is required.'),\n  boosterValueInTokens: Yup.number().required('This field is required.'),\n});\n\nconst RewardSettings = ({ currentSettings }) => {\n  const { enqueueSnackbar } = useSnackbar();\n\n  const formik = useFormik({\n    enableReinitialize: true,\n    initialValues: {\n      tokenValue: currentSettings?.tokenValue || 5,\n      starValueInTokens: currentSettings?.starValueInTokens || 5,\n      keyValueInTokens: currentSettings?.keyValueInTokens || 5,\n      boosterValueInTokens: currentSettings?.boosterValueInTokens || 5,\n    },\n    validationSchema: SettingsSchema,\n    onSubmit: async (values, { setSubmitting, resetForm, setErrors }) => {\n      alert(JSON.stringify(values));\n      try {\n        resetForm();\n        setSubmitting(false);\n        enqueueSnackbar('Update success', { variant: 'success' });\n      } catch (error) {\n        console.error(error);\n        setSubmitting(false);\n        setErrors(error);\n      }\n    },\n  });\n\n  const { errors, touched, handleSubmit, getFieldProps, isSubmitting } = formik;\n\n  return (\n    <FormikProvider value={formik}>\n      <Form noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\n        <Grid container spacing={3}>\n          <Grid item md={12}>\n            <Card>\n              <CardHeader title=\"Reward Settings\" />\n              <CardContent>\n                <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 3, sm: 2 }}>\n                  <TextField\n                    fullWidth\n                    size=\"small\"\n                    label=\"Token Value in USD\"\n                    InputProps={{\n                      endAdornment: <InputAdornment position=\"end\">USD</InputAdornment>,\n                    }}\n                    {...getFieldProps('tokenValue')}\n                    error={Boolean(touched.tokenValue && errors.tokenValue)}\n                    helperText={touched.tokenValue && errors.tokenValue}\n                  />\n                  <TextField\n                    fullWidth\n                    size=\"small\"\n                    label=\"Star Value in Tokens\"\n                    InputProps={{\n                      endAdornment: <InputAdornment position=\"end\">tokens</InputAdornment>,\n                    }}\n                    {...getFieldProps('starValueInTokens')}\n                    error={Boolean(touched.starValueInTokens && errors.starValueInTokens)}\n                    helperText={touched.starValueInTokens && errors.starValueInTokens}\n                  />\n                  <TextField\n                    fullWidth\n                    size=\"small\"\n                    label=\"Key Value in Tokens\"\n                    InputProps={{\n                      endAdornment: <InputAdornment position=\"end\">tokens</InputAdornment>,\n                    }}\n                    {...getFieldProps('keyValueInTokens')}\n                    error={Boolean(touched.keyValueInTokens && errors.keyValueInTokens)}\n                    helperText={touched.keyValueInTokens && errors.keyValueInTokens}\n                  />\n                  <TextField\n                    fullWidth\n                    size=\"small\"\n                    label=\"Booster Value in Tokens\"\n                    InputProps={{\n                      endAdornment: <InputAdornment position=\"end\">tokens</InputAdornment>,\n                    }}\n                    {...getFieldProps('boosterValueInTokens')}\n                    error={Boolean(touched.boosterValueInTokens && errors.boosterValueInTokens)}\n                    helperText={touched.boosterValueInTokens && errors.boosterValueInTokens}\n                  />\n                  <Box sx={{ mt: 3, display: 'flex', justifyContent: 'flex-end' }}>\n                    <LoadingButton type=\"submit\" variant=\"contained\" loading={isSubmitting} endIcon={<SaveIcon />}>\n                      Save\n                    </LoadingButton>\n                  </Box>\n                </Stack>\n              </CardContent>\n            </Card>\n          </Grid>\n        </Grid>\n      </Form>\n    </FormikProvider>\n  );\n};\n\nRewardSettings.propTypes = {\n  currentSettings: PropTypes.object,\n};\n\nexport default RewardSettings;\n","import { Link as RouterLink } from 'react-router-dom';\nimport { Icon } from '@iconify/react';\nimport PlusFill from '@iconify/icons-eva/plus-fill';\n// material\nimport { useTheme } from '@mui/material/styles';\nimport { Box, Button, Card, CardContent, Container, Stack, Typography } from '@mui/material';\n\nimport useSettings from '../hooks/useSettings';\n\nimport { PATH_DASHBOARD } from '../routes/paths';\n\nimport { mockImgProduct } from '../utils/mockImages';\n\nimport Page from '../components/Page';\nimport HeaderBreadcrumbs from '../components/HeaderBreadcrumbs';\nimport RewardListTable from '../components/reward/RewardListTable';\nimport RewardSettings from '../components/reward/RewardSettings';\n\n// ----------------------------------------------------------------------\n\nconst RewardList = () => {\n  const { themeStretch } = useSettings();\n  const theme = useTheme();\n\n  return (\n    <Page title=\"Reward: List\">\n      <Container maxWidth={themeStretch ? false : 'lg'}>\n        <HeaderBreadcrumbs\n          heading=\"Reward List\"\n          links={[{ name: 'Reward', href: PATH_DASHBOARD.reward.list }, { name: 'List' }]}\n          action={\n            <Button\n              variant=\"contained\"\n              component={RouterLink}\n              to={PATH_DASHBOARD.reward.create}\n              startIcon={<Icon icon={PlusFill} />}\n            >\n              New Reward\n            </Button>\n          }\n        />\n        <RewardSettings\n          currentSettings={{ tokenValue: 44, starValueInTokens: 2, keyValueInTokens: 10, boosterValueInTokens: 20 }}\n        />\n        <Card sx={{ mt: theme.spacing(4) }}>\n          <CardContent>\n            <Stack spacing={1}>\n              <Stack direction=\"row\" spacing={2}>\n                <Typography variant=\"subtitle2\">Easter Egg</Typography>\n                <Typography variant=\"body2\">1800 tokens</Typography>\n              </Stack>\n              <Stack direction=\"row\" spacing={2}>\n                <Typography variant=\"subtitle2\">Present</Typography>\n                <Typography variant=\"body2\">1750 tokens</Typography>\n              </Stack>\n              <Stack direction=\"row\" spacing={2}>\n                <Typography variant=\"subtitle2\">Chest</Typography>\n                <Typography variant=\"body2\">2021 tokens</Typography>\n              </Stack>\n              <Stack direction=\"row\" spacing={2}>\n                <Typography variant=\"subtitle2\">Lottery Wheels</Typography>\n                <Typography variant=\"body2\">1907 tokens</Typography>\n              </Stack>\n            </Stack>\n          </CardContent>\n        </Card>\n        <Box sx={{ height: 720 }}>\n          <RewardListTable\n            rewardList={[\n              {\n                avatarUrl: mockImgProduct(1),\n                name: 'Easter Egg 2',\n                type: 'Easter Egg',\n                weeklyDispensed: 2890,\n                dispensedWeeklyTokenValue: 2890,\n                averageTokenValue: 1000,\n                weeklyEarners: 652,\n                active: true,\n                location: 'Default',\n                contents: [\n                  {\n                    title: 'Basic',\n                    frequency: 30,\n                    numberOfKeys: 5,\n                    numberOfCoins: 5,\n                    numberOfStars: 5,\n                    numberOfBoosters: 5,\n                  },\n                  {\n                    title: 'Rare',\n                    frequency: 30,\n                    numberOfKeys: 10,\n                    numberOfCoins: 15,\n                    numberOfStars: 5,\n                    numberOfBoosters: 10,\n                  },\n                  {\n                    title: 'Epic',\n                    frequency: 20,\n                    numberOfKeys: 20,\n                    numberOfCoins: 30,\n                    numberOfStars: 20,\n                    numberOfBoosters: 25,\n                  },\n                ],\n              },\n            ]}\n          />\n        </Box>\n      </Container>\n    </Page>\n  );\n};\n\nexport default RewardList;\n","import { isString } from 'lodash';\nimport PropTypes from 'prop-types';\n// material\nimport { Box, Typography, Link, Stack } from '@mui/material';\n//\nimport { MBreadcrumbs } from './@material-extend';\n\n// ----------------------------------------------------------------------\n\nHeaderBreadcrumbs.propTypes = {\n  links: PropTypes.array,\n  action: PropTypes.node,\n  heading: PropTypes.string.isRequired,\n  moreLink: PropTypes.oneOfType([PropTypes.string, PropTypes.array]),\n  sx: PropTypes.object,\n};\n\nexport default function HeaderBreadcrumbs({ links, action, heading, moreLink = '' || [], sx, ...other }) {\n  return (\n    <Stack sx={sx} mb={5} spacing={2}>\n      <Stack direction=\"row\" alignItems=\"center\">\n        <Box sx={{ flexGrow: 1 }}>\n          <Typography variant=\"h4\" gutterBottom>\n            {heading}\n          </Typography>\n          <MBreadcrumbs links={links} {...other} />\n        </Box>\n\n        {action && <Box sx={{ flexShrink: 0 }}>{action}</Box>}\n      </Stack>\n\n      {isString(moreLink) ? (\n        <Link href={moreLink} target=\"_blank\" variant=\"body2\">\n          {moreLink}\n        </Link>\n      ) : (\n        moreLink.map((href) => (\n          <Link noWrap key={href} href={href} variant=\"body2\" target=\"_blank\" sx={{ display: 'flex' }}>\n            {href}\n          </Link>\n        ))\n      )}\n    </Stack>\n  );\n}\n","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M17 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V7l-4-4zm-5 16c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3zm3-10H5V5h10v4z\"\n}), 'Save');","import { generateUtilityClass, generateUtilityClasses } from '@mui/core';\nexport function getCardContentUtilityClass(slot) {\n  return generateUtilityClass('MuiCardContent', slot);\n}\nconst cardContentClasses = generateUtilityClasses('MuiCardContent', ['root']);\nexport default cardContentClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/core';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getCardContentUtilityClass } from './cardContentClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardContentUtilityClass, classes);\n};\n\nconst CardContentRoot = styled('div', {\n  name: 'MuiCardContent',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  };\n});\nconst CardContent = /*#__PURE__*/React.forwardRef(function CardContent(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardContent'\n  });\n\n  const {\n    className,\n    component = 'div'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    component\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardContentRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default CardContent;","import PropTypes from 'prop-types';\n// material\nimport { Paper, Typography } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nSearchNotFound.propTypes = {\n  searchQuery: PropTypes.string,\n};\n\nexport default function SearchNotFound({ searchQuery = '', ...other }) {\n  return (\n    <Paper {...other}>\n      <Typography gutterBottom align=\"center\" variant=\"subtitle1\">\n        Not found\n      </Typography>\n      <Typography variant=\"body2\" align=\"center\">\n        No results found for &nbsp;\n        <strong>&quot;{searchQuery}&quot;</strong>. Try checking for typos or using complete words.\n      </Typography>\n    </Paper>\n  );\n}\n","import { generateUtilityClass, generateUtilityClasses } from '@mui/core';\nexport function getCardHeaderUtilityClass(slot) {\n  return generateUtilityClass('MuiCardHeader', slot);\n}\nconst cardHeaderClasses = generateUtilityClasses('MuiCardHeader', ['root', 'avatar', 'action', 'content', 'title', 'subheader']);\nexport default cardHeaderClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"action\", \"avatar\", \"className\", \"component\", \"disableTypography\", \"subheader\", \"subheaderTypographyProps\", \"title\", \"titleTypographyProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/core';\nimport Typography from '../Typography';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport cardHeaderClasses, { getCardHeaderUtilityClass } from './cardHeaderClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    avatar: ['avatar'],\n    action: ['action'],\n    content: ['content'],\n    title: ['title'],\n    subheader: ['subheader']\n  };\n  return composeClasses(slots, getCardHeaderUtilityClass, classes);\n};\n\nconst CardHeaderRoot = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Root',\n  overridesResolver: (props, styles) => _extends({\n    [`& .${cardHeaderClasses.title}`]: styles.title,\n    [`& .${cardHeaderClasses.subheader}`]: styles.subheader\n  }, styles.root)\n})({\n  display: 'flex',\n  alignItems: 'center',\n  padding: 16\n});\nconst CardHeaderAvatar = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Avatar',\n  overridesResolver: (props, styles) => styles.avatar\n})({\n  display: 'flex',\n  flex: '0 0 auto',\n  marginRight: 16\n});\nconst CardHeaderAction = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Action',\n  overridesResolver: (props, styles) => styles.action\n})({\n  flex: '0 0 auto',\n  alignSelf: 'flex-start',\n  marginTop: -4,\n  marginRight: -8,\n  marginBottom: -4\n});\nconst CardHeaderContent = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Content',\n  overridesResolver: (props, styles) => styles.content\n})({\n  flex: '1 1 auto'\n});\nconst CardHeader = /*#__PURE__*/React.forwardRef(function CardHeader(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardHeader'\n  });\n\n  const {\n    action,\n    avatar,\n    className,\n    component = 'div',\n    disableTypography = false,\n    subheader: subheaderProp,\n    subheaderTypographyProps,\n    title: titleProp,\n    titleTypographyProps\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    component,\n    disableTypography\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  let title = titleProp;\n\n  if (title != null && title.type !== Typography && !disableTypography) {\n    title = /*#__PURE__*/_jsx(Typography, _extends({\n      variant: avatar ? 'body2' : 'h5',\n      className: classes.title,\n      component: \"span\",\n      display: \"block\"\n    }, titleTypographyProps, {\n      children: title\n    }));\n  }\n\n  let subheader = subheaderProp;\n\n  if (subheader != null && subheader.type !== Typography && !disableTypography) {\n    subheader = /*#__PURE__*/_jsx(Typography, _extends({\n      variant: avatar ? 'body2' : 'body1',\n      className: classes.subheader,\n      color: \"text.secondary\",\n      component: \"span\",\n      display: \"block\"\n    }, subheaderTypographyProps, {\n      children: subheader\n    }));\n  }\n\n  return /*#__PURE__*/_jsxs(CardHeaderRoot, _extends({\n    className: clsx(classes.root, className),\n    as: component,\n    ref: ref,\n    ownerState: ownerState\n  }, other, {\n    children: [avatar && /*#__PURE__*/_jsx(CardHeaderAvatar, {\n      className: classes.avatar,\n      ownerState: ownerState,\n      children: avatar\n    }), /*#__PURE__*/_jsxs(CardHeaderContent, {\n      className: classes.content,\n      ownerState: ownerState,\n      children: [title, subheader]\n    }), action && /*#__PURE__*/_jsx(CardHeaderAction, {\n      className: classes.action,\n      ownerState: ownerState,\n      children: action\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardHeader.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The action to display in the card header.\n   */\n  action: PropTypes.node,\n\n  /**\n   * The Avatar element to display.\n   */\n  avatar: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, `subheader` and `title` won't be wrapped by a Typography component.\n   * This can be useful to render an alternative Typography variant by wrapping\n   * the `title` text, and optional `subheader` text\n   * with the Typography component.\n   * @default false\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * The content of the component.\n   */\n  subheader: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the subheader\n   * (as long as disableTypography is not `true`).\n   */\n  subheaderTypographyProps: PropTypes.object,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * The content of the component.\n   */\n  title: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the title\n   * (as long as disableTypography is not `true`).\n   */\n  titleTypographyProps: PropTypes.object\n} : void 0;\nexport default CardHeader;","// ----------------------------------------------------------------------\n\nexport const mockImgCover = (index) => `/static/mock-images/covers/cover_${index}.jpg`;\nexport const mockImgFeed = (index) => `/static/mock-images/feeds/feed_${index}.jpg`;\nexport const mockImgProduct = (index) => `/static/mock-images/products/product_${index}.jpg`;\nexport const mockImgAvatar = (index) => `/static/mock-images/avatars/avatar_${index}.jpg`;\n"],"sourceRoot":""}