{"version":3,"sources":["utils/formatNumber.js","components/HeaderBreadcrumbs.js","utils/constants/regexs.js","components/upload/UploadMultiFile.js","components/upload/UploadSingleFile.js","components/upload/UploadAvatar.js","components/task/CampaignTypeForm.js","components/task/TaskAndRewardsForm.js","components/task/TaskDetailForm.js","components/task/TaskNewForm.js","pages/TaskCreate.js"],"names":["fShortenNumber","number","replace","numeral","format","fData","HeaderBreadcrumbs","links","action","heading","moreLink","sx","other","mb","spacing","direction","alignItems","flexGrow","variant","gutterBottom","flexShrink","isString","href","target","map","noWrap","display","phoneRegExp","addressRegExp","nameRegExp","styled","theme","outline","textAlign","flexDirection","justifyContent","padding","borderRadius","shape","backgroundColor","palette","background","neutral","border","grey","opacity","cursor","breakpoints","up","DropZoneStyle","overflow","position","transition","transitions","create","UploadSingleFile","error","file","useDropzone","multiple","getRootProps","getInputProps","isDragActive","isDragReject","fileRejections","ShowRejectionItems","Paper","py","px","mt","borderColor","bgcolor","alpha","main","errors","path","size","Box","my","Typography","e","component","message","code","width","color","p","ml","md","textDecoration","alt","src","preview","top","objectFit","height","length","RootStyle","margin","zIndex","PlaceholderStyle","text","secondary","easing","easeInOut","duration","shorter","UploadAvatar","caption","className","Icon","icon","roundAddAPhoto","CampaignTypeForm","formik","useTheme","values","touched","getFieldProps","Grid","container","item","Stack","xs","TextField","select","fullWidth","label","placeholder","SelectProps","native","Boolean","brand","helperText","value","option","index","RadioGroup","campaignType","columns","type","isSelected","Card","primary","CardMedia","image","title","CardContent","CardActions","FormControlLabel","control","Radio","TaskAndRewardsForm","CardHeader","sm","name","taskType","totalBudget","perUser","starPerUser","continueAfterBudget","tier","labelPlacement","Switch","checked","isPublic","mx","LabelStyle","typography","subtitle2","marginBottom","TaskDetailForm","setFieldValue","handleCoverDrop","useCallback","acceptedFiles","URL","createObjectURL","maxSize","accept","coverUrl","onDrop","FormHelperText","Button","Avatar","multiline","rows","description","render","arrHelper","doList","fieldName","getIn","IconButton","onClick","push","Add","remove","Delete","dontList","igCaptionQuestions","noOfPhotoRequired","noOfVideoRequired","Autocomplete","freeSolo","hashtags","onChange","event","newValue","options","renderTags","getTagProps","Chip","renderInput","params","mentions","DateTimePicker","startDate","inputFormat","date","isValidDate","endDate","STEPS","QontoConnector","withStyles","alternativeLabel","left","right","active","completed","line","borderTopWidth","divider","StepConnector","QontoStepIcon","CheckmarkFill","TaskNewForm","isEdit","currentTask","navigate","useNavigate","enqueueSnackbar","useSnackbar","useState","activeStep","setActiveStep","VALIDATION_SCHEMAS","Yup","matches","required","headerImage","of","nullable","when","schema","min","isLastStep","useFormik","enableReinitialize","initialValues","undefined","Date","validationSchema","onSubmit","a","setSubmitting","resetForm","setErrors","alert","JSON","stringify","PATH_DASHBOARD","task","list","console","prev","handleSubmit","isSubmitting","log","noValidate","autoComplete","Stepper","connector","Step","StepLabel","StepIconComponent","mr","LoadingButton","loading","TaskCreate","themeStretch","useSettings","pathname","useLocation","useParams","includes","Page","Container","maxWidth"],"mappings":"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","file":"static/js/8.74c22bce.chunk.js","sourcesContent":["import { replace } from 'lodash';\nimport numeral from 'numeral';\n\n// ----------------------------------------------------------------------\n\nexport function fCurrency(number) {\n  return numeral(number).format(Number.isInteger(number) ? '$0,0' : '$0,0.00');\n}\n\nexport function fPercent(number) {\n  return numeral(number / 100).format('0.0%');\n}\n\nexport function fNumber(number) {\n  return numeral(number).format();\n}\n\nexport function fShortenNumber(number) {\n  return replace(numeral(number).format('0.00a'), '.00', '');\n}\n\nexport function fData(number) {\n  return numeral(number).format('0.0 b');\n}\n","import { isString } from 'lodash';\nimport PropTypes from 'prop-types';\n// material\nimport { Box, Typography, Link, Stack } from '@material-ui/core';\n//\nimport { MBreadcrumbs } from './@material-extend';\n\n// ----------------------------------------------------------------------\n\nHeaderBreadcrumbs.propTypes = {\n  links: PropTypes.array,\n  action: PropTypes.node,\n  heading: PropTypes.string.isRequired,\n  moreLink: PropTypes.oneOfType([PropTypes.string, PropTypes.array]),\n  sx: PropTypes.object,\n};\n\nexport default function HeaderBreadcrumbs({ links, action, heading, moreLink = '' || [], sx, ...other }) {\n  return (\n    <Stack sx={sx} mb={5} spacing={2}>\n      <Stack direction=\"row\" alignItems=\"center\">\n        <Box sx={{ flexGrow: 1 }}>\n          <Typography variant=\"h4\" gutterBottom>\n            {heading}\n          </Typography>\n          <MBreadcrumbs links={links} {...other} />\n        </Box>\n\n        {action && <Box sx={{ flexShrink: 0 }}>{action}</Box>}\n      </Stack>\n\n      {isString(moreLink) ? (\n        <Link href={moreLink} target=\"_blank\" variant=\"body2\">\n          {moreLink}\n        </Link>\n      ) : (\n        moreLink.map((href) => (\n          <Link noWrap key={href} href={href} variant=\"body2\" target=\"_blank\" sx={{ display: 'flex' }}>\n            {href}\n          </Link>\n        ))\n      )}\n    </Stack>\n  );\n}\n","export const phoneRegExp =\n  /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/;\nexport const addressRegExp = /^[a-zA-Z0-9 ]*$/;\nexport const nameRegExp = /^[a-zA-Z ]*$/;\n","import { isString } from 'lodash';\nimport PropTypes from 'prop-types';\nimport { Icon } from '@iconify/react';\nimport { useDropzone } from 'react-dropzone';\nimport fileFill from '@iconify/icons-eva/file-fill';\nimport closeFill from '@iconify/icons-eva/close-fill';\nimport { motion, AnimatePresence } from 'framer-motion';\n// material\nimport { alpha, styled } from '@material-ui/core/styles';\nimport {\n  Box,\n  List,\n  Stack,\n  Paper,\n  Button,\n  ListItem,\n  Typography,\n  ListItemIcon,\n  ListItemText,\n  ListItemSecondaryAction,\n} from '@material-ui/core';\n// utils\nimport { fData } from '../../utils/formatNumber';\n//\nimport { MIconButton } from '../@material-extend';\nimport { varFadeInRight } from '../animate';\nimport { UploadIllustration } from '../../assets';\n\n// ----------------------------------------------------------------------\n\nconst DropZoneStyle = styled('div')(({ theme }) => ({\n  outline: 'none',\n  display: 'flex',\n  textAlign: 'center',\n  alignItems: 'center',\n  flexDirection: 'column',\n  justifyContent: 'center',\n  padding: theme.spacing(5, 1),\n  borderRadius: theme.shape.borderRadius,\n  backgroundColor: theme.palette.background.neutral,\n  border: `1px dashed ${theme.palette.grey[500_32]}`,\n  '&:hover': { opacity: 0.72, cursor: 'pointer' },\n  [theme.breakpoints.up('md')]: { textAlign: 'left', flexDirection: 'row' },\n}));\n\n// ----------------------------------------------------------------------\n\nUploadMultiFile.propTypes = {\n  error: PropTypes.bool,\n  showPreview: PropTypes.bool,\n  files: PropTypes.array,\n  onRemove: PropTypes.func,\n  onRemoveAll: PropTypes.func,\n  sx: PropTypes.object,\n};\n\nexport default function UploadMultiFile({ error, showPreview = false, files, onRemove, onRemoveAll, sx, ...other }) {\n  const hasFile = files.length > 0;\n\n  const { getRootProps, getInputProps, isDragActive, isDragReject, fileRejections } = useDropzone({\n    ...other,\n  });\n\n  const ShowRejectionItems = () => (\n    <Paper\n      variant=\"outlined\"\n      sx={{\n        py: 1,\n        px: 2,\n        mt: 3,\n        borderColor: 'error.light',\n        bgcolor: (theme) => alpha(theme.palette.error.main, 0.08),\n      }}\n    >\n      {fileRejections.map(({ file, errors }) => {\n        const { path, size } = file;\n        return (\n          <Box key={path} sx={{ my: 1 }}>\n            <Typography variant=\"subtitle2\" noWrap>\n              {path} - {fData(size)}\n            </Typography>\n            {errors.map((e) => (\n              <Typography key={e.code} variant=\"caption\" component=\"p\">\n                - {e.message}\n              </Typography>\n            ))}\n          </Box>\n        );\n      })}\n    </Paper>\n  );\n\n  return (\n    <Box sx={{ width: '100%', ...sx }}>\n      <DropZoneStyle\n        {...getRootProps()}\n        sx={{\n          ...(isDragActive && { opacity: 0.72 }),\n          ...((isDragReject || error) && {\n            color: 'error.main',\n            borderColor: 'error.light',\n            bgcolor: 'error.lighter',\n          }),\n        }}\n      >\n        <input {...getInputProps()} />\n\n        <UploadIllustration sx={{ width: 220 }} />\n\n        <Box sx={{ p: 3, ml: { md: 2 } }}>\n          <Typography gutterBottom variant=\"h5\">\n            Drop or Select file\n          </Typography>\n\n          <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\n            Drop files here or click&nbsp;\n            <Typography variant=\"body2\" component=\"span\" sx={{ color: 'primary.main', textDecoration: 'underline' }}>\n              browse\n            </Typography>\n            &nbsp;thorough your machine\n          </Typography>\n        </Box>\n      </DropZoneStyle>\n\n      {fileRejections.length > 0 && <ShowRejectionItems />}\n\n      <List disablePadding sx={{ ...(hasFile && { my: 3 }) }}>\n        <AnimatePresence>\n          {files.map((file) => {\n            const { name, size, preview } = file;\n            const key = isString(file) ? file : name;\n\n            if (showPreview) {\n              return (\n                <ListItem\n                  key={key}\n                  component={motion.div}\n                  {...varFadeInRight}\n                  sx={{\n                    p: 0,\n                    m: 0.5,\n                    width: 80,\n                    height: 80,\n                    borderRadius: 1.5,\n                    overflow: 'hidden',\n                    position: 'relative',\n                    display: 'inline-flex',\n                  }}\n                >\n                  <Paper\n                    variant=\"outlined\"\n                    component=\"img\"\n                    src={isString(file) ? file : preview}\n                    sx={{ width: '100%', height: '100%', objectFit: 'cover', position: 'absolute' }}\n                  />\n                  <Box sx={{ top: 6, right: 6, position: 'absolute' }}>\n                    <MIconButton\n                      size=\"small\"\n                      onClick={() => onRemove(file)}\n                      sx={{\n                        p: '2px',\n                        color: 'common.white',\n                        bgcolor: (theme) => alpha(theme.palette.grey[900], 0.72),\n                        '&:hover': {\n                          bgcolor: (theme) => alpha(theme.palette.grey[900], 0.48),\n                        },\n                      }}\n                    >\n                      <Icon icon={closeFill} />\n                    </MIconButton>\n                  </Box>\n                </ListItem>\n              );\n            }\n\n            return (\n              <ListItem\n                key={key}\n                component={motion.div}\n                {...varFadeInRight}\n                sx={{\n                  my: 1,\n                  py: 0.75,\n                  px: 2,\n                  borderRadius: 1,\n                  border: (theme) => `solid 1px ${theme.palette.divider}`,\n                  bgcolor: 'background.paper',\n                }}\n              >\n                <ListItemIcon>\n                  <Icon icon={fileFill} width={28} height={28} />\n                </ListItemIcon>\n                <ListItemText\n                  primary={isString(file) ? file : name}\n                  secondary={isString(file) ? '' : fData(size)}\n                  primaryTypographyProps={{ variant: 'subtitle2' }}\n                  secondaryTypographyProps={{ variant: 'caption' }}\n                />\n                <ListItemSecondaryAction>\n                  <MIconButton edge=\"end\" size=\"small\" onClick={() => onRemove(file)}>\n                    <Icon icon={closeFill} />\n                  </MIconButton>\n                </ListItemSecondaryAction>\n              </ListItem>\n            );\n          })}\n        </AnimatePresence>\n      </List>\n\n      {hasFile && (\n        <Stack direction=\"row\" justifyContent=\"flex-end\">\n          <Button onClick={onRemoveAll} sx={{ mr: 1.5 }}>\n            Remove all\n          </Button>\n          <Button variant=\"contained\">Upload files</Button>\n        </Stack>\n      )}\n    </Box>\n  );\n}\n","import { isString } from 'lodash';\nimport PropTypes from 'prop-types';\nimport { useDropzone } from 'react-dropzone';\n// material\nimport { alpha, styled } from '@material-ui/core/styles';\nimport { Paper, Box, Typography } from '@material-ui/core';\n// utils\nimport { fData } from '../../utils/formatNumber';\n//\nimport { UploadIllustration } from '../../assets';\n\n// ----------------------------------------------------------------------\n\nconst DropZoneStyle = styled('div')(({ theme }) => ({\n  outline: 'none',\n  display: 'flex',\n  overflow: 'hidden',\n  textAlign: 'center',\n  position: 'relative',\n  alignItems: 'center',\n  flexDirection: 'column',\n  justifyContent: 'center',\n  padding: theme.spacing(5, 0),\n  borderRadius: theme.shape.borderRadius,\n  transition: theme.transitions.create('padding'),\n  backgroundColor: theme.palette.background.neutral,\n  border: `1px dashed ${theme.palette.grey[500_32]}`,\n  '&:hover': {\n    opacity: 0.72,\n    cursor: 'pointer',\n  },\n  [theme.breakpoints.up('md')]: { textAlign: 'left', flexDirection: 'row' },\n}));\n\n// ----------------------------------------------------------------------\n\nUploadSingleFile.propTypes = {\n  error: PropTypes.bool,\n  file: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n  sx: PropTypes.object,\n};\n\nexport default function UploadSingleFile({ error, file, sx, ...other }) {\n  const { getRootProps, getInputProps, isDragActive, isDragReject, fileRejections } = useDropzone({\n    multiple: false,\n    ...other,\n  });\n\n  const ShowRejectionItems = () => (\n    <Paper\n      variant=\"outlined\"\n      sx={{\n        py: 1,\n        px: 2,\n        mt: 3,\n        borderColor: 'error.light',\n        bgcolor: (theme) => alpha(theme.palette.error.main, 0.08),\n      }}\n    >\n      {fileRejections.map(({ file, errors }) => {\n        const { path, size } = file;\n        return (\n          <Box key={path} sx={{ my: 1 }}>\n            <Typography variant=\"subtitle2\" noWrap>\n              {path} - {fData(size)}\n            </Typography>\n            {errors.map((e) => (\n              <Typography key={e.code} variant=\"caption\" component=\"p\">\n                - {e.message}\n              </Typography>\n            ))}\n          </Box>\n        );\n      })}\n    </Paper>\n  );\n\n  return (\n    <Box sx={{ width: '100%', ...sx }}>\n      <DropZoneStyle\n        {...getRootProps()}\n        sx={{\n          ...(isDragActive && { opacity: 0.72 }),\n          ...((isDragReject || error) && {\n            color: 'error.main',\n            borderColor: 'error.light',\n            bgcolor: 'error.lighter',\n          }),\n          ...(file && { padding: '12% 0' }),\n        }}\n      >\n        <input {...getInputProps()} />\n\n        <UploadIllustration sx={{ width: 220 }} />\n\n        <Box sx={{ p: 3, ml: { md: 2 } }}>\n          <Typography gutterBottom variant=\"h5\">\n            Drop or Select file\n          </Typography>\n\n          <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\n            Drop files here or click&nbsp;\n            <Typography variant=\"body2\" component=\"span\" sx={{ color: 'primary.main', textDecoration: 'underline' }}>\n              browse\n            </Typography>\n            &nbsp;thorough your machine\n          </Typography>\n        </Box>\n\n        {file && (\n          <Box\n            component=\"img\"\n            alt=\"file preview\"\n            src={isString(file) ? file : file.preview}\n            sx={{\n              top: 8,\n              borderRadius: 1,\n              objectFit: 'cover',\n              position: 'absolute',\n              width: 'calc(100% - 16px)',\n              height: 'calc(100% - 16px)',\n            }}\n          />\n        )}\n      </DropZoneStyle>\n\n      {fileRejections.length > 0 && <ShowRejectionItems />}\n    </Box>\n  );\n}\n","import { isString } from 'lodash';\nimport PropTypes from 'prop-types';\nimport { Icon } from '@iconify/react';\nimport { useDropzone } from 'react-dropzone';\nimport roundAddAPhoto from '@iconify/icons-ic/round-add-a-photo';\n// material\nimport { alpha, styled } from '@material-ui/core/styles';\nimport { Box, Typography, Paper } from '@material-ui/core';\n// utils\nimport { fData } from '../../utils/formatNumber';\n\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled('div')(({ theme }) => ({\n  width: 144,\n  height: 144,\n  margin: 'auto',\n  borderRadius: '50%',\n  padding: theme.spacing(1),\n  border: `1px dashed ${theme.palette.grey[500_32]}`,\n}));\n\nconst DropZoneStyle = styled('div')({\n  zIndex: 0,\n  width: '100%',\n  height: '100%',\n  outline: 'none',\n  display: 'flex',\n  overflow: 'hidden',\n  borderRadius: '50%',\n  position: 'relative',\n  alignItems: 'center',\n  justifyContent: 'center',\n  '& > *': { width: '100%', height: '100%' },\n  '&:hover': {\n    cursor: 'pointer',\n    '& .placeholder': {\n      zIndex: 9,\n    },\n  },\n});\n\nconst PlaceholderStyle = styled('div')(({ theme }) => ({\n  display: 'flex',\n  position: 'absolute',\n  alignItems: 'center',\n  flexDirection: 'column',\n  justifyContent: 'center',\n  color: theme.palette.text.secondary,\n  backgroundColor: theme.palette.background.neutral,\n  transition: theme.transitions.create('opacity', {\n    easing: theme.transitions.easing.easeInOut,\n    duration: theme.transitions.duration.shorter,\n  }),\n  '&:hover': { opacity: 0.72 },\n}));\n\n// ----------------------------------------------------------------------\n\nUploadAvatar.propTypes = {\n  error: PropTypes.bool,\n  file: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n  caption: PropTypes.node,\n  sx: PropTypes.object,\n};\n\nexport default function UploadAvatar({ error, file, caption, sx, ...other }) {\n  const { getRootProps, getInputProps, isDragActive, isDragReject, fileRejections } = useDropzone({\n    multiple: false,\n    ...other,\n  });\n\n  const ShowRejectionItems = () => (\n    <Paper\n      variant=\"outlined\"\n      sx={{\n        py: 1,\n        px: 2,\n        my: 2,\n        borderColor: 'error.light',\n        bgcolor: (theme) => alpha(theme.palette.error.main, 0.08),\n      }}\n    >\n      {fileRejections.map(({ file, errors }) => {\n        const { path, size } = file;\n        return (\n          <Box key={path} sx={{ my: 1 }}>\n            <Typography variant=\"subtitle2\" noWrap>\n              {path} - {fData(size)}\n            </Typography>\n            {errors.map((e) => (\n              <Typography key={e.code} variant=\"caption\" component=\"p\">\n                - {e.message}\n              </Typography>\n            ))}\n          </Box>\n        );\n      })}\n    </Paper>\n  );\n\n  return (\n    <>\n      <RootStyle sx={sx}>\n        <DropZoneStyle\n          {...getRootProps()}\n          sx={{\n            ...(isDragActive && { opacity: 0.72 }),\n            ...((isDragReject || error) && {\n              color: 'error.main',\n              borderColor: 'error.light',\n              bgcolor: 'error.lighter',\n            }),\n          }}\n        >\n          <input {...getInputProps()} />\n\n          {file && (\n            <Box\n              component=\"img\"\n              alt=\"avatar\"\n              src={isString(file) ? file : file.preview}\n              sx={{ zIndex: 8, objectFit: 'cover' }}\n            />\n          )}\n\n          <PlaceholderStyle\n            className=\"placeholder\"\n            sx={{\n              ...(file && {\n                opacity: 0,\n                color: 'common.white',\n                bgcolor: 'grey.900',\n                '&:hover': { opacity: 0.72 },\n              }),\n            }}\n          >\n            <Box component={Icon} icon={roundAddAPhoto} sx={{ width: 24, height: 24, mb: 1 }} />\n            <Typography variant=\"caption\">{file ? 'Update photo' : 'Upload photo'}</Typography>\n          </PlaceholderStyle>\n        </DropZoneStyle>\n      </RootStyle>\n\n      {caption}\n\n      {fileRejections.length > 0 && <ShowRejectionItems />}\n    </>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useTheme } from '@material-ui/core/styles';\nimport {\n  Card,\n  CardActions,\n  CardContent,\n  CardMedia,\n  FormControlLabel,\n  Grid,\n  Radio,\n  RadioGroup,\n  Stack,\n  TextField,\n} from '@material-ui/core';\n\nconst CampaignTypeForm = ({ formik }) => {\n  const theme = useTheme();\n  const { errors, values, touched, getFieldProps } = formik;\n  return (\n    <Grid container spacing={3}>\n      <Grid item md={12}>\n        <Stack spacing={3}>\n          <Grid container>\n            <Grid item xs={12} md={4}>\n              <TextField\n                select\n                fullWidth\n                size=\"small\"\n                label=\"Select Brand\"\n                placeholder=\"Brand\"\n                {...getFieldProps('brand')}\n                SelectProps={{ native: true }}\n                error={Boolean(touched.brand && errors.brand)}\n                helperText={touched.brand && errors.brand}\n              >\n                <option value=\"\" />\n                {['Adidas', 'Nike'].map((option, index) => (\n                  <option key={option + index} value={option}>\n                    {option}\n                  </option>\n                ))}\n              </TextField>\n            </Grid>\n          </Grid>\n\n          <RadioGroup {...getFieldProps('campaignType')} value={values.campaignType}>\n            <Grid container spacing={1.5} direction=\"row\" columns={10}>\n              {['Single Task', 'Voting and Winner', 'Question and Answer', 'Watch Ad', 'Campaign'].map((type) => {\n                const isSelected = values.campaignType === type;\n                return (\n                  <Grid item xs={5} md={2} key={type}>\n                    <Card\n                      variant={isSelected ? 'elevation' : 'outlined'}\n                      sx={{\n                        ...(isSelected && {\n                          border: `solid 2px ${theme.palette.primary.main}`,\n                        }),\n                      }}\n                    >\n                      <CardMedia\n                        sx={{ height: 140 }}\n                        image=\"/static/mock-images/products/product_1.jpg\"\n                        title=\"Contemplative Reptile\"\n                      />\n                      <CardContent>{type}</CardContent>\n                      <CardActions>\n                        <FormControlLabel\n                          label=\"\"\n                          value={type}\n                          control={<Radio sx={{ display: 'none' }} />}\n                          sx={{\n                            top: 0,\n                            margin: 0,\n                            width: '100%',\n                            height: '100%',\n                            position: 'absolute',\n                          }}\n                        />\n                      </CardActions>\n                    </Card>\n                  </Grid>\n                );\n              })}\n            </Grid>\n          </RadioGroup>\n        </Stack>\n      </Grid>\n    </Grid>\n  );\n};\n\nCampaignTypeForm.propTypes = {\n  formik: PropTypes.object,\n};\n\nexport default CampaignTypeForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  FormControlLabel,\n  Grid,\n  Stack,\n  Switch,\n  TextField,\n  Typography,\n} from '@material-ui/core';\n\nconst TaskAndRewardsForm = ({ formik }) => {\n  const { values, errors, touched, getFieldProps } = formik;\n  return (\n    <Grid container spacing={3}>\n      <Grid item md={12}>\n        <Stack spacing={3}>\n          <Card>\n            <CardHeader title=\"Task Detail\" />\n            <CardContent>\n              <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 3, sm: 2 }}>\n                <TextField\n                  fullWidth\n                  size=\"small\"\n                  label=\"Task Name\"\n                  {...getFieldProps('name')}\n                  error={Boolean(touched.name && errors.name)}\n                  helperText={touched.name && errors.name}\n                />\n                <TextField\n                  fullWidth\n                  size=\"small\"\n                  label=\"Task Type\"\n                  {...getFieldProps('taskType')}\n                  error={Boolean(touched.taskType && errors.taskType)}\n                  helperText={touched.taskType && errors.taskType}\n                />\n              </Stack>\n            </CardContent>\n          </Card>\n\n          <Card>\n            <CardHeader title=\"Rewards\" />\n            <CardContent>\n              <Stack spacing={3}>\n                <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 3, sm: 2 }}>\n                  <TextField\n                    fullWidth\n                    size=\"small\"\n                    label=\"Total Budget\"\n                    type=\"number\"\n                    {...getFieldProps('totalBudget')}\n                    error={Boolean(touched.totalBudget && errors.totalBudget)}\n                    helperText={touched.totalBudget && errors.totalBudget}\n                  />\n                  <TextField\n                    fullWidth\n                    size=\"small\"\n                    label=\"Per User\"\n                    {...getFieldProps('perUser')}\n                    error={Boolean(touched.perUser && errors.perUser)}\n                    helperText={touched.perUser && errors.perUser}\n                  />\n                </Stack>\n\n                <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 3, sm: 2 }}>\n                  <TextField\n                    fullWidth\n                    size=\"small\"\n                    label=\"Star Per User\"\n                    type=\"number\"\n                    {...getFieldProps('starPerUser')}\n                    error={Boolean(touched.starPerUser && errors.starPerUser)}\n                    helperText={touched.starPerUser && errors.starPerUser}\n                  />\n                  <TextField\n                    fullWidth\n                    size=\"small\"\n                    label=\"Continue After Budget\"\n                    {...getFieldProps('continueAfterBudget')}\n                    error={Boolean(touched.continueAfterBudget && errors.continueAfterBudget)}\n                    helperText={touched.continueAfterBudget && errors.continueAfterBudget}\n                  />\n                </Stack>\n              </Stack>\n            </CardContent>\n          </Card>\n\n          <Card>\n            <CardHeader title=\"Audience\" />\n            <CardContent>\n              <Stack alignItems=\"center\" direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 3, sm: 2 }}>\n                <TextField\n                  fullWidth\n                  size=\"small\"\n                  label=\"Select Tier\"\n                  {...getFieldProps('tier')}\n                  error={Boolean(touched.tier && errors.tier)}\n                  helperText={touched.tier && errors.tier}\n                />\n                <Stack direction=\"row\" justifyContent=\"space-around\">\n                  <Typography variant=\"caption\">\n                    In case of public, the task goes to the activity feed and all users can see\n                  </Typography>\n                  <FormControlLabel\n                    labelPlacement=\"start\"\n                    control={<Switch {...getFieldProps('isPublic')} checked={values.isPublic} />}\n                    label={<Typography variant=\"subtitle2\">Public</Typography>}\n                    sx={{ mx: 0, width: 1, justifyContent: 'center' }}\n                  />\n                </Stack>\n              </Stack>\n            </CardContent>\n          </Card>\n        </Stack>\n      </Grid>\n    </Grid>\n  );\n};\n\nTaskAndRewardsForm.propTypes = {\n  formik: PropTypes.object,\n};\n\nexport default TaskAndRewardsForm;\n","import React, { useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { FieldArray, getIn } from 'formik';\nimport { isValid as isValidDate } from 'date-fns';\n\nimport { Add as AddIcon, Delete as DeleteIcon } from '@material-ui/icons';\nimport { styled } from '@material-ui/core/styles';\nimport { DateTimePicker } from '@material-ui/lab';\nimport {\n  Autocomplete,\n  Avatar,\n  Button,\n  Card,\n  Chip,\n  FormHelperText,\n  Grid,\n  IconButton,\n  Stack,\n  TextField,\n  Typography,\n} from '@material-ui/core';\n\nimport { UploadSingleFile } from '../upload';\n\nconst LabelStyle = styled(Typography)(({ theme }) => ({\n  ...theme.typography.subtitle2,\n  color: theme.palette.text.secondary,\n  marginBottom: theme.spacing(1),\n}));\n\nconst TaskDetailForm = ({ formik }) => {\n  const { values, errors, touched, getFieldProps, setFieldValue } = formik;\n\n  const handleCoverDrop = useCallback(\n    (acceptedFiles) => {\n      const file = acceptedFiles[0];\n      if (file) {\n        setFieldValue('coverUrl', {\n          ...file,\n          preview: URL.createObjectURL(file),\n        });\n      }\n    },\n    [setFieldValue]\n  );\n\n  return (\n    <Grid container spacing={3}>\n      <Grid item xs={12} md={8}>\n        <Stack spacing={3}>\n          <Stack>\n            <LabelStyle>Header Image</LabelStyle>\n            <UploadSingleFile\n              maxSize={3145728}\n              accept=\"image/*\"\n              file={values.coverUrl}\n              onDrop={handleCoverDrop}\n              error={Boolean(touched.coverUrl && errors.coverUrl)}\n            />\n            {touched.coverUrl && errors.coverUrl && (\n              <FormHelperText error sx={{ px: 2 }}>\n                {touched.coverUrl && errors.coverUrl}\n              </FormHelperText>\n            )}\n          </Stack>\n\n          <Stack>\n            <Stack direction=\"row\" justifyContent=\"space-between\" alignItems=\"center\">\n              <LabelStyle>Bonus Reward & Benefits</LabelStyle>\n              <Stack direction=\"row\" spacing={1} alignItems=\"center\">\n                <Button variant=\"contained\">Add New</Button>\n                <Button variant=\"contained\">Select More</Button>\n              </Stack>\n            </Stack>\n            <Stack direction=\"row\" spacing={1}>\n              {[1, 2, 3, 4, 5, 6].map((item, index) => (\n                <Avatar\n                  key={item + index}\n                  alt=\"bonus&rewards\"\n                  src=\"/static/mock-images/products/product_1.jpg\"\n                  sx={{ width: 64, height: 64 }}\n                />\n              ))}\n            </Stack>\n          </Stack>\n\n          <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 3, sm: 2 }}>\n            <TextField\n              fullWidth\n              multiline\n              rows={3}\n              size=\"small\"\n              label=\"Description\"\n              {...getFieldProps('description')}\n              error={Boolean(touched.description && errors.description)}\n              helperText={touched.description && errors.description}\n            />\n          </Stack>\n\n          <FieldArray\n            name=\"doList\"\n            render={(arrHelper) => (\n              <>\n                {values.doList.map((item, index) => {\n                  const fieldName = `doList.${index}`;\n                  return (\n                    <Stack key={index} direction=\"row\" spacing={1}>\n                      <TextField\n                        fullWidth\n                        size=\"small\"\n                        label={`Do ${index + 1}`}\n                        {...getFieldProps(fieldName)}\n                        error={Boolean(getIn(touched, fieldName) && getIn(errors, fieldName))}\n                        helperText={getIn(touched, fieldName) && getIn(errors, fieldName)}\n                      />\n                      {index === values.doList.length - 1 ? (\n                        <IconButton color=\"primary\" onClick={() => arrHelper.push('')}>\n                          <AddIcon />\n                        </IconButton>\n                      ) : (\n                        <IconButton color=\"error\" onClick={() => arrHelper.remove(index)}>\n                          <DeleteIcon />\n                        </IconButton>\n                      )}\n                    </Stack>\n                  );\n                })}\n              </>\n            )}\n          />\n\n          <FieldArray\n            name=\"dontList\"\n            render={(arrHelper) => (\n              <>\n                {values.dontList.map((item, index) => {\n                  const fieldName = `dontList.${index}`;\n                  return (\n                    <Stack key={index} direction=\"row\" spacing={1}>\n                      <TextField\n                        fullWidth\n                        size=\"small\"\n                        label={`Don't ${index + 1}`}\n                        {...getFieldProps(fieldName)}\n                        error={Boolean(getIn(touched, fieldName) && getIn(errors, fieldName))}\n                        helperText={getIn(touched, fieldName) && getIn(errors, fieldName)}\n                      />\n                      {index === values.dontList.length - 1 ? (\n                        <IconButton color=\"primary\" onClick={() => arrHelper.push('')}>\n                          <AddIcon />\n                        </IconButton>\n                      ) : (\n                        <IconButton color=\"error\" onClick={() => arrHelper.remove(index)}>\n                          <DeleteIcon />\n                        </IconButton>\n                      )}\n                    </Stack>\n                  );\n                })}\n              </>\n            )}\n          />\n\n          <FieldArray\n            name=\"igCaptionQuestions\"\n            render={(arrHelper) => (\n              <>\n                {values.igCaptionQuestions.map((item, index) => {\n                  const fieldName = `igCaptionQuestions.${index}`;\n                  return (\n                    <Stack key={index} direction=\"row\" spacing={1}>\n                      <TextField\n                        fullWidth\n                        size=\"small\"\n                        label={`Instagram Caption Question ${index + 1}`}\n                        {...getFieldProps(fieldName)}\n                        error={Boolean(getIn(touched, fieldName) && getIn(errors, fieldName))}\n                        helperText={getIn(touched, fieldName) && getIn(errors, fieldName)}\n                      />\n                      {index === values.igCaptionQuestions.length - 1 ? (\n                        <IconButton color=\"primary\" onClick={() => arrHelper.push('')}>\n                          <AddIcon />\n                        </IconButton>\n                      ) : (\n                        <IconButton color=\"error\" onClick={() => arrHelper.remove(index)}>\n                          <DeleteIcon />\n                        </IconButton>\n                      )}\n                    </Stack>\n                  );\n                })}\n              </>\n            )}\n          />\n\n          <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 3, sm: 2 }}>\n            <TextField\n              fullWidth\n              size=\"small\"\n              label=\"Number of photo required\"\n              type=\"number\"\n              {...getFieldProps('noOfPhotoRequired')}\n              error={Boolean(touched.noOfPhotoRequired && errors.noOfPhotoRequired)}\n              helperText={touched.noOfPhotoRequired && errors.noOfPhotoRequired}\n            />\n            <TextField\n              fullWidth\n              size=\"small\"\n              label=\"Number of video required\"\n              type=\"number\"\n              {...getFieldProps('noOfVideoRequired')}\n              error={Boolean(touched.noOfVideoRequired && errors.noOfVideoRequired)}\n              helperText={touched.noOfVideoRequired && errors.noOfVideoRequired}\n            />\n          </Stack>\n\n          <Autocomplete\n            multiple\n            freeSolo\n            value={values.hashtags}\n            onChange={(event, newValue) => {\n              setFieldValue('hashtags', newValue);\n            }}\n            options={[]}\n            renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n                <Chip key={option} size=\"small\" label={option} {...getTagProps({ index })} />\n              ))\n            }\n            renderInput={(params) => <TextField {...params} label=\"Hashtags\" />}\n          />\n\n          <Autocomplete\n            multiple\n            freeSolo\n            value={values.mentions}\n            onChange={(event, newValue) => {\n              setFieldValue('mentions', newValue);\n            }}\n            options={[]}\n            renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n                <Chip key={option} size=\"small\" label={option} {...getTagProps({ index })} />\n              ))\n            }\n            renderInput={(params) => <TextField {...params} label=\"Mentions\" />}\n          />\n\n          <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 3, sm: 2 }}>\n            <DateTimePicker\n              label=\"Start date\"\n              value={values.startDate}\n              inputFormat=\"dd/MM/yyyy hh:mm a\"\n              onChange={(date) => (isValidDate(date) ? setFieldValue('startDate', date) : null)}\n              renderInput={(params) => (\n                <TextField\n                  {...params}\n                  fullWidth\n                  error={Boolean(touched.startDate && errors.startDate)}\n                  helperText={touched.startDate && errors.startDate}\n                  sx={{ mb: 3 }}\n                />\n              )}\n            />\n            <DateTimePicker\n              label=\"End date\"\n              value={values.endDate}\n              inputFormat=\"dd/MM/yyyy hh:mm a\"\n              onChange={(date) => (isValidDate(date) ? setFieldValue('endDate', date) : null)}\n              renderInput={(params) => (\n                <TextField\n                  {...params}\n                  fullWidth\n                  error={Boolean(touched.endDate && errors.endDate)}\n                  helperText={touched.endDate && errors.endDate}\n                  sx={{ mb: 3 }}\n                />\n              )}\n            />\n          </Stack>\n        </Stack>\n      </Grid>\n      <Grid item xs={12} md={4} sx={{ height: 'auto' }}>\n        <Card sx={{ p: 3, height: '100%' }}>Later Phase</Card>\n      </Grid>\n    </Grid>\n  );\n};\n\nTaskDetailForm.propTypes = {\n  formik: PropTypes.object,\n};\n\nexport default TaskDetailForm;\n","import * as Yup from 'yup';\nimport PropTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport { useSnackbar } from 'notistack5';\nimport { useNavigate } from 'react-router-dom';\nimport { Form, FormikProvider, useFormik } from 'formik';\nimport { Icon } from '@iconify/react';\nimport CheckmarkFill from '@iconify/icons-eva/checkmark-fill';\n// material\nimport { withStyles } from '@material-ui/styles';\nimport { LoadingButton } from '@material-ui/lab';\nimport { Box, Card, Grid, Stack, Stepper, Step, StepLabel, StepConnector, Button } from '@material-ui/core';\n\nimport { PATH_DASHBOARD } from '../../routes/paths';\n\nimport { nameRegExp } from '../../utils/constants/regexs';\n// components\nimport CampaignTypeForm from './CampaignTypeForm';\nimport TaskAndRewardsForm from './TaskAndRewardsForm';\nimport TaskDetailForm from './TaskDetailForm';\n\n// ----------------------------------------------------------------------\n\nconst STEPS = ['Campaign Type', 'Task & Rewards', 'Task Detail'];\n\nconst QontoConnector = withStyles((theme) => ({\n  alternativeLabel: {\n    top: 10,\n    left: 'calc(-50% + 20px)',\n    right: 'calc(50% + 20px)',\n  },\n  active: {\n    '& $line': { borderColor: theme.palette.primary.main },\n  },\n  completed: {\n    '& $line': { borderColor: theme.palette.primary.main },\n  },\n  line: {\n    borderTopWidth: 2,\n    borderColor: theme.palette.divider,\n  },\n}))(StepConnector);\n\nQontoStepIcon.propTypes = {\n  active: PropTypes.bool,\n  completed: PropTypes.bool,\n};\n\nfunction QontoStepIcon({ active, completed }) {\n  return (\n    <Box\n      sx={{\n        zIndex: 9,\n        width: 24,\n        height: 24,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        color: active ? 'primary.main' : 'divider',\n        bgcolor: 'background.default',\n      }}\n    >\n      {completed ? (\n        <Box component={Icon} icon={CheckmarkFill} sx={{ zIndex: 1, width: 20, height: 20, color: 'primary.main' }} />\n      ) : (\n        <Box\n          sx={{\n            width: 8,\n            height: 8,\n            borderRadius: '50%',\n            backgroundColor: 'currentColor',\n          }}\n        />\n      )}\n    </Box>\n  );\n}\n\nTaskNewForm.propTypes = {\n  isEdit: PropTypes.bool,\n  currentTask: PropTypes.object,\n};\n\nfunction TaskNewForm({ isEdit, currentTask }) {\n  const navigate = useNavigate();\n  const { enqueueSnackbar } = useSnackbar();\n  const [activeStep, setActiveStep] = useState(0);\n\n  const CampaignTypeSchema = Yup.object().shape({\n    brand: Yup.string().matches(nameRegExp, 'Cannot include special characters.').required('Brand is required'),\n    campaignType: Yup.string(),\n  });\n\n  const TaskAndRewardsSchema = Yup.object().shape({\n    name: Yup.string().matches(nameRegExp, 'Cannot include special characters.').required('Name is required'),\n    taskType: Yup.string(),\n    totalBudget: Yup.number(),\n    perUser: Yup.string(),\n    starPerUser: Yup.number(),\n    continueAfterBudget: Yup.string(),\n    tier: Yup.string(),\n    isPublic: Yup.boolean().required('Status is required'),\n  });\n\n  const TaskDetailSchema = Yup.object().shape({\n    headerImage: Yup.mixed(),\n    description: Yup.string(),\n    doList: Yup.array().of(Yup.string()),\n    dontList: Yup.array().of(Yup.string()),\n    igCaptionQuestions: Yup.array().of(Yup.string()),\n    noOfPhotoRequired: Yup.number(),\n    noOfVideoRequired: Yup.number(),\n    hashtags: Yup.array().of(Yup.string()),\n    mentions: Yup.array().of(Yup.string()),\n    startDate: Yup.date().nullable(true),\n    endDate: Yup.date().when('startDate', (startDate, schema) =>\n      startDate ? schema.min(startDate, 'End date must be later than start date') : schema.nullable(true)\n    ),\n  });\n\n  const VALIDATION_SCHEMAS = [CampaignTypeSchema, TaskAndRewardsSchema, TaskDetailSchema];\n\n  const isLastStep = () => activeStep === STEPS.length - 1;\n\n  const handlePrevStep = () => setActiveStep((prev) => prev - 1);\n\n  const handleNextStep = () => setActiveStep((prev) => prev + 1);\n\n  const formik = useFormik({\n    enableReinitialize: true,\n    initialValues: {\n      brand: currentTask?.brand || '',\n      campaignType: currentTask?.type || '',\n      name: currentTask?.name || '',\n      taskType: currentTask?.taskType || '',\n      totalBudget: currentTask?.totalBudget || undefined,\n      perUser: currentTask?.perUser || '',\n      starPerUser: currentTask?.starPerUser || undefined,\n      continueAfterBudget: currentTask?.continueAfterBudget || '',\n      tier: currentTask?.tier || '',\n      isPublic: currentTask?.isPublic || false,\n      doList: currentTask?.doList || [''],\n      dontList: currentTask?.dontList || [''],\n      igCaptionQuestions: currentTask?.igCaptionQuestions || [''],\n      noOfPhotoRequired: currentTask?.noOfPhotoRequired || undefined,\n      noOfVideoRequired: currentTask?.noOfVideoRequired || undefined,\n      hashtags: currentTask?.hashtags || [],\n      mentions: currentTask?.mentions || [],\n      startDate: currentTask?.startDate ? new Date(currentTask.startDate) : null,\n      endDate: currentTask?.endDate ? new Date(currentTask.endDate) : null,\n    },\n    validationSchema: VALIDATION_SCHEMAS[activeStep],\n    onSubmit: async (values, { setSubmitting, resetForm, setErrors }) => {\n      if (isLastStep()) {\n        try {\n          alert(JSON.stringify(values));\n          resetForm();\n          setSubmitting(false);\n          enqueueSnackbar(!isEdit ? 'Create success' : 'Update success', { variant: 'success' });\n          navigate(PATH_DASHBOARD.task.list);\n        } catch (error) {\n          console.error(error);\n          setSubmitting(false);\n          setErrors(error);\n        }\n      } else {\n        handleNextStep();\n      }\n    },\n  });\n\n  const { errors, values, handleSubmit, isSubmitting } = formik;\n\n  console.log('Active Step: ', activeStep);\n  console.log('*** ', values, errors);\n\n  return (\n    <FormikProvider value={formik}>\n      <Form noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\n        <Grid container justifyContent=\"center\">\n          <Grid item xs={12} md={8} sx={{ mb: 5 }}>\n            <Stepper alternativeLabel activeStep={activeStep} connector={<QontoConnector />}>\n              {STEPS.map((label) => (\n                <Step key={label}>\n                  <StepLabel\n                    StepIconComponent={QontoStepIcon}\n                    sx={{\n                      '& .MuiStepLabel-label': {\n                        typography: 'subtitle2',\n                        color: 'text.disabled',\n                      },\n                    }}\n                  >\n                    {label}\n                  </StepLabel>\n                </Step>\n              ))}\n            </Stepper>\n          </Grid>\n        </Grid>\n\n        <Card sx={{ p: 3 }}>\n          <Stack spacing={3}>\n            {activeStep === 0 && <CampaignTypeForm formik={formik} />}\n            {activeStep === 1 && <TaskAndRewardsForm formik={formik} />}\n            {activeStep === 2 && <TaskDetailForm formik={formik} />}\n            <Box sx={{ mt: 3, display: 'flex', justifyContent: 'flex-end' }}>\n              {activeStep !== 0 && (\n                <Button\n                  sx={{ mr: 2 }}\n                  variant=\"outlined\"\n                  onClick={isLastStep() ? () => console.log('Draft Clicked') : handlePrevStep}\n                >\n                  {isLastStep() ? 'Draft' : 'Back'}\n                </Button>\n              )}\n              <LoadingButton type=\"submit\" variant=\"contained\" loading={isSubmitting}>\n                {isLastStep() ? 'Setup Complete' : 'Next'}\n              </LoadingButton>\n            </Box>\n          </Stack>\n        </Card>\n      </Form>\n    </FormikProvider>\n  );\n}\n\nexport default TaskNewForm;\n","import { useParams, useLocation } from 'react-router-dom';\n// material\nimport { Container } from '@material-ui/core';\n// routes\nimport { PATH_DASHBOARD } from '../routes/paths';\n// hooks\nimport useSettings from '../hooks/useSettings';\n// components\nimport Page from '../components/Page';\nimport HeaderBreadcrumbs from '../components/HeaderBreadcrumbs';\nimport TaskNewForm from '../components/task/TaskNewForm';\n\n// ----------------------------------------------------------------------\n\nfunction TaskCreate() {\n  const { themeStretch } = useSettings();\n  const { pathname } = useLocation();\n  const { name } = useParams();\n  const isEdit = pathname.includes('edit');\n\n  const currentTask = {};\n\n  return (\n    <Page title=\"Task: Create a new task\">\n      <Container maxWidth={themeStretch ? false : 'lg'}>\n        <HeaderBreadcrumbs\n          heading={!isEdit ? 'Create Task' : 'Edit Task'}\n          links={[{ name: 'Task', href: PATH_DASHBOARD.task.list }, { name: !isEdit ? 'Create Task' : name }]}\n        />\n        <TaskNewForm isEdit={isEdit} currentTask={currentTask} />\n      </Container>\n    </Page>\n  );\n}\n\nexport default TaskCreate;\n"],"sourceRoot":""}