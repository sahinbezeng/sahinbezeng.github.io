{"version":3,"sources":["components/reward/RewardNewForm.js","pages/RewardCreate.js","utils/formatNumber.js","components/HeaderBreadcrumbs.js","../node_modules/@iconify/icons-eva/plus-fill.js","utils/constants/regexs.js","components/upload/UploadMultiFile.js","components/upload/UploadSingleFile.js","components/upload/UploadAvatar.js","../node_modules/@material-ui/core/CardHeader/cardHeaderClasses.js","../node_modules/@material-ui/core/CardHeader/CardHeader.js","../node_modules/@material-ui/icons/esm/Delete.js","../node_modules/@material-ui/icons/esm/Save.js","utils/mockImages.js"],"names":["REWARD_TYPES","tokenValues","initialContent","title","frequency","numberOfKeys","numberOfCoins","numberOfStars","numberOfBoosters","NewRewardSchema","Yup","shape","avatarUrl","required","name","matches","nameRegExp","type","location","contents","of","min","max","test","this","options","context","reduce","acc","content","RewardNewForm","isEdit","currentReward","navigate","useNavigate","enqueueSnackbar","useSnackbar","formik","useFormik","enableReinitialize","initialValues","validate","values","a","validateYupSchema","yupToFormErrors","onSubmit","setSubmitting","resetForm","setErrors","alert","JSON","stringify","variant","PATH_DASHBOARD","reward","list","error","console","errors","touched","handleSubmit","isSubmitting","setFieldValue","getFieldProps","handleAvatarDrop","useCallback","acceptedFiles","file","preview","URL","createObjectURL","value","noValidate","autoComplete","Grid","container","spacing","item","md","xs","Card","sx","height","CardHeader","titleTypographyProps","CardContent","Box","accept","maxSize","onDrop","Boolean","caption","Typography","mt","mx","display","textAlign","color","fData","FormHelperText","px","Stack","TextField","fullWidth","size","label","helperText","direction","select","placeholder","SelectProps","native","map","option","Autocomplete","freeSolo","onChange","event","newValue","renderInput","params","totalValue","render","contentsArrayHelpers","action","Button","startIcon","icon","PlusFill","onClick","push","contentIndex","fieldNamePrefix","getIn","InputProps","endAdornment","InputAdornment","position","IconButton","remove","Delete","justifyContent","LoadingButton","loading","endIcon","Save","RewardCreate","themeStretch","useSettings","pathname","useLocation","useParams","includes","mockImgProduct","Page","Container","maxWidth","HeaderBreadcrumbs","heading","links","href","root","fShortenNumber","number","replace","numeral","format","moreLink","other","mb","alignItems","flexGrow","gutterBottom","flexShrink","isString","target","noWrap","exports","__esModule","default","phoneRegExp","addressRegExp","styled","theme","outline","flexDirection","padding","borderRadius","backgroundColor","palette","background","neutral","border","grey","opacity","cursor","breakpoints","up","DropZoneStyle","overflow","transition","transitions","create","UploadSingleFile","useDropzone","multiple","getRootProps","getInputProps","isDragActive","isDragReject","fileRejections","ShowRejectionItems","Paper","py","borderColor","bgcolor","alpha","main","path","my","e","component","message","code","width","p","ml","textDecoration","alt","src","top","objectFit","length","RootStyle","margin","zIndex","PlaceholderStyle","text","secondary","easing","easeInOut","duration","shorter","UploadAvatar","className","Icon","roundAddAPhoto","getCardHeaderUtilityClass","slot","generateUtilityClass","cardHeaderClasses","generateUtilityClasses","_excluded","CardHeaderRoot","overridesResolver","props","styles","_extends","subheader","CardHeaderAvatar","avatar","flex","marginRight","CardHeaderAction","alignSelf","marginTop","marginBottom","CardHeaderContent","React","inProps","ref","useThemeProps","disableTypography","subheaderProp","subheaderTypographyProps","titleProp","_objectWithoutPropertiesLoose","styleProps","classes","composeClasses","useUtilityClasses","_jsx","children","_jsxs","clsx","as","createSvgIcon","d","index"],"mappings":"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","file":"static/js/14.abe7d71a.chunk.js","sourcesContent":["import * as Yup from 'yup';\nimport PropTypes from 'prop-types';\nimport React, { useCallback } from 'react';\nimport { useSnackbar } from 'notistack5';\nimport { useNavigate } from 'react-router-dom';\nimport { FieldArray, Form, FormikProvider, getIn, useFormik, validateYupSchema, yupToFormErrors } from 'formik';\nimport { Icon } from '@iconify/react';\nimport PlusFill from '@iconify/icons-eva/plus-fill';\n// material\nimport { Delete as DeleteIcon, Save as SaveIcon } from '@material-ui/icons';\nimport { LoadingButton } from '@material-ui/lab';\nimport {\n  Box,\n  Card,\n  Grid,\n  Stack,\n  TextField,\n  Typography,\n  FormHelperText,\n  IconButton,\n  CardHeader,\n  CardContent,\n  Button,\n  Autocomplete,\n  InputAdornment,\n} from '@material-ui/core';\n// utils\nimport { fData } from '../../utils/formatNumber';\n// routes\nimport { PATH_DASHBOARD } from '../../routes/paths';\n// utils\nimport { nameRegExp } from '../../utils/constants/regexs';\n// components\nimport { UploadAvatar } from '../upload';\n\n// ----------------------------------------------------------------------\n\nconst REWARD_TYPES = ['Easter Egg', 'Present', 'Chest', 'Lottery Wheel'];\nconst tokenValues = {\n  tokenValue: 44,\n  starValueInTokens: 2,\n  keyValueInTokens: 10,\n  boosterValueInTokens: 20,\n  coinValueInTokens: 1,\n};\n\nconst initialContent = {\n  title: 'Basic',\n  frequency: 50,\n  numberOfKeys: 5,\n  numberOfCoins: 5,\n  numberOfStars: 5,\n  numberOfBoosters: 5,\n};\n\nconst NewRewardSchema = Yup.object().shape({\n  avatarUrl: Yup.mixed().required('Avatar is required'),\n  name: Yup.string().matches(nameRegExp, 'Cannot include special characters.').required('Name is required'),\n  type: Yup.string(),\n  location: Yup.string(),\n  contents: Yup.array().of(\n    Yup.object().shape({\n      title: Yup.string(),\n      frequency: Yup.number()\n        .min(1)\n        .max(100)\n        .test('total frequency test', 'total frequencies must be exactly 100%', function validateFrequency() {\n          const {\n            options: {\n              context: { contents },\n            },\n          } = this;\n          const total = contents.reduce((acc, content) => acc + content.frequency, 0);\n          return total === 100;\n        }),\n      numberOfKeys: Yup.number(),\n      numberOfCoins: Yup.number(),\n      numberOfStars: Yup.number(),\n      numberOfBoosters: Yup.number(),\n    })\n  ),\n});\n\nRewardNewForm.propTypes = {\n  isEdit: PropTypes.bool,\n  currentReward: PropTypes.object,\n};\n\nexport default function RewardNewForm({ isEdit, currentReward }) {\n  const navigate = useNavigate();\n  const { enqueueSnackbar } = useSnackbar();\n\n  const formik = useFormik({\n    enableReinitialize: true,\n    initialValues: {\n      avatarUrl: currentReward?.avatarUrl || null,\n      name: currentReward?.name || 'Reward Name',\n      type: currentReward?.type || 'Easter Egg',\n      location: currentReward?.location || 'Unassigned',\n      contents: currentReward?.contents || [{ ...initialContent }],\n    },\n    // validationSchema: NewRewardSchema,\n    validate: async (values) => {\n      try {\n        await validateYupSchema(values, NewRewardSchema, true, values);\n      } catch (err) {\n        return yupToFormErrors(err);\n      }\n      return {};\n    },\n    onSubmit: async (values, { setSubmitting, resetForm, setErrors }) => {\n      alert(JSON.stringify(values));\n      try {\n        resetForm();\n        setSubmitting(false);\n        enqueueSnackbar(!isEdit ? 'Create success' : 'Update success', { variant: 'success' });\n        navigate(PATH_DASHBOARD.reward.list);\n      } catch (error) {\n        console.error(error);\n        setSubmitting(false);\n        setErrors(error);\n      }\n    },\n  });\n\n  const { errors, values, touched, handleSubmit, isSubmitting, setFieldValue, getFieldProps } = formik;\n\n  const handleAvatarDrop = useCallback(\n    (acceptedFiles) => {\n      const file = acceptedFiles[0];\n      if (file) {\n        setFieldValue('avatarUrl', {\n          ...file,\n          preview: URL.createObjectURL(file),\n        });\n      }\n    },\n    [setFieldValue]\n  );\n\n  const calculateAverageValue = () =>\n    values.contents.reduce((acc, content) => {\n      const totalValue =\n        tokenValues.keyValueInTokens * content.numberOfKeys +\n        tokenValues.starValueInTokens * content.numberOfStars +\n        tokenValues.coinValueInTokens * content.numberOfCoins +\n        tokenValues.boosterValueInTokens * content.numberOfBoosters;\n\n      return acc + content.frequency * totalValue;\n    }, 0);\n\n  return (\n    <FormikProvider value={formik}>\n      <Form noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\n        <Grid container spacing={3}>\n          <Grid item md={12}>\n            <Grid container spacing={3}>\n              <Grid item xs={12} md={4}>\n                <Card sx={{ height: '100%' }}>\n                  <CardHeader title=\"Reward Image/Icon\" titleTypographyProps={{ variant: 'subtitle2' }} />\n                  <CardContent>\n                    <Box>\n                      <UploadAvatar\n                        accept=\"image/*\"\n                        file={values.avatarUrl}\n                        maxSize={3145728}\n                        onDrop={handleAvatarDrop}\n                        error={Boolean(touched.avatarUrl && errors.avatarUrl)}\n                        caption={\n                          <Typography\n                            variant=\"caption\"\n                            sx={{\n                              mt: 2,\n                              mx: 'auto',\n                              display: 'block',\n                              textAlign: 'center',\n                              color: 'text.secondary',\n                            }}\n                          >\n                            Allowed *.jpeg, *.jpg, *.png, *.gif\n                            <br /> max size of {fData(3145728)}\n                          </Typography>\n                        }\n                      />\n                      <FormHelperText error sx={{ px: 2, textAlign: 'center' }}>\n                        {touched.avatarUrl && errors.avatarUrl}\n                      </FormHelperText>\n                    </Box>\n                  </CardContent>\n                </Card>\n              </Grid>\n              <Grid item xs={12} md={8}>\n                <Card sx={{ height: '100%' }}>\n                  <CardContent>\n                    <Stack spacing={2}>\n                      <TextField\n                        fullWidth\n                        size=\"small\"\n                        label=\"Name\"\n                        {...getFieldProps('name')}\n                        error={Boolean(touched.name && errors.name)}\n                        helperText={touched.name && errors.name}\n                      />\n\n                      <Stack direction=\"row\" spacing={2}>\n                        <TextField\n                          select\n                          fullWidth\n                          size=\"small\"\n                          label=\"Reward Type\"\n                          placeholder=\"Reward Type\"\n                          {...getFieldProps('type')}\n                          SelectProps={{ native: true }}\n                          error={Boolean(touched.type && errors.type)}\n                          helperText={touched.type && errors.type}\n                        >\n                          {REWARD_TYPES.map((option) => (\n                            <option key={option} value={option}>\n                              {option}\n                            </option>\n                          ))}\n                        </TextField>\n\n                        <Autocomplete\n                          fullWidth\n                          size=\"small\"\n                          freeSolo\n                          value={values.location}\n                          onChange={(event, newValue) => {\n                            setFieldValue('location', newValue);\n                          }}\n                          options={['Default', 'Referral', 'Unassigned']}\n                          renderInput={(params) => (\n                            <TextField\n                              {...params}\n                              label=\"Location\"\n                              error={Boolean(touched.location && errors.location)}\n                              helperText={\n                                (touched.location && errors.location) || 'Type and enter to add new location.'\n                              }\n                            />\n                          )}\n                        />\n\n                        {/* <TextField\n                          select\n                          fullWidth\n                          size=\"small\"\n                          label=\"Location\"\n                          placeholder=\"Location\"\n                          {...getFieldProps('location')}\n                          SelectProps={{ native: true }}\n                          error={Boolean(touched.location && errors.location)}\n                          helperText={touched.location && errors.location}\n                        >\n                          {['Default', 'Unassigned'].map((option) => (\n                            <option key={option} value={option}>\n                              {option}\n                            </option>\n                          ))}\n                        </TextField> */}\n                      </Stack>\n\n                      <Typography>\n                        Average value of single selection in this set = {calculateAverageValue()} tokens\n                      </Typography>\n                    </Stack>\n                  </CardContent>\n                </Card>\n              </Grid>\n            </Grid>\n          </Grid>\n\n          <Grid item md={12}>\n            <FieldArray\n              name=\"contents\"\n              render={(contentsArrayHelpers) => (\n                <Card>\n                  <CardHeader\n                    title=\"Contents\"\n                    action={\n                      <Button\n                        variant=\"contained\"\n                        startIcon={<Icon icon={PlusFill} />}\n                        onClick={() => contentsArrayHelpers.push(initialContent)}\n                      >\n                        Add Option\n                      </Button>\n                    }\n                  />\n                  <CardContent>\n                    <Grid container spacing={1}>\n                      {values.contents.map((content, contentIndex) => {\n                        const fieldNamePrefix = `contents.${contentIndex}`;\n                        const totalValue =\n                          tokenValues.keyValueInTokens * content.numberOfKeys +\n                          tokenValues.starValueInTokens * content.numberOfStars +\n                          tokenValues.coinValueInTokens * content.numberOfCoins +\n                          tokenValues.boosterValueInTokens * content.numberOfBoosters;\n                        return (\n                          <Grid key={contentIndex} item xs={12} md={3}>\n                            <Card>\n                              <CardContent>\n                                <Stack spacing={1}>\n                                  <TextField\n                                    fullWidth\n                                    variant=\"standard\"\n                                    size=\"small\"\n                                    label=\"Title\"\n                                    {...getFieldProps(`${fieldNamePrefix}.title`)}\n                                    error={Boolean(\n                                      getIn(touched, `${fieldNamePrefix}.title`) &&\n                                        getIn(errors, `${fieldNamePrefix}.title`)\n                                    )}\n                                    helperText={\n                                      getIn(touched, `${fieldNamePrefix}.title`) &&\n                                      getIn(errors, `${fieldNamePrefix}.title`)\n                                    }\n                                  />\n                                  <TextField\n                                    fullWidth\n                                    type=\"number\"\n                                    variant=\"standard\"\n                                    size=\"small\"\n                                    label=\"Frequency\"\n                                    {...getFieldProps(`${fieldNamePrefix}.frequency`)}\n                                    error={Boolean(\n                                      getIn(touched, `${fieldNamePrefix}.frequency`) &&\n                                        getIn(errors, `${fieldNamePrefix}.frequency`)\n                                    )}\n                                    helperText={\n                                      getIn(touched, `${fieldNamePrefix}.frequency`) &&\n                                      getIn(errors, `${fieldNamePrefix}.frequency`)\n                                    }\n                                  />\n                                  <TextField\n                                    fullWidth\n                                    type=\"number\"\n                                    variant=\"standard\"\n                                    size=\"small\"\n                                    label=\"Number of Keys\"\n                                    InputProps={{\n                                      endAdornment: (\n                                        <InputAdornment position=\"end\">\n                                          = {tokenValues.keyValueInTokens * content.numberOfKeys} tokens\n                                        </InputAdornment>\n                                      ),\n                                    }}\n                                    {...getFieldProps(`${fieldNamePrefix}.numberOfKeys`)}\n                                    error={Boolean(\n                                      getIn(touched, `${fieldNamePrefix}.numberOfKeys`) &&\n                                        getIn(errors, `${fieldNamePrefix}.numberOfKeys`)\n                                    )}\n                                    helperText={\n                                      getIn(touched, `${fieldNamePrefix}.numberOfKeys`) &&\n                                      getIn(errors, `${fieldNamePrefix}.numberOfKeys`)\n                                    }\n                                  />\n                                  <TextField\n                                    fullWidth\n                                    type=\"number\"\n                                    variant=\"standard\"\n                                    size=\"small\"\n                                    label=\"Number of Stars\"\n                                    InputProps={{\n                                      endAdornment: (\n                                        <InputAdornment position=\"end\">\n                                          = {tokenValues.starValueInTokens * content.numberOfStars} tokens\n                                        </InputAdornment>\n                                      ),\n                                    }}\n                                    {...getFieldProps(`${fieldNamePrefix}.numberOfStars`)}\n                                    error={Boolean(\n                                      getIn(touched, `${fieldNamePrefix}.numberOfStars`) &&\n                                        getIn(errors, `${fieldNamePrefix}.numberOfStars`)\n                                    )}\n                                    helperText={\n                                      getIn(touched, `${fieldNamePrefix}.numberOfStars`) &&\n                                      getIn(errors, `${fieldNamePrefix}.numberOfStars`)\n                                    }\n                                  />\n                                  <TextField\n                                    fullWidth\n                                    type=\"number\"\n                                    variant=\"standard\"\n                                    size=\"small\"\n                                    label=\"Number of Coins\"\n                                    InputProps={{\n                                      endAdornment: (\n                                        <InputAdornment position=\"end\">\n                                          = {tokenValues.coinValueInTokens * content.numberOfCoins} tokens\n                                        </InputAdornment>\n                                      ),\n                                    }}\n                                    {...getFieldProps(`${fieldNamePrefix}.numberOfCoins`)}\n                                    error={Boolean(\n                                      getIn(touched, `${fieldNamePrefix}.numberOfCoins`) &&\n                                        getIn(errors, `${fieldNamePrefix}.numberOfCoins`)\n                                    )}\n                                    helperText={\n                                      getIn(touched, `${fieldNamePrefix}.numberOfCoins`) &&\n                                      getIn(errors, `${fieldNamePrefix}.numberOfCoins`)\n                                    }\n                                  />\n                                  <TextField\n                                    fullWidth\n                                    type=\"number\"\n                                    variant=\"standard\"\n                                    size=\"small\"\n                                    label=\"Number of Boosters\"\n                                    InputProps={{\n                                      endAdornment: (\n                                        <InputAdornment position=\"end\">\n                                          = {tokenValues.boosterValueInTokens * content.numberOfBoosters} tokens\n                                        </InputAdornment>\n                                      ),\n                                    }}\n                                    {...getFieldProps(`${fieldNamePrefix}.numberOfBoosters`)}\n                                    error={Boolean(\n                                      getIn(touched, `${fieldNamePrefix}.numberOfBoosters`) &&\n                                        getIn(errors, `${fieldNamePrefix}.numberOfBoosters`)\n                                    )}\n                                    helperText={\n                                      getIn(touched, `${fieldNamePrefix}.numberOfBoosters`) &&\n                                      getIn(errors, `${fieldNamePrefix}.numberOfBoosters`)\n                                    }\n                                  />\n                                  <IconButton\n                                    color=\"error\"\n                                    aria-label=\"delete\"\n                                    onClick={() => contentsArrayHelpers.remove(contentIndex)}\n                                  >\n                                    <DeleteIcon />\n                                  </IconButton>\n                                  <Stack direction=\"row\" justifyContent=\"space-between\">\n                                    <Typography>Token value: </Typography>\n                                    <Typography>{totalValue} tokens</Typography>\n                                  </Stack>\n                                </Stack>\n                              </CardContent>\n                            </Card>\n                          </Grid>\n                        );\n                      })}\n                    </Grid>\n                  </CardContent>\n                </Card>\n              )}\n            />\n            <Box sx={{ mt: 3, display: 'flex', justifyContent: 'flex-end' }}>\n              <LoadingButton type=\"submit\" variant=\"contained\" loading={isSubmitting} endIcon={<SaveIcon />}>\n                Save\n              </LoadingButton>\n            </Box>\n          </Grid>\n        </Grid>\n      </Form>\n    </FormikProvider>\n  );\n}\n","import { useParams, useLocation } from 'react-router-dom';\n// material\nimport { Container } from '@material-ui/core';\n// routes\nimport { PATH_DASHBOARD } from '../routes/paths';\n// hooks\nimport useSettings from '../hooks/useSettings';\n// components\nimport Page from '../components/Page';\nimport HeaderBreadcrumbs from '../components/HeaderBreadcrumbs';\nimport RewardNewForm from '../components/reward/RewardNewForm';\nimport { mockImgProduct } from '../utils/mockImages';\n\n// ----------------------------------------------------------------------\n\nexport default function RewardCreate() {\n  const { themeStretch } = useSettings();\n  const { pathname } = useLocation();\n  const { name } = useParams();\n  const isEdit = pathname.includes('edit');\n\n  // TODO: will be updated with reward info\n  const currentReward = isEdit\n    ? {\n        avatarUrl: mockImgProduct(1),\n        name: 'Easter Egg',\n        location: 'Turkey',\n        contents: [\n          {\n            title: 'Basic',\n            frequency: 30,\n            numberOfKeys: 5,\n            numberOfCoins: 5,\n            numberOfStars: 5,\n            numberOfBoosters: 5,\n          },\n          {\n            title: 'Rare',\n            frequency: 30,\n            numberOfKeys: 10,\n            numberOfCoins: 15,\n            numberOfStars: 5,\n            numberOfBoosters: 10,\n          },\n          {\n            title: 'Epic',\n            frequency: 20,\n            numberOfKeys: 20,\n            numberOfCoins: 30,\n            numberOfStars: 20,\n            numberOfBoosters: 25,\n          },\n        ],\n      }\n    : {};\n\n  return (\n    <Page title=\"Reward: Create a new reward\">\n      <Container maxWidth={themeStretch ? false : 'lg'}>\n        <HeaderBreadcrumbs\n          heading={!isEdit ? 'Add Reward' : 'Edit Reward'}\n          links={[{ name: 'Reward', href: PATH_DASHBOARD.root }, { name: !isEdit ? 'Add Reward' : name }]}\n        />\n        <RewardNewForm isEdit={isEdit} currentReward={currentReward} />\n      </Container>\n    </Page>\n  );\n}\n","import { replace } from 'lodash';\nimport numeral from 'numeral';\n\n// ----------------------------------------------------------------------\n\nexport function fCurrency(number) {\n  return numeral(number).format(Number.isInteger(number) ? '$0,0' : '$0,0.00');\n}\n\nexport function fPercent(number) {\n  return numeral(number / 100).format('0.0%');\n}\n\nexport function fNumber(number) {\n  return numeral(number).format();\n}\n\nexport function fShortenNumber(number) {\n  return replace(numeral(number).format('0.00a'), '.00', '');\n}\n\nexport function fData(number) {\n  return numeral(number).format('0.0 b');\n}\n","import { isString } from 'lodash';\nimport PropTypes from 'prop-types';\n// material\nimport { Box, Typography, Link, Stack } from '@material-ui/core';\n//\nimport { MBreadcrumbs } from './@material-extend';\n\n// ----------------------------------------------------------------------\n\nHeaderBreadcrumbs.propTypes = {\n  links: PropTypes.array,\n  action: PropTypes.node,\n  heading: PropTypes.string.isRequired,\n  moreLink: PropTypes.oneOfType([PropTypes.string, PropTypes.array]),\n  sx: PropTypes.object,\n};\n\nexport default function HeaderBreadcrumbs({ links, action, heading, moreLink = '' || [], sx, ...other }) {\n  return (\n    <Stack sx={sx} mb={5} spacing={2}>\n      <Stack direction=\"row\" alignItems=\"center\">\n        <Box sx={{ flexGrow: 1 }}>\n          <Typography variant=\"h4\" gutterBottom>\n            {heading}\n          </Typography>\n          <MBreadcrumbs links={links} {...other} />\n        </Box>\n\n        {action && <Box sx={{ flexShrink: 0 }}>{action}</Box>}\n      </Stack>\n\n      {isString(moreLink) ? (\n        <Link href={moreLink} target=\"_blank\" variant=\"body2\">\n          {moreLink}\n        </Link>\n      ) : (\n        moreLink.map((href) => (\n          <Link noWrap key={href} href={href} variant=\"body2\" target=\"_blank\" sx={{ display: 'flex' }}>\n            {href}\n          </Link>\n        ))\n      )}\n    </Stack>\n  );\n}\n","var data = {\n\t\"body\": \"<path fill=\\\"currentColor\\\" d=\\\"M19 11h-6V5a1 1 0 0 0-2 0v6H5a1 1 0 0 0 0 2h6v6a1 1 0 0 0 2 0v-6h6a1 1 0 0 0 0-2z\\\"/>\",\n\t\"width\": 24,\n\t\"height\": 24\n};\nexports.__esModule = true;\nexports.default = data;\n","export const phoneRegExp =\n  /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/;\nexport const addressRegExp = /^[a-zA-Z0-9 ]*$/;\nexport const nameRegExp = /^[a-zA-Z ]*$/;\n","import { isString } from 'lodash';\nimport PropTypes from 'prop-types';\nimport { Icon } from '@iconify/react';\nimport { useDropzone } from 'react-dropzone';\nimport fileFill from '@iconify/icons-eva/file-fill';\nimport closeFill from '@iconify/icons-eva/close-fill';\nimport { motion, AnimatePresence } from 'framer-motion';\n// material\nimport { alpha, styled } from '@material-ui/core/styles';\nimport {\n  Box,\n  List,\n  Stack,\n  Paper,\n  Button,\n  ListItem,\n  Typography,\n  ListItemIcon,\n  ListItemText,\n  ListItemSecondaryAction,\n} from '@material-ui/core';\n// utils\nimport { fData } from '../../utils/formatNumber';\n//\nimport { MIconButton } from '../@material-extend';\nimport { varFadeInRight } from '../animate';\nimport { UploadIllustration } from '../../assets';\n\n// ----------------------------------------------------------------------\n\nconst DropZoneStyle = styled('div')(({ theme }) => ({\n  outline: 'none',\n  display: 'flex',\n  textAlign: 'center',\n  alignItems: 'center',\n  flexDirection: 'column',\n  justifyContent: 'center',\n  padding: theme.spacing(5, 1),\n  borderRadius: theme.shape.borderRadius,\n  backgroundColor: theme.palette.background.neutral,\n  border: `1px dashed ${theme.palette.grey[500_32]}`,\n  '&:hover': { opacity: 0.72, cursor: 'pointer' },\n  [theme.breakpoints.up('md')]: { textAlign: 'left', flexDirection: 'row' },\n}));\n\n// ----------------------------------------------------------------------\n\nUploadMultiFile.propTypes = {\n  error: PropTypes.bool,\n  showPreview: PropTypes.bool,\n  files: PropTypes.array,\n  onRemove: PropTypes.func,\n  onRemoveAll: PropTypes.func,\n  sx: PropTypes.object,\n};\n\nexport default function UploadMultiFile({ error, showPreview = false, files, onRemove, onRemoveAll, sx, ...other }) {\n  const hasFile = files.length > 0;\n\n  const { getRootProps, getInputProps, isDragActive, isDragReject, fileRejections } = useDropzone({\n    ...other,\n  });\n\n  const ShowRejectionItems = () => (\n    <Paper\n      variant=\"outlined\"\n      sx={{\n        py: 1,\n        px: 2,\n        mt: 3,\n        borderColor: 'error.light',\n        bgcolor: (theme) => alpha(theme.palette.error.main, 0.08),\n      }}\n    >\n      {fileRejections.map(({ file, errors }) => {\n        const { path, size } = file;\n        return (\n          <Box key={path} sx={{ my: 1 }}>\n            <Typography variant=\"subtitle2\" noWrap>\n              {path} - {fData(size)}\n            </Typography>\n            {errors.map((e) => (\n              <Typography key={e.code} variant=\"caption\" component=\"p\">\n                - {e.message}\n              </Typography>\n            ))}\n          </Box>\n        );\n      })}\n    </Paper>\n  );\n\n  return (\n    <Box sx={{ width: '100%', ...sx }}>\n      <DropZoneStyle\n        {...getRootProps()}\n        sx={{\n          ...(isDragActive && { opacity: 0.72 }),\n          ...((isDragReject || error) && {\n            color: 'error.main',\n            borderColor: 'error.light',\n            bgcolor: 'error.lighter',\n          }),\n        }}\n      >\n        <input {...getInputProps()} />\n\n        <UploadIllustration sx={{ width: 220 }} />\n\n        <Box sx={{ p: 3, ml: { md: 2 } }}>\n          <Typography gutterBottom variant=\"h5\">\n            Drop or Select file\n          </Typography>\n\n          <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\n            Drop files here or click&nbsp;\n            <Typography variant=\"body2\" component=\"span\" sx={{ color: 'primary.main', textDecoration: 'underline' }}>\n              browse\n            </Typography>\n            &nbsp;thorough your machine\n          </Typography>\n        </Box>\n      </DropZoneStyle>\n\n      {fileRejections.length > 0 && <ShowRejectionItems />}\n\n      <List disablePadding sx={{ ...(hasFile && { my: 3 }) }}>\n        <AnimatePresence>\n          {files.map((file) => {\n            const { name, size, preview } = file;\n            const key = isString(file) ? file : name;\n\n            if (showPreview) {\n              return (\n                <ListItem\n                  key={key}\n                  component={motion.div}\n                  {...varFadeInRight}\n                  sx={{\n                    p: 0,\n                    m: 0.5,\n                    width: 80,\n                    height: 80,\n                    borderRadius: 1.5,\n                    overflow: 'hidden',\n                    position: 'relative',\n                    display: 'inline-flex',\n                  }}\n                >\n                  <Paper\n                    variant=\"outlined\"\n                    component=\"img\"\n                    src={isString(file) ? file : preview}\n                    sx={{ width: '100%', height: '100%', objectFit: 'cover', position: 'absolute' }}\n                  />\n                  <Box sx={{ top: 6, right: 6, position: 'absolute' }}>\n                    <MIconButton\n                      size=\"small\"\n                      onClick={() => onRemove(file)}\n                      sx={{\n                        p: '2px',\n                        color: 'common.white',\n                        bgcolor: (theme) => alpha(theme.palette.grey[900], 0.72),\n                        '&:hover': {\n                          bgcolor: (theme) => alpha(theme.palette.grey[900], 0.48),\n                        },\n                      }}\n                    >\n                      <Icon icon={closeFill} />\n                    </MIconButton>\n                  </Box>\n                </ListItem>\n              );\n            }\n\n            return (\n              <ListItem\n                key={key}\n                component={motion.div}\n                {...varFadeInRight}\n                sx={{\n                  my: 1,\n                  py: 0.75,\n                  px: 2,\n                  borderRadius: 1,\n                  border: (theme) => `solid 1px ${theme.palette.divider}`,\n                  bgcolor: 'background.paper',\n                }}\n              >\n                <ListItemIcon>\n                  <Icon icon={fileFill} width={28} height={28} />\n                </ListItemIcon>\n                <ListItemText\n                  primary={isString(file) ? file : name}\n                  secondary={isString(file) ? '' : fData(size)}\n                  primaryTypographyProps={{ variant: 'subtitle2' }}\n                  secondaryTypographyProps={{ variant: 'caption' }}\n                />\n                <ListItemSecondaryAction>\n                  <MIconButton edge=\"end\" size=\"small\" onClick={() => onRemove(file)}>\n                    <Icon icon={closeFill} />\n                  </MIconButton>\n                </ListItemSecondaryAction>\n              </ListItem>\n            );\n          })}\n        </AnimatePresence>\n      </List>\n\n      {hasFile && (\n        <Stack direction=\"row\" justifyContent=\"flex-end\">\n          <Button onClick={onRemoveAll} sx={{ mr: 1.5 }}>\n            Remove all\n          </Button>\n          <Button variant=\"contained\">Upload files</Button>\n        </Stack>\n      )}\n    </Box>\n  );\n}\n","import { isString } from 'lodash';\nimport PropTypes from 'prop-types';\nimport { useDropzone } from 'react-dropzone';\n// material\nimport { alpha, styled } from '@material-ui/core/styles';\nimport { Paper, Box, Typography } from '@material-ui/core';\n// utils\nimport { fData } from '../../utils/formatNumber';\n//\nimport { UploadIllustration } from '../../assets';\n\n// ----------------------------------------------------------------------\n\nconst DropZoneStyle = styled('div')(({ theme }) => ({\n  outline: 'none',\n  display: 'flex',\n  overflow: 'hidden',\n  textAlign: 'center',\n  position: 'relative',\n  alignItems: 'center',\n  flexDirection: 'column',\n  justifyContent: 'center',\n  padding: theme.spacing(5, 0),\n  borderRadius: theme.shape.borderRadius,\n  transition: theme.transitions.create('padding'),\n  backgroundColor: theme.palette.background.neutral,\n  border: `1px dashed ${theme.palette.grey[500_32]}`,\n  '&:hover': {\n    opacity: 0.72,\n    cursor: 'pointer',\n  },\n  [theme.breakpoints.up('md')]: { textAlign: 'left', flexDirection: 'row' },\n}));\n\n// ----------------------------------------------------------------------\n\nUploadSingleFile.propTypes = {\n  error: PropTypes.bool,\n  file: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n  sx: PropTypes.object,\n};\n\nexport default function UploadSingleFile({ error, file, sx, ...other }) {\n  const { getRootProps, getInputProps, isDragActive, isDragReject, fileRejections } = useDropzone({\n    multiple: false,\n    ...other,\n  });\n\n  const ShowRejectionItems = () => (\n    <Paper\n      variant=\"outlined\"\n      sx={{\n        py: 1,\n        px: 2,\n        mt: 3,\n        borderColor: 'error.light',\n        bgcolor: (theme) => alpha(theme.palette.error.main, 0.08),\n      }}\n    >\n      {fileRejections.map(({ file, errors }) => {\n        const { path, size } = file;\n        return (\n          <Box key={path} sx={{ my: 1 }}>\n            <Typography variant=\"subtitle2\" noWrap>\n              {path} - {fData(size)}\n            </Typography>\n            {errors.map((e) => (\n              <Typography key={e.code} variant=\"caption\" component=\"p\">\n                - {e.message}\n              </Typography>\n            ))}\n          </Box>\n        );\n      })}\n    </Paper>\n  );\n\n  return (\n    <Box sx={{ width: '100%', ...sx }}>\n      <DropZoneStyle\n        {...getRootProps()}\n        sx={{\n          ...(isDragActive && { opacity: 0.72 }),\n          ...((isDragReject || error) && {\n            color: 'error.main',\n            borderColor: 'error.light',\n            bgcolor: 'error.lighter',\n          }),\n          ...(file && { padding: '12% 0' }),\n        }}\n      >\n        <input {...getInputProps()} />\n\n        <UploadIllustration sx={{ width: 220 }} />\n\n        <Box sx={{ p: 3, ml: { md: 2 } }}>\n          <Typography gutterBottom variant=\"h5\">\n            Drop or Select file\n          </Typography>\n\n          <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\n            Drop files here or click&nbsp;\n            <Typography variant=\"body2\" component=\"span\" sx={{ color: 'primary.main', textDecoration: 'underline' }}>\n              browse\n            </Typography>\n            &nbsp;thorough your machine\n          </Typography>\n        </Box>\n\n        {file && (\n          <Box\n            component=\"img\"\n            alt=\"file preview\"\n            src={isString(file) ? file : file.preview}\n            sx={{\n              top: 8,\n              borderRadius: 1,\n              objectFit: 'cover',\n              position: 'absolute',\n              width: 'calc(100% - 16px)',\n              height: 'calc(100% - 16px)',\n            }}\n          />\n        )}\n      </DropZoneStyle>\n\n      {fileRejections.length > 0 && <ShowRejectionItems />}\n    </Box>\n  );\n}\n","import { isString } from 'lodash';\nimport PropTypes from 'prop-types';\nimport { Icon } from '@iconify/react';\nimport { useDropzone } from 'react-dropzone';\nimport roundAddAPhoto from '@iconify/icons-ic/round-add-a-photo';\n// material\nimport { alpha, styled } from '@material-ui/core/styles';\nimport { Box, Typography, Paper } from '@material-ui/core';\n// utils\nimport { fData } from '../../utils/formatNumber';\n\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled('div')(({ theme }) => ({\n  width: 144,\n  height: 144,\n  margin: 'auto',\n  borderRadius: '50%',\n  padding: theme.spacing(1),\n  border: `1px dashed ${theme.palette.grey[500_32]}`,\n}));\n\nconst DropZoneStyle = styled('div')({\n  zIndex: 0,\n  width: '100%',\n  height: '100%',\n  outline: 'none',\n  display: 'flex',\n  overflow: 'hidden',\n  borderRadius: '50%',\n  position: 'relative',\n  alignItems: 'center',\n  justifyContent: 'center',\n  '& > *': { width: '100%', height: '100%' },\n  '&:hover': {\n    cursor: 'pointer',\n    '& .placeholder': {\n      zIndex: 9,\n    },\n  },\n});\n\nconst PlaceholderStyle = styled('div')(({ theme }) => ({\n  display: 'flex',\n  position: 'absolute',\n  alignItems: 'center',\n  flexDirection: 'column',\n  justifyContent: 'center',\n  color: theme.palette.text.secondary,\n  backgroundColor: theme.palette.background.neutral,\n  transition: theme.transitions.create('opacity', {\n    easing: theme.transitions.easing.easeInOut,\n    duration: theme.transitions.duration.shorter,\n  }),\n  '&:hover': { opacity: 0.72 },\n}));\n\n// ----------------------------------------------------------------------\n\nUploadAvatar.propTypes = {\n  error: PropTypes.bool,\n  file: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n  caption: PropTypes.node,\n  sx: PropTypes.object,\n};\n\nexport default function UploadAvatar({ error, file, caption, sx, ...other }) {\n  const { getRootProps, getInputProps, isDragActive, isDragReject, fileRejections } = useDropzone({\n    multiple: false,\n    ...other,\n  });\n\n  const ShowRejectionItems = () => (\n    <Paper\n      variant=\"outlined\"\n      sx={{\n        py: 1,\n        px: 2,\n        my: 2,\n        borderColor: 'error.light',\n        bgcolor: (theme) => alpha(theme.palette.error.main, 0.08),\n      }}\n    >\n      {fileRejections.map(({ file, errors }) => {\n        const { path, size } = file;\n        return (\n          <Box key={path} sx={{ my: 1 }}>\n            <Typography variant=\"subtitle2\" noWrap>\n              {path} - {fData(size)}\n            </Typography>\n            {errors.map((e) => (\n              <Typography key={e.code} variant=\"caption\" component=\"p\">\n                - {e.message}\n              </Typography>\n            ))}\n          </Box>\n        );\n      })}\n    </Paper>\n  );\n\n  return (\n    <>\n      <RootStyle sx={sx}>\n        <DropZoneStyle\n          {...getRootProps()}\n          sx={{\n            ...(isDragActive && { opacity: 0.72 }),\n            ...((isDragReject || error) && {\n              color: 'error.main',\n              borderColor: 'error.light',\n              bgcolor: 'error.lighter',\n            }),\n          }}\n        >\n          <input {...getInputProps()} />\n\n          {file && (\n            <Box\n              component=\"img\"\n              alt=\"avatar\"\n              src={isString(file) ? file : file.preview}\n              sx={{ zIndex: 8, objectFit: 'cover' }}\n            />\n          )}\n\n          <PlaceholderStyle\n            className=\"placeholder\"\n            sx={{\n              ...(file && {\n                opacity: 0,\n                color: 'common.white',\n                bgcolor: 'grey.900',\n                '&:hover': { opacity: 0.72 },\n              }),\n            }}\n          >\n            <Box component={Icon} icon={roundAddAPhoto} sx={{ width: 24, height: 24, mb: 1 }} />\n            <Typography variant=\"caption\">{file ? 'Update photo' : 'Upload photo'}</Typography>\n          </PlaceholderStyle>\n        </DropZoneStyle>\n      </RootStyle>\n\n      {caption}\n\n      {fileRejections.length > 0 && <ShowRejectionItems />}\n    </>\n  );\n}\n","import { generateUtilityClass, generateUtilityClasses } from '@material-ui/unstyled';\nexport function getCardHeaderUtilityClass(slot) {\n  return generateUtilityClass('MuiCardHeader', slot);\n}\nconst cardHeaderClasses = generateUtilityClasses('MuiCardHeader', ['root', 'avatar', 'action', 'content', 'title', 'subheader']);\nexport default cardHeaderClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"action\", \"avatar\", \"className\", \"component\", \"disableTypography\", \"subheader\", \"subheaderTypographyProps\", \"title\", \"titleTypographyProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport Typography from '../Typography';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport cardHeaderClasses, { getCardHeaderUtilityClass } from './cardHeaderClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes\n  } = styleProps;\n  const slots = {\n    root: ['root'],\n    avatar: ['avatar'],\n    action: ['action'],\n    content: ['content'],\n    title: ['title'],\n    subheader: ['subheader']\n  };\n  return composeClasses(slots, getCardHeaderUtilityClass, classes);\n};\n\nconst CardHeaderRoot = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Root',\n  overridesResolver: (props, styles) => _extends({\n    [`& .${cardHeaderClasses.title}`]: styles.title,\n    [`& .${cardHeaderClasses.subheader}`]: styles.subheader\n  }, styles.root)\n})({\n  display: 'flex',\n  alignItems: 'center',\n  padding: 16\n});\nconst CardHeaderAvatar = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Avatar',\n  overridesResolver: (props, styles) => styles.avatar\n})({\n  display: 'flex',\n  flex: '0 0 auto',\n  marginRight: 16\n});\nconst CardHeaderAction = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Action',\n  overridesResolver: (props, styles) => styles.action\n})({\n  flex: '0 0 auto',\n  alignSelf: 'flex-start',\n  marginTop: -4,\n  marginRight: -8,\n  marginBottom: -4\n});\nconst CardHeaderContent = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Content',\n  overridesResolver: (props, styles) => styles.content\n})({\n  flex: '1 1 auto'\n});\nconst CardHeader = /*#__PURE__*/React.forwardRef(function CardHeader(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardHeader'\n  });\n\n  const {\n    action,\n    avatar,\n    className,\n    component = 'div',\n    disableTypography = false,\n    subheader: subheaderProp,\n    subheaderTypographyProps,\n    title: titleProp,\n    titleTypographyProps\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const styleProps = _extends({}, props, {\n    component,\n    disableTypography\n  });\n\n  const classes = useUtilityClasses(styleProps);\n  let title = titleProp;\n\n  if (title != null && title.type !== Typography && !disableTypography) {\n    title = /*#__PURE__*/_jsx(Typography, _extends({\n      variant: avatar ? 'body2' : 'h5',\n      className: classes.title,\n      component: \"span\",\n      display: \"block\"\n    }, titleTypographyProps, {\n      children: title\n    }));\n  }\n\n  let subheader = subheaderProp;\n\n  if (subheader != null && subheader.type !== Typography && !disableTypography) {\n    subheader = /*#__PURE__*/_jsx(Typography, _extends({\n      variant: avatar ? 'body2' : 'body1',\n      className: classes.subheader,\n      color: \"text.secondary\",\n      component: \"span\",\n      display: \"block\"\n    }, subheaderTypographyProps, {\n      children: subheader\n    }));\n  }\n\n  return /*#__PURE__*/_jsxs(CardHeaderRoot, _extends({\n    className: clsx(classes.root, className),\n    as: component,\n    ref: ref,\n    styleProps: styleProps\n  }, other, {\n    children: [avatar && /*#__PURE__*/_jsx(CardHeaderAvatar, {\n      className: classes.avatar,\n      styleProps: styleProps,\n      children: avatar\n    }), /*#__PURE__*/_jsxs(CardHeaderContent, {\n      className: classes.content,\n      styleProps: styleProps,\n      children: [title, subheader]\n    }), action && /*#__PURE__*/_jsx(CardHeaderAction, {\n      className: classes.action,\n      styleProps: styleProps,\n      children: action\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardHeader.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The action to display in the card header.\n   */\n  action: PropTypes.node,\n\n  /**\n   * The Avatar element to display.\n   */\n  avatar: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, `subheader` and `title` won't be wrapped by a Typography component.\n   * This can be useful to render an alternative Typography variant by wrapping\n   * the `title` text, and optional `subheader` text\n   * with the Typography component.\n   * @default false\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * The content of the component.\n   */\n  subheader: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the subheader\n   * (as long as disableTypography is not `true`).\n   */\n  subheaderTypographyProps: PropTypes.object,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * The content of the component.\n   */\n  title: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the title\n   * (as long as disableTypography is not `true`).\n   */\n  titleTypographyProps: PropTypes.object\n} : void 0;\nexport default CardHeader;","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M17 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V7l-4-4zm-5 16c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3zm3-10H5V5h10v4z\"\n}), 'Save');","// ----------------------------------------------------------------------\n\nexport const mockImgCover = (index) => `/static/mock-images/covers/cover_${index}.jpg`;\nexport const mockImgFeed = (index) => `/static/mock-images/feeds/feed_${index}.jpg`;\nexport const mockImgProduct = (index) => `/static/mock-images/products/product_${index}.jpg`;\nexport const mockImgAvatar = (index) => `/static/mock-images/avatars/avatar_${index}.jpg`;\n"],"sourceRoot":""}