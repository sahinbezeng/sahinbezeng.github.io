{"version":3,"sources":["components/Label.js","components/campaign/list/CampaignListTable.js","pages/CampaignList.js"],"names":["RootStyle","styled","theme","styleProps","isLight","palette","mode","color","variant","height","minWidth","lineHeight","borderRadius","cursor","alignItems","whiteSpace","display","justifyContent","padding","spacing","grey","fontSize","typography","pxToRem","fontFamily","backgroundColor","fontWeight","fontWeightBold","contrastText","main","styleFilled","border","styleOutlined","alpha","styleGhost","text","primary","secondary","common","white","Label","children","other","columns","field","headerName","width","renderCell","params","to","PATH_DASHBOARD","campaign","detail","component","RouterLink","row","name","id","brand","view","brandName","type","valueOptions","getStatus","getValue","sample","sx","textTransform","mx","align","sortable","filterable","disableColumnMenu","selectedID","onClick","console","log","Icon","icon","moreVerticalFill","CAMPAIGN_TYPES","faker","seed","rows","Array","map","_","index","commerce","productName","company","companyName","brandStatus","datatype","number","min","max","precision","campaignType","helpers","randomize","campaignBudget","budgetLeft","tokensGiven","starsGiven","additionalTokensAdded","engagementRate","reach","targetReach","brandShared","entries","followingUsersNotCompleted","entriesAfterRewardsCompleted","deletedEntries","tickets","bonusSet","status","CustomPagination","useGridSlotComponentProps","state","apiRef","count","pagination","pageCount","page","onChange","event","value","current","setPage","RatingInputValue","item","applyValue","pl","size","placeholder","Number","newValue","CampaignListTable","length","ratingColumn","find","column","ratingColIndex","findIndex","col","ratingFilterOperators","getGridNumericColumnOperators","operator","InputComponent","filterOperators","filter","toLowerCase","pageSize","components","Toolbar","GridToolbar","Pagination","filterModel","items","columnField","operatorValue","CampaignList","themeStretch","useSettings","useLocation","pathname","split","title","maxWidth","heading","links","href","list","all","action","create","startIcon","PlusFill"],"mappings":"wOAMMA,EAAYC,YAAO,OAAPA,EAAe,YAA4B,IAAzBC,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,WACnCC,EAAiC,UAAvBF,EAAMG,QAAQC,KACtBC,EAAmBJ,EAAnBI,MAAOC,EAAYL,EAAZK,QAkBf,OAAO,aACLC,OAAQ,GACRC,SAAU,GACVC,WAAY,EACZC,aAAc,EACdC,OAAQ,UACRC,WAAY,SACZC,WAAY,SACZC,QAAS,cACTC,eAAgB,SAChBC,QAAShB,EAAMiB,QAAQ,EAAG,GAC1BZ,MAAOL,EAAMG,QAAQe,KAAK,KAC1BC,SAAUnB,EAAMoB,WAAWC,QAAQ,IACnCC,WAAYtB,EAAMoB,WAAWE,WAC7BC,gBAAiBvB,EAAMG,QAAQe,KAAK,KACpCM,WAAYxB,EAAMoB,WAAWK,gBAEf,YAAVpB,EAAA,uCAEkB,WAAZC,GAAA,eAnCQ,SAACD,GAAD,MAAY,CAC9BA,MAAOL,EAAMG,QAAQE,GAAOqB,aAC5BH,gBAAiBvB,EAAMG,QAAQE,GAAOsB,MAiCCC,CAAYvB,KAC7B,aAAZC,GAAA,eA/BU,SAACD,GAAD,MAAY,CAChCA,MAAOL,EAAMG,QAAQE,GAAOsB,KAC5BJ,gBAAiB,cACjBM,OAAO,aAAD,OAAe7B,EAAMG,QAAQE,GAAOsB,OA4BDG,CAAczB,KACjC,UAAZC,GAAA,eA1BO,SAACD,GAAD,MAAY,CAC7BA,MAAOL,EAAMG,QAAQE,GAAOH,EAAU,OAAS,SAC/CqB,gBAAiBQ,YAAM/B,EAAMG,QAAQE,GAAOsB,KAAM,MAwBZK,CAAW3B,KAJ7C,2BAOkB,aAAZC,GAA0B,CAC5BiB,gBAAiB,cACjBlB,MAAOL,EAAMG,QAAQ8B,KAAKC,QAC1BL,OAAO,aAAD,OAAe7B,EAAMG,QAAQe,KAAK,UAE1B,UAAZZ,GAAuB,CACzBD,MAAOH,EAAUF,EAAMG,QAAQ8B,KAAKE,UAAYnC,EAAMG,QAAQiC,OAAOC,MACrEd,gBAAiBvB,EAAMG,QAAQe,KAAK,aAQjC,SAASoB,EAAT,GAA8E,IAAD,IAA5DjC,aAA4D,MAApD,UAAoD,MAAzCC,eAAyC,MAA/B,QAA+B,EAAtBiC,EAAsB,EAAtBA,SAAaC,EAAS,iBAC1F,OACE,cAAC1C,EAAD,yBAAWG,WAAY,CAAEI,QAAOC,YAAekC,GAA/C,aACGD,O,qOClDDE,EAAU,CAkBd,CACEC,MAAO,MAET,CACEA,MAAO,OACPC,WAAY,YACZC,MAAO,IACPC,WAAY,SAACC,GAAD,OACV,cAAC,IAAD,CAAMC,GAAIC,IAAeC,SAASC,OAA4B5C,QAAQ,QAAQ6C,UAAWC,IAAzF,SACGN,EAAOO,IAAIC,MADiCR,EAAOO,IAAIE,MAK9D,CACEb,MAAO,YACPC,WAAY,aACZC,MAAO,IACPC,WAAY,SAACC,GAAD,OACV,cAAC,IAAD,CAAMC,GAAIC,IAAeQ,MAAMC,KAA0BnD,QAAQ,QAAQ6C,UAAWC,IAApF,SACGN,EAAOO,IAAIK,WAD4BZ,EAAOO,IAAIE,MAKzD,CACEb,MAAO,cACPC,WAAY,eACZgB,KAAM,SACNf,MAAO,KAET,CACEF,MAAO,eACPC,WAAY,gBACZC,MAAO,KAET,CACEF,MAAO,iBACPC,WAAY,kBACZgB,KAAM,SACNf,MAAO,KAET,CACEF,MAAO,aACPC,WAAY,cACZgB,KAAM,SACNf,MAAO,KAET,CACEF,MAAO,cACPC,WAAY,eACZgB,KAAM,SACNf,MAAO,KAET,CACEF,MAAO,aACPC,WAAY,cACZgB,KAAM,SACNf,MAAO,KAET,CACEF,MAAO,wBACPC,WAAY,eACZgB,KAAM,SACNf,MAAO,KAET,CACEF,MAAO,iBACPC,WAAY,kBACZgB,KAAM,SACNf,MAAO,KAET,CACEF,MAAO,QACPC,WAAY,QACZgB,KAAM,SACNf,MAAO,KAET,CACEF,MAAO,cACPC,WAAY,eACZgB,KAAM,SACNf,MAAO,KAET,CACEF,MAAO,cACPC,WAAY,eACZgB,KAAM,SACNf,MAAO,KAET,CACEF,MAAO,UACPC,WAAY,UACZgB,KAAM,SACNf,MAAO,KAET,CACEF,MAAO,6BACPC,WAAY,gCACZgB,KAAM,SACNf,MAAO,KAET,CACEF,MAAO,+BACPC,WAAY,kCACZgB,KAAM,SACNf,MAAO,KAET,CACEF,MAAO,iBACPC,WAAY,kBACZgB,KAAM,SACNf,MAAO,KAET,CACEF,MAAO,UACPC,WAAY,UACZgB,KAAM,SACNf,MAAO,KAET,CACEF,MAAO,WACPC,WAAY,YACZgB,KAAM,SACNf,MAAO,KAET,CACEF,MAAO,SACPiB,KAAM,eACNhB,WAAY,SACZC,MAAO,IACPgB,aAAc,CAAC,SAAU,OAAQ,QACjCf,WAAY,SAACC,GACX,IAAMe,EAAYf,EAAOgB,SAAShB,EAAOS,GAAI,UAC7C,OACE,cAAC,IAAD,CAAOlD,MAAO0D,iBAAO,CAAC,QAAS,UAAW,YAAaC,GAAI,CAAEC,cAAe,aAAcC,GAAI,QAA9F,SACGL,MAKT,CACEnB,MAAO,SACPC,WAAY,IACZC,MAAO,GACPuB,MAAO,QACPC,UAAU,EACVC,YAAY,EACZC,mBAAmB,EACnBzB,WAAY,SAACC,GACX,IAAMyB,EAAazB,EAAOO,IAAIE,GAK9B,OACE,cAAC,IAAD,CAAaiB,QALK,WAClBC,QAAQC,IAAI,aAAcH,IAI1B,SACE,cAAC,IAAD,CAAKpB,UAAWwB,IAAMC,KAAMC,IAAkBb,GAAI,CAAEpB,MAAO,GAAIrC,OAAQ,WAO3EuE,EAAiB,CAAC,UAAW,UAAW,SAAU,WAAY,YAEpEC,IAAMC,KAAK,IACX,IAAMC,EAAO,YAAIC,MAAM,MAAMC,KAAI,SAACC,EAAGC,GAEnC,MAAO,CACL9B,GAAG,MAAD,OAFa8B,EAAQ,GAGvB/B,KAAMyB,IAAMO,SAASC,cACrB7B,UAAWqB,IAAMS,QAAQC,cACzBC,YAAaX,IAAMY,SAASC,OAAO,CAAEC,IAAK,EAAGC,IAAK,EAAGC,UAAW,IAChEC,aAAcjB,IAAMkB,QAAQC,UAAUpB,GACtCqB,eAAgBpB,IAAMY,SAASC,OAAO,CAAEC,IAAK,IAAMC,IAAK,IAAQC,UAAW,IAC3EK,WAAYrB,IAAMY,SAASC,OAAO,CAAEC,IAAK,IAAMC,IAAK,IAAQC,UAAW,IACvEM,YAAatB,IAAMY,SAASC,OAAO,CAAEC,IAAK,IAAKC,IAAK,IAAOC,UAAW,IACtEO,WAAYvB,IAAMY,SAASC,OAAO,CAAEC,IAAK,IAAKC,IAAK,IAAMC,UAAW,IACpEQ,sBAAuBxB,IAAMY,SAASC,OAAO,CAAEC,IAAK,IAAKC,IAAK,IAAMC,UAAW,IAC/ES,eAAgBzB,IAAMY,SAASC,OAAO,CAAEC,IAAK,IAAKC,IAAK,IAAMC,UAAW,IACxEU,MAAO1B,IAAMY,SAASC,OAAO,CAAEC,IAAK,IAAKC,IAAK,IAAMC,UAAW,IAC/DW,YAAa3B,IAAMY,SAASC,OAAO,CAAEC,IAAK,IAAKC,IAAK,IAAMC,UAAW,IACrEY,YAAa5B,IAAMY,SAASC,OAAO,CAAEC,IAAK,IAAKC,IAAK,IAAMC,UAAW,IACrEa,QAAS7B,IAAMY,SAASC,OAAO,CAAEC,IAAK,IAAKC,IAAK,IAAMC,UAAW,IACjEc,2BAA4B9B,IAAMY,SAASC,OAAO,CAAEC,IAAK,IAAKC,IAAK,IAAMC,UAAW,IACpFe,6BAA8B/B,IAAMY,SAASC,OAAO,CAAEC,IAAK,IAAKC,IAAK,IAAMC,UAAW,IACtFgB,eAAgBhC,IAAMY,SAASC,OAAO,CAAEC,IAAK,IAAKC,IAAK,IAAMC,UAAW,IACxEiB,QAASjC,IAAMY,SAASC,OAAO,CAAEC,IAAK,IAAKC,IAAK,IAAMC,UAAW,IACjEkB,SAAUlC,IAAMY,SAASC,OAAO,CAAEC,IAAK,IAAKC,IAAK,IAAMC,UAAW,IAClEmB,OAAQnD,iBAAO,CACb,uBACA,6BACA,SACA,mBACA,SACA,eACA,mBACA,SACA,cAON,SAASoD,IACP,MAA0BC,cAAlBC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,OAEf,OACE,cAAC,IAAD,CACEjH,MAAM,UACNkH,MAAOF,EAAMG,WAAWC,UACxBC,KAAML,EAAMG,WAAWE,KAAO,EAC9BC,SAAU,SAACC,EAAOC,GAAR,OAAkBP,EAAOQ,QAAQC,QAAQF,EAAQ,MAYjE,SAASG,EAAT,GAAiD,IAArBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,WAChC,OACE,cAAC,IAAD,CAAKlE,GAAI,CAAEmE,GAAI,EAAG5H,OAAQ,EAAGK,WAAY,SAAUE,QAAS,eAA5D,SACE,cAAC,IAAD,CACEsH,KAAK,QACL9E,KAAK,gCACL+E,YAAY,eACZR,MAAOS,OAAOL,EAAKJ,OACnBF,SAAU,SAACC,EAAOW,GAChBL,EAAW,2BAAKD,GAAN,IAAYJ,MAAOU,MAE/BxC,UAAW,OAWJ,SAASyC,EAAT,GAAiD,IAApB9E,EAAmB,EAAnBA,UAAWC,EAAQ,EAARA,KACrD,GAAIlB,EAAQgG,OAAS,EAAG,CACtB,IAAMC,EAAejG,EAAQkG,MAAK,SAACC,GAAD,MAA6B,WAAjBA,EAAOlG,SAC/CmG,EAAiBpG,EAAQqG,WAAU,SAACC,GAAD,MAAuB,WAAdA,EAAIrG,SAEhDsG,EAAwBC,cAAgC9D,KAAI,SAAC+D,GAAD,mBAAC,eAC9DA,GAD6D,IAEhEC,eAAgBnB,OAGlBvF,EAAQoG,GAAR,2BACKH,GADL,IAEEU,gBAAiBJ,IAIrB,OACE,cAAC,IAAD,CACE/D,KAEEvB,EACIuB,EAAKoE,QAAO,SAAChG,GAAD,OAASA,EAAIK,YAAcA,KACvCC,EACAsB,EAAKoE,QAAO,SAAChG,GAAD,OAASA,EAAI2C,aAAasD,gBAAkB3F,KACxD,CAAC,2BAAKsB,EAAK,IAAX,IAAe3B,KAAM,aAE3Bb,QAASA,EACT+E,YAAU,EACV+B,SAAU,GACVC,WAAY,CACVC,QAASC,IACTC,WAAYxC,GAEdyC,YAAa,CACXC,MAAO,CAAC,CAAEC,YAAa,iBAAkBjC,MAAO,OAAQkC,cAAe,Y,kCC5T/E,sIA8CeC,UA9BM,WACnB,IAAQC,EAAiBC,cAAjBD,aAEFjE,EADWmE,cACaC,SAASC,MAAM,6BAA6B,GAE1E,OACE,cAAC,IAAD,CAAMC,MAAM,iBAAZ,SACE,eAAC,IAAD,CAAWC,UAAUN,GAAuB,KAA5C,UACE,cAAC,IAAD,CACEO,QAAQ,gBACRC,MAAO,CAAC,CAAEnH,KAAM,WAAYoH,KAAM1H,IAAeC,SAAS0H,KAAKC,KAAO,CAAEtH,KAAM,SAC9EuH,OACE,cAAC,IAAD,CACEvK,QAAQ,YACR6C,UAAWC,IACXL,GAAIC,IAAeC,SAAS6H,OAC5BC,UAAW,cAAC,IAAD,CAAMnG,KAAMoG,MAJzB,4BAUJ,cAAC,IAAD,CAAKhH,GAAI,CAAEzD,OAAQ,KAAnB,SACE,cAAC,IAAD,CAAmBoD,KAAuB,QAAjBqC,GAA0BA","file":"static/js/21.01ed17d0.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\n// material\nimport { alpha, styled } from '@mui/material/styles';\n\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled('span')(({ theme, styleProps }) => {\n  const isLight = theme.palette.mode === 'light';\n  const { color, variant } = styleProps;\n\n  const styleFilled = (color) => ({\n    color: theme.palette[color].contrastText,\n    backgroundColor: theme.palette[color].main,\n  });\n\n  const styleOutlined = (color) => ({\n    color: theme.palette[color].main,\n    backgroundColor: 'transparent',\n    border: `1px solid ${theme.palette[color].main}`,\n  });\n\n  const styleGhost = (color) => ({\n    color: theme.palette[color][isLight ? 'dark' : 'light'],\n    backgroundColor: alpha(theme.palette[color].main, 0.16),\n  });\n\n  return {\n    height: 22,\n    minWidth: 22,\n    lineHeight: 0,\n    borderRadius: 8,\n    cursor: 'default',\n    alignItems: 'center',\n    whiteSpace: 'nowrap',\n    display: 'inline-flex',\n    justifyContent: 'center',\n    padding: theme.spacing(0, 1),\n    color: theme.palette.grey[800],\n    fontSize: theme.typography.pxToRem(12),\n    fontFamily: theme.typography.fontFamily,\n    backgroundColor: theme.palette.grey[300],\n    fontWeight: theme.typography.fontWeightBold,\n\n    ...(color !== 'default'\n      ? {\n          ...(variant === 'filled' && { ...styleFilled(color) }),\n          ...(variant === 'outlined' && { ...styleOutlined(color) }),\n          ...(variant === 'ghost' && { ...styleGhost(color) }),\n        }\n      : {\n          ...(variant === 'outlined' && {\n            backgroundColor: 'transparent',\n            color: theme.palette.text.primary,\n            border: `1px solid ${theme.palette.grey[500_32]}`,\n          }),\n          ...(variant === 'ghost' && {\n            color: isLight ? theme.palette.text.secondary : theme.palette.common.white,\n            backgroundColor: theme.palette.grey[500_16],\n          }),\n        }),\n  };\n});\n\n// ----------------------------------------------------------------------\n\nexport default function Label({ color = 'default', variant = 'ghost', children, ...other }) {\n  return (\n    <RootStyle styleProps={{ color, variant }} {...other}>\n      {children}\n    </RootStyle>\n  );\n}\n\nLabel.propTypes = {\n  children: PropTypes.node,\n  color: PropTypes.oneOf(['default', 'primary', 'secondary', 'info', 'success', 'warning', 'error']),\n  variant: PropTypes.oneOf(['filled', 'outlined', 'ghost']),\n};\n","import PropTypes from 'prop-types';\nimport faker from 'faker';\nimport { sample } from 'lodash';\nimport { Icon } from '@iconify/react';\nimport moreVerticalFill from '@iconify/icons-eva/more-vertical-fill';\nimport { Link as RouterLink } from 'react-router-dom';\n// material\nimport { Box, Rating, Pagination, Link } from '@mui/material';\nimport { DataGrid, GridToolbar, useGridSlotComponentProps, getGridNumericColumnOperators } from '@mui/x-data-grid';\nimport { PATH_DASHBOARD } from '../../../routes/paths';\n// utils\n// import { fPercent } from '../../../utils/formatNumber';\n// components\nimport Label from '../../Label';\nimport { MIconButton } from '../../@material-extend';\n\n// ----------------------------------------------------------------------\n\nconst columns = [\n  // OPTIONS\n  // https://material-ui.com/api/data-grid/grid-col-def/#main-content\n  // - hide: false (default)\n  // - editable: false (default)\n  // - filterable: true (default)\n  // - sortable: true (default)\n  // - disableColumnMenu: false (default)\n\n  // FIELD TYPES\n  // --------------------\n  // 'string' (default)\n  // 'number'\n  // 'date'\n  // 'dateTime'\n  // 'boolean'\n  // 'singleSelect'\n\n  {\n    field: 'id',\n  },\n  {\n    field: 'name',\n    headerName: 'Task Name',\n    width: 200,\n    renderCell: (params) => (\n      <Link to={PATH_DASHBOARD.campaign.detail} key={params.row.id} variant=\"body2\" component={RouterLink}>\n        {params.row.name}\n      </Link>\n    ),\n  },\n  {\n    field: 'brandName',\n    headerName: 'Brand Name',\n    width: 200,\n    renderCell: (params) => (\n      <Link to={PATH_DASHBOARD.brand.view} key={params.row.id} variant=\"body2\" component={RouterLink}>\n        {params.row.brandName}\n      </Link>\n    ),\n  },\n  {\n    field: 'brandStatus',\n    headerName: 'Brand Status',\n    type: 'number',\n    width: 200,\n  },\n  {\n    field: 'campaignType',\n    headerName: 'Campaign Type',\n    width: 200,\n  },\n  {\n    field: 'campaignBudget',\n    headerName: 'Campaign Budget',\n    type: 'number',\n    width: 200,\n  },\n  {\n    field: 'budgetLeft',\n    headerName: 'Budget Left',\n    type: 'number',\n    width: 200,\n  },\n  {\n    field: 'tokensGiven',\n    headerName: 'Tokens Given',\n    type: 'number',\n    width: 200,\n  },\n  {\n    field: 'starsGiven',\n    headerName: 'Stars Given',\n    type: 'number',\n    width: 200,\n  },\n  {\n    field: 'additionalTokensAdded',\n    headerName: 'Tokens Added',\n    type: 'number',\n    width: 200,\n  },\n  {\n    field: 'engagementRate',\n    headerName: 'Engagement Rate',\n    type: 'number',\n    width: 200,\n  },\n  {\n    field: 'reach',\n    headerName: 'Reach',\n    type: 'number',\n    width: 200,\n  },\n  {\n    field: 'targetReach',\n    headerName: 'Target Reach',\n    type: 'number',\n    width: 200,\n  },\n  {\n    field: 'brandShared',\n    headerName: 'Brand Shared',\n    type: 'number',\n    width: 200,\n  },\n  {\n    field: 'entries',\n    headerName: 'Entries',\n    type: 'number',\n    width: 200,\n  },\n  {\n    field: 'followingUsersNotCompleted',\n    headerName: 'Following Users Not Completed',\n    type: 'number',\n    width: 200,\n  },\n  {\n    field: 'entriesAfterRewardsCompleted',\n    headerName: 'Entries After Rewards Completed',\n    type: 'number',\n    width: 200,\n  },\n  {\n    field: 'deletedEntries',\n    headerName: 'Deleted Entries',\n    type: 'number',\n    width: 200,\n  },\n  {\n    field: 'tickets',\n    headerName: 'Tickets',\n    type: 'number',\n    width: 200,\n  },\n  {\n    field: 'bonusSet',\n    headerName: 'Bonus Set',\n    type: 'number',\n    width: 200,\n  },\n  {\n    field: 'status',\n    type: 'singleSelect',\n    headerName: 'Status',\n    width: 120,\n    valueOptions: ['online', 'away', 'busy'],\n    renderCell: (params) => {\n      const getStatus = params.getValue(params.id, 'status');\n      return (\n        <Label color={sample(['error', 'success', 'warning'])} sx={{ textTransform: 'capitalize', mx: 'auto' }}>\n          {getStatus}\n        </Label>\n      );\n    },\n  },\n  {\n    field: 'action',\n    headerName: ' ',\n    width: 80,\n    align: 'right',\n    sortable: false,\n    filterable: false,\n    disableColumnMenu: true,\n    renderCell: (params) => {\n      const selectedID = params.row.id;\n      const handleClick = () => {\n        console.log('selectedID', selectedID);\n      };\n\n      return (\n        <MIconButton onClick={handleClick}>\n          <Box component={Icon} icon={moreVerticalFill} sx={{ width: 20, height: 20 }} />\n        </MIconButton>\n      );\n    },\n  },\n];\n\nconst CAMPAIGN_TYPES = ['Contest', 'Content', 'Survey', 'Watch-Ad', 'Campaign'];\n\nfaker.seed(10);\nconst rows = [...Array(100)].map((_, index) => {\n  const setIndex = index + 1;\n  return {\n    id: `id ${setIndex}`,\n    name: faker.commerce.productName(),\n    brandName: faker.company.companyName(),\n    brandStatus: faker.datatype.number({ min: 1, max: 5, precision: 1 }),\n    campaignType: faker.helpers.randomize(CAMPAIGN_TYPES),\n    campaignBudget: faker.datatype.number({ min: 1000, max: 500000, precision: 1 }),\n    budgetLeft: faker.datatype.number({ min: 1000, max: 500000, precision: 1 }),\n    tokensGiven: faker.datatype.number({ min: 100, max: 10000, precision: 1 }),\n    starsGiven: faker.datatype.number({ min: 100, max: 1000, precision: 1 }),\n    additionalTokensAdded: faker.datatype.number({ min: 100, max: 5000, precision: 1 }),\n    engagementRate: faker.datatype.number({ min: 100, max: 5000, precision: 1 }),\n    reach: faker.datatype.number({ min: 100, max: 5000, precision: 1 }),\n    targetReach: faker.datatype.number({ min: 100, max: 5000, precision: 1 }),\n    brandShared: faker.datatype.number({ min: 100, max: 5000, precision: 1 }),\n    entries: faker.datatype.number({ min: 100, max: 5000, precision: 1 }),\n    followingUsersNotCompleted: faker.datatype.number({ min: 100, max: 5000, precision: 1 }),\n    entriesAfterRewardsCompleted: faker.datatype.number({ min: 100, max: 5000, precision: 1 }),\n    deletedEntries: faker.datatype.number({ min: 100, max: 5000, precision: 1 }),\n    tickets: faker.datatype.number({ min: 100, max: 5000, precision: 1 }),\n    bonusSet: faker.datatype.number({ min: 100, max: 5000, precision: 1 }),\n    status: sample([\n      'saved not completed ',\n      'waiting for brand approval',\n      'active',\n      'ended submission',\n      'voting',\n      'voting ended',\n      'winner announced',\n      'paused',\n      'ended',\n    ]),\n  };\n});\n\n// ----------------------------------------------------------------------\n\nfunction CustomPagination() {\n  const { state, apiRef } = useGridSlotComponentProps();\n\n  return (\n    <Pagination\n      color=\"primary\"\n      count={state.pagination.pageCount}\n      page={state.pagination.page + 1}\n      onChange={(event, value) => apiRef.current.setPage(value - 1)}\n    />\n  );\n}\n\nRatingInputValue.propTypes = {\n  applyValue: PropTypes.func,\n  item: PropTypes.shape({\n    value: PropTypes.number,\n  }),\n};\n\nfunction RatingInputValue({ item, applyValue }) {\n  return (\n    <Box sx={{ pl: 2, height: 1, alignItems: 'center', display: 'inline-flex' }}>\n      <Rating\n        size=\"small\"\n        name=\"custom-rating-filter-operator\"\n        placeholder=\"Filter value\"\n        value={Number(item.value)}\n        onChange={(event, newValue) => {\n          applyValue({ ...item, value: newValue });\n        }}\n        precision={0.5}\n      />\n    </Box>\n  );\n}\n\nCampaignListTable.propTypes = {\n  brandName: PropTypes.string,\n  type: PropTypes.any,\n};\n\nexport default function CampaignListTable({ brandName, type }) {\n  if (columns.length > 0) {\n    const ratingColumn = columns.find((column) => column.field === 'rating');\n    const ratingColIndex = columns.findIndex((col) => col.field === 'rating');\n\n    const ratingFilterOperators = getGridNumericColumnOperators().map((operator) => ({\n      ...operator,\n      InputComponent: RatingInputValue,\n    }));\n\n    columns[ratingColIndex] = {\n      ...ratingColumn,\n      filterOperators: ratingFilterOperators,\n    };\n  }\n\n  return (\n    <DataGrid\n      rows={\n        // eslint-disable-next-line no-nested-ternary\n        brandName\n          ? rows.filter((row) => row.brandName === brandName)\n          : type\n          ? rows.filter((row) => row.campaignType.toLowerCase() === type)\n          : [{ ...rows[0], name: 'nikeair' }]\n      }\n      columns={columns}\n      pagination\n      pageSize={10}\n      components={{\n        Toolbar: GridToolbar,\n        Pagination: CustomPagination,\n      }}\n      filterModel={{\n        items: [{ columnField: 'engagementRate', value: '2500', operatorValue: '>=' }],\n      }}\n    />\n  );\n}\n","import { Link as RouterLink, useLocation } from 'react-router-dom';\nimport { Icon } from '@iconify/react';\nimport PlusFill from '@iconify/icons-eva/plus-fill';\n// material\nimport { Box, Button, Container } from '@mui/material';\n\nimport useSettings from '../hooks/useSettings';\n\nimport { PATH_DASHBOARD } from '../routes/paths';\n\nimport Page from '../components/Page';\nimport HeaderBreadcrumbs from '../components/HeaderBreadcrumbs';\nimport CampaignListTable from '../components/campaign/list/CampaignListTable';\n\n// ----------------------------------------------------------------------\n\nconst CampaignList = () => {\n  const { themeStretch } = useSettings();\n  const location = useLocation();\n  const campaignType = location.pathname.split('/dashboard/campaign/list/')[1];\n\n  return (\n    <Page title=\"Campaign: List\">\n      <Container maxWidth={themeStretch ? false : 'lg'}>\n        <HeaderBreadcrumbs\n          heading=\"Campaign List\"\n          links={[{ name: 'Campaign', href: PATH_DASHBOARD.campaign.list.all }, { name: 'List' }]}\n          action={\n            <Button\n              variant=\"contained\"\n              component={RouterLink}\n              to={PATH_DASHBOARD.campaign.create}\n              startIcon={<Icon icon={PlusFill} />}\n            >\n              New Campaign\n            </Button>\n          }\n        />\n        <Box sx={{ height: 720 }}>\n          <CampaignListTable type={campaignType !== 'all' && campaignType} />\n        </Box>\n      </Container>\n    </Page>\n  );\n};\n\nexport default CampaignList;\n"],"sourceRoot":""}