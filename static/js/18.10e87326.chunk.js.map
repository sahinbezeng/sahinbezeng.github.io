{"version":3,"sources":["../node_modules/@iconify/icons-eva/plus-fill.js","../node_modules/@mui/material/CardContent/cardContentClasses.js","../node_modules/@mui/material/CardContent/CardContent.js","../node_modules/@mui/material/CardHeader/cardHeaderClasses.js","../node_modules/@mui/material/CardHeader/CardHeader.js","../node_modules/@mui/icons-material/esm/Delete.js","components/app/LevelSettingsForm.js","pages/LevelSettings.js"],"names":["exports","__esModule","default","getCardContentUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CardContentRoot","styled","name","overridesResolver","props","styles","root","padding","paddingBottom","CardContent","React","inProps","ref","useThemeProps","className","component","other","_objectWithoutPropertiesLoose","ownerState","_extends","classes","composeClasses","useUtilityClasses","_jsx","as","clsx","getCardHeaderUtilityClass","cardHeaderClasses","CardHeaderRoot","title","subheader","display","alignItems","CardHeaderAvatar","avatar","flex","marginRight","CardHeaderAction","action","alignSelf","marginTop","marginBottom","CardHeaderContent","content","CardHeader","disableTypography","subheaderProp","subheaderTypographyProps","titleProp","titleTypographyProps","type","Typography","variant","children","color","_jsxs","createSvgIcon","d","initialLevel","levelNumber","starsToAdvance","tokensToAdvance","tasksToAdvance","rewardForLevelUp","SettingsSchema","Yup","shape","levels","of","min","test","originalValue","this","parent","options","context","length","LevelSettingsForm","enqueueSnackbar","useSnackbar","formik","useFormik","enableReinitialize","initialValues","validate","values","a","validateYupSchema","yupToFormErrors","onSubmit","setSubmitting","setErrors","alert","JSON","stringify","error","console","errors","touched","handleSubmit","getFieldProps","isSubmitting","value","noValidate","autoComplete","Grid","container","spacing","item","md","render","levelsArrayHelpers","Card","Button","startIcon","icon","PlusFill","onClick","push","Stack","map","level","index","fieldNamePrefix","direction","xs","sm","sx","width","getIn","TextField","fullWidth","size","label","InputProps","endAdornment","InputAdornment","position","Boolean","helperText","select","SelectProps","native","option","IconButton","remove","Delete","Box","mt","justifyContent","LoadingButton","loading","endIcon","Save","LevelSettings","themeStretch","useSettings","Page","Container","maxWidth","HeaderBreadcrumbs","heading","links","href","PATH_DASHBOARD","app"],"mappings":"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","file":"static/js/18.10e87326.chunk.js","sourcesContent":["var data = {\n\t\"body\": \"<path fill=\\\"currentColor\\\" d=\\\"M19 11h-6V5a1 1 0 0 0-2 0v6H5a1 1 0 0 0 0 2h6v6a1 1 0 0 0 2 0v-6h6a1 1 0 0 0 0-2z\\\"/>\",\n\t\"width\": 24,\n\t\"height\": 24\n};\nexports.__esModule = true;\nexports.default = data;\n","import { generateUtilityClass, generateUtilityClasses } from '@mui/core';\nexport function getCardContentUtilityClass(slot) {\n  return generateUtilityClass('MuiCardContent', slot);\n}\nconst cardContentClasses = generateUtilityClasses('MuiCardContent', ['root']);\nexport default cardContentClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/core';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getCardContentUtilityClass } from './cardContentClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardContentUtilityClass, classes);\n};\n\nconst CardContentRoot = styled('div', {\n  name: 'MuiCardContent',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  };\n});\nconst CardContent = /*#__PURE__*/React.forwardRef(function CardContent(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardContent'\n  });\n\n  const {\n    className,\n    component = 'div'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    component\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardContentRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default CardContent;","import { generateUtilityClass, generateUtilityClasses } from '@mui/core';\nexport function getCardHeaderUtilityClass(slot) {\n  return generateUtilityClass('MuiCardHeader', slot);\n}\nconst cardHeaderClasses = generateUtilityClasses('MuiCardHeader', ['root', 'avatar', 'action', 'content', 'title', 'subheader']);\nexport default cardHeaderClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"action\", \"avatar\", \"className\", \"component\", \"disableTypography\", \"subheader\", \"subheaderTypographyProps\", \"title\", \"titleTypographyProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/core';\nimport Typography from '../Typography';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport cardHeaderClasses, { getCardHeaderUtilityClass } from './cardHeaderClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    avatar: ['avatar'],\n    action: ['action'],\n    content: ['content'],\n    title: ['title'],\n    subheader: ['subheader']\n  };\n  return composeClasses(slots, getCardHeaderUtilityClass, classes);\n};\n\nconst CardHeaderRoot = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Root',\n  overridesResolver: (props, styles) => _extends({\n    [`& .${cardHeaderClasses.title}`]: styles.title,\n    [`& .${cardHeaderClasses.subheader}`]: styles.subheader\n  }, styles.root)\n})({\n  display: 'flex',\n  alignItems: 'center',\n  padding: 16\n});\nconst CardHeaderAvatar = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Avatar',\n  overridesResolver: (props, styles) => styles.avatar\n})({\n  display: 'flex',\n  flex: '0 0 auto',\n  marginRight: 16\n});\nconst CardHeaderAction = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Action',\n  overridesResolver: (props, styles) => styles.action\n})({\n  flex: '0 0 auto',\n  alignSelf: 'flex-start',\n  marginTop: -4,\n  marginRight: -8,\n  marginBottom: -4\n});\nconst CardHeaderContent = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Content',\n  overridesResolver: (props, styles) => styles.content\n})({\n  flex: '1 1 auto'\n});\nconst CardHeader = /*#__PURE__*/React.forwardRef(function CardHeader(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardHeader'\n  });\n\n  const {\n    action,\n    avatar,\n    className,\n    component = 'div',\n    disableTypography = false,\n    subheader: subheaderProp,\n    subheaderTypographyProps,\n    title: titleProp,\n    titleTypographyProps\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    component,\n    disableTypography\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  let title = titleProp;\n\n  if (title != null && title.type !== Typography && !disableTypography) {\n    title = /*#__PURE__*/_jsx(Typography, _extends({\n      variant: avatar ? 'body2' : 'h5',\n      className: classes.title,\n      component: \"span\",\n      display: \"block\"\n    }, titleTypographyProps, {\n      children: title\n    }));\n  }\n\n  let subheader = subheaderProp;\n\n  if (subheader != null && subheader.type !== Typography && !disableTypography) {\n    subheader = /*#__PURE__*/_jsx(Typography, _extends({\n      variant: avatar ? 'body2' : 'body1',\n      className: classes.subheader,\n      color: \"text.secondary\",\n      component: \"span\",\n      display: \"block\"\n    }, subheaderTypographyProps, {\n      children: subheader\n    }));\n  }\n\n  return /*#__PURE__*/_jsxs(CardHeaderRoot, _extends({\n    className: clsx(classes.root, className),\n    as: component,\n    ref: ref,\n    ownerState: ownerState\n  }, other, {\n    children: [avatar && /*#__PURE__*/_jsx(CardHeaderAvatar, {\n      className: classes.avatar,\n      ownerState: ownerState,\n      children: avatar\n    }), /*#__PURE__*/_jsxs(CardHeaderContent, {\n      className: classes.content,\n      ownerState: ownerState,\n      children: [title, subheader]\n    }), action && /*#__PURE__*/_jsx(CardHeaderAction, {\n      className: classes.action,\n      ownerState: ownerState,\n      children: action\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardHeader.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The action to display in the card header.\n   */\n  action: PropTypes.node,\n\n  /**\n   * The Avatar element to display.\n   */\n  avatar: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, `subheader` and `title` won't be wrapped by a Typography component.\n   * This can be useful to render an alternative Typography variant by wrapping\n   * the `title` text, and optional `subheader` text\n   * with the Typography component.\n   * @default false\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * The content of the component.\n   */\n  subheader: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the subheader\n   * (as long as disableTypography is not `true`).\n   */\n  subheaderTypographyProps: PropTypes.object,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * The content of the component.\n   */\n  title: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the title\n   * (as long as disableTypography is not `true`).\n   */\n  titleTypographyProps: PropTypes.object\n} : void 0;\nexport default CardHeader;","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useSnackbar } from 'notistack';\nimport * as Yup from 'yup';\nimport { FieldArray, Form, FormikProvider, getIn, useFormik, validateYupSchema, yupToFormErrors } from 'formik';\nimport { Icon } from '@iconify/react';\nimport PlusFill from '@iconify/icons-eva/plus-fill';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Grid,\n  IconButton,\n  InputAdornment,\n  Stack,\n  TextField,\n  Typography,\n} from '@mui/material';\nimport { LoadingButton } from '@mui/lab';\nimport { Delete as DeleteIcon, Save as SaveIcon } from '@mui/icons-material';\n\nconst initialLevel = {\n  levelNumber: 1,\n  starsToAdvance: 10,\n  tokensToAdvance: 0,\n  tasksToAdvance: 0,\n  rewardForLevelUp: 'NONE',\n};\n\nconst SettingsSchema = Yup.object().shape({\n  levels: Yup.array().of(\n    Yup.object().shape({\n      levelNumber: Yup.number().min(1),\n      starsToAdvance: Yup.number().test(\n        'level stars test',\n        'star number should be greater than previous level',\n        function validateStars() {\n          const {\n            originalValue,\n            parent,\n            options: {\n              context: { levels },\n            },\n          } = this;\n          // console.log('thisss', this, levels);\n          if (levels.length <= 1 || parent.levelNumber - 2 < 0) return true;\n          // console.log('previous start value: ', levels[parent.levelNumber - 2]?.starsToAdvance);\n          return originalValue > levels[parent.levelNumber - 2]?.starsToAdvance;\n        }\n      ),\n      tokensToAdvance: Yup.number(),\n      tasksToAdvance: Yup.number(),\n      rewardForLevelUp: Yup.string(),\n    })\n  ),\n});\n\nconst LevelSettingsForm = ({ levels }) => {\n  const { enqueueSnackbar } = useSnackbar();\n\n  const formik = useFormik({\n    enableReinitialize: true,\n    initialValues: {\n      levels: levels || [{ ...initialLevel }],\n    },\n    // validationSchema: SettingsSchema,\n    validate: async (values) => {\n      try {\n        await validateYupSchema(values, SettingsSchema, true, values);\n      } catch (err) {\n        return yupToFormErrors(err);\n      }\n      return {};\n    },\n    onSubmit: async (values, { setSubmitting, setErrors }) => {\n      alert(JSON.stringify(values));\n      try {\n        setSubmitting(false);\n        enqueueSnackbar('Update success', { variant: 'success' });\n      } catch (error) {\n        console.error(error);\n        setSubmitting(false);\n        setErrors(error);\n      }\n    },\n  });\n\n  const { values, errors, touched, handleSubmit, getFieldProps, isSubmitting } = formik;\n\n  return (\n    <FormikProvider value={formik}>\n      <Form noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\n        <Grid container spacing={3}>\n          <Grid item md={12}>\n            <FieldArray\n              name=\"levels\"\n              render={(levelsArrayHelpers) => (\n                <Card>\n                  <CardHeader\n                    title=\"Level Settings\"\n                    action={\n                      <Button\n                        variant=\"contained\"\n                        startIcon={<Icon icon={PlusFill} />}\n                        onClick={() =>\n                          levelsArrayHelpers.push({ ...initialLevel, levelNumber: values.levels.length + 1 })\n                        }\n                      >\n                        Add Level\n                      </Button>\n                    }\n                  />\n                  <CardContent>\n                    <Stack spacing={2}>\n                      {values.levels.map((level, index) => {\n                        const fieldNamePrefix = `levels.${index}`;\n                        return (\n                          <Stack\n                            key={index}\n                            alignItems=\"center\"\n                            direction={{ xs: 'column', sm: 'column', md: 'row' }}\n                            spacing={{ xs: 3, sm: 3, md: 2 }}\n                          >\n                            <Typography sx={{ width: '50%' }}>{`Level #${getIn(\n                              values,\n                              `${fieldNamePrefix}.levelNumber`\n                            )}`}</Typography>\n                            <TextField\n                              fullWidth\n                              size=\"small\"\n                              label=\"Stars to advance\"\n                              InputProps={{\n                                endAdornment: <InputAdornment position=\"end\">stars</InputAdornment>,\n                              }}\n                              {...getFieldProps(`${fieldNamePrefix}.starsToAdvance`)}\n                              error={Boolean(\n                                getIn(touched, `${fieldNamePrefix}.starsToAdvance`) &&\n                                  getIn(errors, `${fieldNamePrefix}.starsToAdvance`)\n                              )}\n                              helperText={\n                                getIn(touched, `${fieldNamePrefix}.starsToAdvance`) &&\n                                getIn(errors, `${fieldNamePrefix}.starsToAdvance`)\n                              }\n                            />\n                            <TextField\n                              fullWidth\n                              size=\"small\"\n                              label=\"Tokens to advance\"\n                              InputProps={{\n                                endAdornment: <InputAdornment position=\"end\">tokens</InputAdornment>,\n                              }}\n                              {...getFieldProps(`${fieldNamePrefix}.tokensToAdvance`)}\n                              error={Boolean(\n                                getIn(touched, `${fieldNamePrefix}.tokensToAdvance`) &&\n                                  getIn(errors, `${fieldNamePrefix}.tokensToAdvance`)\n                              )}\n                              helperText={\n                                getIn(touched, `${fieldNamePrefix}.tokensToAdvance`) &&\n                                getIn(errors, `${fieldNamePrefix}.tokensToAdvance`)\n                              }\n                            />\n                            <TextField\n                              fullWidth\n                              size=\"small\"\n                              label=\"Tasks to advance\"\n                              InputProps={{\n                                endAdornment: <InputAdornment position=\"end\">tasks</InputAdornment>,\n                              }}\n                              {...getFieldProps(`${fieldNamePrefix}.tasksToAdvance`)}\n                              error={Boolean(\n                                getIn(touched, `${fieldNamePrefix}.tasksToAdvance`) &&\n                                  getIn(errors, `${fieldNamePrefix}.tasksToAdvance`)\n                              )}\n                              helperText={\n                                getIn(touched, `${fieldNamePrefix}.tasksToAdvance`) &&\n                                getIn(errors, `${fieldNamePrefix}.tasksToAdvance`)\n                              }\n                            />\n                            <TextField\n                              select\n                              fullWidth\n                              size=\"small\"\n                              label=\"Reward for level up\"\n                              {...getFieldProps(`${fieldNamePrefix}.rewardForLevelUp`)}\n                              SelectProps={{ native: true }}\n                              error={Boolean(\n                                getIn(touched, `${fieldNamePrefix}.rewardForLevelUp`) &&\n                                  getIn(errors, `${fieldNamePrefix}.tasksToAdvance`)\n                              )}\n                              helperText={\n                                getIn(touched, `${fieldNamePrefix}.rewardForLevelUp`) &&\n                                getIn(errors, `${fieldNamePrefix}.rewardForLevelUp`)\n                              }\n                            >\n                              <option value=\"NONE\">NONE</option>\n                              {['Present', 'Easter Egg', 'MAX Energy increase by 1'].map((option) => (\n                                <option key={option} value={option}>\n                                  {option}\n                                </option>\n                              ))}\n                            </TextField>\n                            <IconButton\n                              color=\"error\"\n                              aria-label=\"delete\"\n                              onClick={() => levelsArrayHelpers.remove(index)}\n                            >\n                              <DeleteIcon />\n                            </IconButton>\n                          </Stack>\n                        );\n                      })}\n                      <Box sx={{ mt: 3, display: 'flex', justifyContent: 'flex-end' }}>\n                        <LoadingButton type=\"submit\" variant=\"contained\" loading={isSubmitting} endIcon={<SaveIcon />}>\n                          Save\n                        </LoadingButton>\n                      </Box>\n                    </Stack>\n                  </CardContent>\n                </Card>\n              )}\n            />\n          </Grid>\n        </Grid>\n      </Form>\n    </FormikProvider>\n  );\n};\n\nLevelSettingsForm.propTypes = {\n  levels: PropTypes.array,\n};\n\nexport default LevelSettingsForm;\n","// material\nimport { Container } from '@mui/material';\n\nimport useSettings from '../hooks/useSettings';\n\nimport { PATH_DASHBOARD } from '../routes/paths';\n\nimport Page from '../components/Page';\nimport HeaderBreadcrumbs from '../components/HeaderBreadcrumbs';\nimport LevelSettingsForm from '../components/app/LevelSettingsForm';\n\n// ----------------------------------------------------------------------\n\nconst LevelSettings = () => {\n  const { themeStretch } = useSettings();\n\n  return (\n    <Page title=\"Riddim: Level Settings\">\n      <Container maxWidth={themeStretch ? false : 'lg'}>\n        <HeaderBreadcrumbs\n          heading=\"Riddim Levels\"\n          links={[{ name: 'App', href: PATH_DASHBOARD.app.root }, { name: 'Level Settings' }]}\n        />\n        <LevelSettingsForm />\n      </Container>\n    </Page>\n  );\n};\n\nexport default LevelSettings;\n"],"sourceRoot":""}