{"version":3,"sources":["components/bonus/TicketRuleNewForm.js","pages/TicketRuleCreate.js","components/HeaderBreadcrumbs.js","../node_modules/@iconify/icons-eva/plus-fill.js","../node_modules/@mui/icons-material/esm/Save.js","../node_modules/@mui/material/CardContent/cardContentClasses.js","../node_modules/@mui/material/CardContent/CardContent.js","../node_modules/@mui/material/CardHeader/cardHeaderClasses.js","../node_modules/@mui/material/CardHeader/CardHeader.js","../node_modules/@mui/icons-material/esm/Delete.js"],"names":["initialFromToObject","from","to","tickets","initialSocialRuleObject","socialNetworkCount","HistoricalDataRules","formik","errors","values","touched","getFieldProps","name","render","historicalDataArrayHelpers","Card","CardHeader","title","titleTypographyProps","variant","action","Button","size","startIcon","icon","PlusFill","onClick","push","CardContent","Stack","spacing","historicalDataRules","map","rule","index","fieldNamePrefix","direction","justifyContent","Typography","TextField","type","error","Boolean","getIn","helperText","IconButton","color","remove","Delete","AppLevelRules","appLevelArrayHelpers","appLevelRules","fullWidth","FollowerRules","followerArrayHelpers","followerRules","SocialNetworkRules","setFieldValue","socialNetworkArrayHelpers","Autocomplete","multiple","disableCloseOnSelect","value","socialNetworks","onChange","event","newValue","options","renderInput","params","label","socialNetworkRules","NewTicketRuleSchema","Yup","shape","required","TicketRuleNewForm","isEdit","currentTicketRule","navigate","useNavigate","enqueueSnackbar","useSnackbar","useFormik","enableReinitialize","initialValues","types","validationSchema","onSubmit","a","setSubmitting","resetForm","setErrors","alert","JSON","stringify","PATH_DASHBOARD","bonus","createTicketRule","console","handleSubmit","isSubmitting","log","noValidate","autoComplete","Grid","container","item","xs","sm","includes","md","Box","sx","mt","display","LoadingButton","loading","endIcon","Save","TicketRuleCreate","themeStretch","useSettings","pathname","useLocation","useParams","Page","Container","maxWidth","HeaderBreadcrumbs","heading","links","href","root","moreLink","other","mb","alignItems","flexGrow","gutterBottom","flexShrink","isString","target","noWrap","exports","__esModule","default","createSvgIcon","_jsx","d","getCardContentUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CardContentRoot","styled","overridesResolver","props","styles","padding","paddingBottom","React","inProps","ref","useThemeProps","className","component","_objectWithoutPropertiesLoose","ownerState","_extends","classes","composeClasses","useUtilityClasses","as","clsx","getCardHeaderUtilityClass","cardHeaderClasses","CardHeaderRoot","subheader","CardHeaderAvatar","avatar","flex","marginRight","CardHeaderAction","alignSelf","marginTop","marginBottom","CardHeaderContent","content","disableTypography","subheaderProp","subheaderTypographyProps","titleProp","children","_jsxs"],"mappings":"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","file":"static/js/25.3e9cb7d7.chunk.js","sourcesContent":["import React from 'react';\nimport * as Yup from 'yup';\nimport PropTypes from 'prop-types';\nimport { useSnackbar } from 'notistack';\nimport { useNavigate } from 'react-router-dom';\nimport { FieldArray, Form, FormikProvider, getIn, useFormik } from 'formik';\nimport { Icon } from '@iconify/react';\nimport PlusFill from '@iconify/icons-eva/plus-fill';\n// material\nimport { Delete as DeleteIcon, Save as SaveIcon } from '@mui/icons-material';\nimport { LoadingButton } from '@mui/lab';\nimport {\n  Box,\n  Card,\n  Grid,\n  Stack,\n  TextField,\n  Typography,\n  CardHeader,\n  CardContent,\n  Button,\n  Autocomplete,\n  IconButton,\n} from '@mui/material';\n// routes\nimport { PATH_DASHBOARD } from '../../routes/paths';\n// components\n\n// ----------------------------------------------------------------------\n\nconst initialFromToObject = {\n  from: 0,\n  to: 0,\n  tickets: 0,\n};\n\nconst initialSocialRuleObject = { socialNetworkCount: 0, tickets: 0 };\n\nconst HistoricalDataRules = ({ formik }) => {\n  const { errors, values, touched, getFieldProps } = formik;\n  return (\n    <FieldArray\n      name=\"historicalDataRules\"\n      render={(historicalDataArrayHelpers) => (\n        <Card>\n          <CardHeader\n            title=\"Historical Data Rules\"\n            titleTypographyProps={{ variant: 'subtitle1' }}\n            action={\n              <Button\n                size=\"small\"\n                variant=\"outlined\"\n                startIcon={<Icon icon={PlusFill} />}\n                onClick={() => historicalDataArrayHelpers.push({ ...initialFromToObject })}\n              >\n                Add Rule\n              </Button>\n            }\n          />\n          <CardContent>\n            <Stack spacing={1}>\n              {values.historicalDataRules.map((rule, index) => {\n                const fieldNamePrefix = `historicalDataRules.${index}`;\n                return (\n                  <Stack key={index} direction=\"row\" justifyContent=\"space-between\" spacing={1}>\n                    <Typography variant=\"caption\">did not win</Typography>\n                    <TextField\n                      type=\"number\"\n                      variant=\"standard\"\n                      size=\"small\"\n                      {...getFieldProps(`${fieldNamePrefix}.from`)}\n                      error={Boolean(\n                        getIn(touched, `${fieldNamePrefix}.from`) && getIn(errors, `${fieldNamePrefix}.from`)\n                      )}\n                      helperText={getIn(touched, `${fieldNamePrefix}.from`) && getIn(errors, `${fieldNamePrefix}.from`)}\n                    />\n                    <Typography variant=\"caption\">to</Typography>\n\n                    <TextField\n                      type=\"number\"\n                      variant=\"standard\"\n                      size=\"small\"\n                      {...getFieldProps(`${fieldNamePrefix}.to`)}\n                      error={Boolean(getIn(touched, `${fieldNamePrefix}.to`) && getIn(errors, `${fieldNamePrefix}.to`))}\n                      helperText={getIn(touched, `${fieldNamePrefix}.to`) && getIn(errors, `${fieldNamePrefix}.to`)}\n                    />\n                    <Typography variant=\"caption\">times</Typography>\n\n                    <TextField\n                      type=\"number\"\n                      variant=\"standard\"\n                      size=\"small\"\n                      {...getFieldProps(`${fieldNamePrefix}.tickets`)}\n                      error={Boolean(\n                        getIn(touched, `${fieldNamePrefix}.tickets`) && getIn(errors, `${fieldNamePrefix}.tickets`)\n                      )}\n                      helperText={\n                        getIn(touched, `${fieldNamePrefix}.tickets`) && getIn(errors, `${fieldNamePrefix}.tickets`)\n                      }\n                    />\n                    <Typography variant=\"caption\">tickets</Typography>\n                    <IconButton\n                      color=\"error\"\n                      aria-label=\"delete\"\n                      onClick={() => historicalDataArrayHelpers.remove(index)}\n                    >\n                      <DeleteIcon />\n                    </IconButton>\n                  </Stack>\n                );\n              })}\n            </Stack>\n          </CardContent>\n        </Card>\n      )}\n    />\n  );\n};\n\nconst AppLevelRules = ({ formik }) => {\n  const { errors, values, touched, getFieldProps } = formik;\n  return (\n    <FieldArray\n      name=\"appLevelRules\"\n      render={(appLevelArrayHelpers) => (\n        <Card>\n          <CardHeader\n            title=\"App Level Rules\"\n            titleTypographyProps={{ variant: 'subtitle1' }}\n            action={\n              <Button\n                size=\"small\"\n                variant=\"outlined\"\n                startIcon={<Icon icon={PlusFill} />}\n                onClick={() => appLevelArrayHelpers.push({ ...initialFromToObject })}\n              >\n                Add Rule\n              </Button>\n            }\n          />\n          <CardContent>\n            <Stack spacing={1}>\n              {values.appLevelRules.map((rule, index) => {\n                const fieldNamePrefix = `appLevelRules.${index}`;\n                return (\n                  <Stack key={index} direction=\"row\" justifyContent=\"space-between\" spacing={1}>\n                    <Typography variant=\"caption\">App Level</Typography>\n\n                    <TextField\n                      type=\"number\"\n                      fullWidth\n                      variant=\"standard\"\n                      size=\"small\"\n                      {...getFieldProps(`${fieldNamePrefix}.from`)}\n                      error={Boolean(\n                        getIn(touched, `${fieldNamePrefix}.from`) && getIn(errors, `${fieldNamePrefix}.from`)\n                      )}\n                      helperText={getIn(touched, `${fieldNamePrefix}.from`) && getIn(errors, `${fieldNamePrefix}.from`)}\n                    />\n                    <Typography variant=\"caption\">to</Typography>\n\n                    <TextField\n                      type=\"number\"\n                      fullWidth\n                      variant=\"standard\"\n                      size=\"small\"\n                      {...getFieldProps(`${fieldNamePrefix}.to`)}\n                      error={Boolean(getIn(touched, `${fieldNamePrefix}.to`) && getIn(errors, `${fieldNamePrefix}.to`))}\n                      helperText={getIn(touched, `${fieldNamePrefix}.to`) && getIn(errors, `${fieldNamePrefix}.to`)}\n                    />\n                    <Typography variant=\"caption\">times</Typography>\n\n                    <TextField\n                      type=\"number\"\n                      fullWidth\n                      variant=\"standard\"\n                      size=\"small\"\n                      {...getFieldProps(`${fieldNamePrefix}.tickets`)}\n                      error={Boolean(\n                        getIn(touched, `${fieldNamePrefix}.tickets`) && getIn(errors, `${fieldNamePrefix}.tickets`)\n                      )}\n                      helperText={\n                        getIn(touched, `${fieldNamePrefix}.tickets`) && getIn(errors, `${fieldNamePrefix}.tickets`)\n                      }\n                    />\n                    <Typography variant=\"caption\">tickets</Typography>\n                    <IconButton color=\"error\" aria-label=\"delete\" onClick={() => appLevelArrayHelpers.remove(index)}>\n                      <DeleteIcon />\n                    </IconButton>\n                  </Stack>\n                );\n              })}\n            </Stack>\n          </CardContent>\n        </Card>\n      )}\n    />\n  );\n};\n\nconst FollowerRules = ({ formik }) => {\n  const { errors, values, touched, getFieldProps } = formik;\n  return (\n    <FieldArray\n      name=\"followerRules\"\n      render={(followerArrayHelpers) => (\n        <Card>\n          <CardHeader\n            title=\"Follower Rules\"\n            titleTypographyProps={{ variant: 'subtitle1' }}\n            action={\n              <Button\n                size=\"small\"\n                variant=\"outlined\"\n                startIcon={<Icon icon={PlusFill} />}\n                onClick={() => followerArrayHelpers.push({ ...initialFromToObject })}\n              >\n                Add Rule\n              </Button>\n            }\n          />\n          <CardContent>\n            <Stack spacing={1}>\n              {values.followerRules.map((rule, index) => {\n                const fieldNamePrefix = `followerRules.${index}`;\n                return (\n                  <Stack key={index} direction=\"row\" justifyContent=\"space-between\" spacing={1}>\n                    <Typography variant=\"caption\">Follower</Typography>\n\n                    <TextField\n                      type=\"number\"\n                      fullWidth\n                      variant=\"standard\"\n                      size=\"small\"\n                      {...getFieldProps(`${fieldNamePrefix}.from`)}\n                      error={Boolean(\n                        getIn(touched, `${fieldNamePrefix}.from`) && getIn(errors, `${fieldNamePrefix}.from`)\n                      )}\n                      helperText={getIn(touched, `${fieldNamePrefix}.from`) && getIn(errors, `${fieldNamePrefix}.from`)}\n                    />\n                    <Typography variant=\"caption\">to</Typography>\n\n                    <TextField\n                      type=\"number\"\n                      fullWidth\n                      variant=\"standard\"\n                      size=\"small\"\n                      {...getFieldProps(`${fieldNamePrefix}.to`)}\n                      error={Boolean(getIn(touched, `${fieldNamePrefix}.to`) && getIn(errors, `${fieldNamePrefix}.to`))}\n                      helperText={getIn(touched, `${fieldNamePrefix}.to`) && getIn(errors, `${fieldNamePrefix}.to`)}\n                    />\n                    <Typography variant=\"caption\">times</Typography>\n\n                    <TextField\n                      type=\"number\"\n                      fullWidth\n                      variant=\"standard\"\n                      size=\"small\"\n                      {...getFieldProps(`${fieldNamePrefix}.tickets`)}\n                      error={Boolean(\n                        getIn(touched, `${fieldNamePrefix}.tickets`) && getIn(errors, `${fieldNamePrefix}.tickets`)\n                      )}\n                      helperText={\n                        getIn(touched, `${fieldNamePrefix}.tickets`) && getIn(errors, `${fieldNamePrefix}.tickets`)\n                      }\n                    />\n                    <Typography variant=\"caption\">tickets</Typography>\n                    <IconButton color=\"error\" aria-label=\"delete\" onClick={() => followerArrayHelpers.remove(index)}>\n                      <DeleteIcon />\n                    </IconButton>\n                  </Stack>\n                );\n              })}\n            </Stack>\n          </CardContent>\n        </Card>\n      )}\n    />\n  );\n};\n\nconst SocialNetworkRules = ({ formik }) => {\n  const { errors, values, touched, getFieldProps, setFieldValue } = formik;\n  return (\n    <FieldArray\n      name=\"socialNetworkRules\"\n      render={(socialNetworkArrayHelpers) => (\n        <Card>\n          <CardHeader\n            title=\"Social Network Rules\"\n            titleTypographyProps={{ variant: 'subtitle1' }}\n            action={\n              <Button\n                size=\"small\"\n                variant=\"outlined\"\n                startIcon={<Icon icon={PlusFill} />}\n                onClick={() => socialNetworkArrayHelpers.push({ ...initialSocialRuleObject })}\n              >\n                Add Rule\n              </Button>\n            }\n          />\n          <CardContent>\n            <Stack spacing={1}>\n              <Autocomplete\n                multiple\n                disableCloseOnSelect\n                size=\"small\"\n                value={values.socialNetworks}\n                onChange={(event, newValue) => {\n                  setFieldValue('socialNetworks', newValue);\n                }}\n                options={['Facebook', 'Instagram', 'Twitter', 'Pinterest', 'Snapchat', 'Tiktok']}\n                renderInput={(params) => (\n                  <TextField\n                    {...params}\n                    label=\"Social Networks\"\n                    error={Boolean(touched.socialNetworks && errors.socialNetworks)}\n                    helperText={touched.socialNetworks && errors.socialNetworks}\n                  />\n                )}\n              />\n              {values.socialNetworkRules.map((rule, index) => {\n                const fieldNamePrefix = `socialNetworkRules.${index}`;\n                return (\n                  <Stack key={index} direction=\"row\" justifyContent=\"space-between\" spacing={1}>\n                    <TextField\n                      type=\"number\"\n                      variant=\"standard\"\n                      size=\"small\"\n                      {...getFieldProps(`${fieldNamePrefix}.socialNetworkCount`)}\n                      error={Boolean(\n                        getIn(touched, `${fieldNamePrefix}.socialNetworkCount`) &&\n                          getIn(errors, `${fieldNamePrefix}.socialNetworkCount`)\n                      )}\n                      helperText={\n                        getIn(touched, `${fieldNamePrefix}.socialNetworkCount`) &&\n                        getIn(errors, `${fieldNamePrefix}.socialNetworkCount`)\n                      }\n                    />\n                    <Typography variant=\"caption\">Social Networks</Typography>\n\n                    <TextField\n                      type=\"number\"\n                      variant=\"standard\"\n                      size=\"small\"\n                      {...getFieldProps(`${fieldNamePrefix}.tickets`)}\n                      error={Boolean(\n                        getIn(touched, `${fieldNamePrefix}.tickets`) && getIn(errors, `${fieldNamePrefix}.tickets`)\n                      )}\n                      helperText={\n                        getIn(touched, `${fieldNamePrefix}.tickets`) && getIn(errors, `${fieldNamePrefix}.tickets`)\n                      }\n                    />\n                    <Typography variant=\"caption\">tickets</Typography>\n                    <IconButton\n                      color=\"error\"\n                      aria-label=\"delete\"\n                      onClick={() => socialNetworkArrayHelpers.remove(index)}\n                    >\n                      <DeleteIcon />\n                    </IconButton>\n                  </Stack>\n                );\n              })}\n            </Stack>\n          </CardContent>\n        </Card>\n      )}\n    />\n  );\n};\n\nconst NewTicketRuleSchema = Yup.object().shape({\n  name: Yup.string().required('Name is required'),\n  type: Yup.string(),\n  historicalDataRules: Yup.array(),\n  appLevelRules: Yup.array(),\n  followerRules: Yup.array(),\n  socialNetworks: Yup.array(),\n  socialNetworkRules: Yup.array(),\n});\n\nconst TicketRuleNewForm = ({ isEdit, currentTicketRule }) => {\n  const navigate = useNavigate();\n  const { enqueueSnackbar } = useSnackbar();\n\n  const formik = useFormik({\n    enableReinitialize: true,\n    initialValues: {\n      name: currentTicketRule?.name || '',\n      types: currentTicketRule?.types || ['Historical Data', 'App Level', 'Followers', 'Social'],\n      historicalDataRules: currentTicketRule?.historicalDataRules || [{ ...initialFromToObject }],\n      appLevelRules: currentTicketRule?.appLevelRules || [{ ...initialFromToObject }],\n      followerRules: currentTicketRule?.followerRules || [{ ...initialFromToObject }],\n      socialNetworks: currentTicketRule?.socialNetworks || [],\n      socialNetworkRules: currentTicketRule?.socialNetworkRules || [{ ...initialSocialRuleObject }],\n    },\n    validationSchema: NewTicketRuleSchema,\n    onSubmit: async (values, { setSubmitting, resetForm, setErrors }) => {\n      alert(JSON.stringify(values));\n      try {\n        resetForm();\n        setSubmitting(false);\n        enqueueSnackbar(!isEdit ? 'Create success' : 'Update success', { variant: 'success' });\n        navigate(PATH_DASHBOARD.bonus.createTicketRule);\n      } catch (error) {\n        console.error(error);\n        setSubmitting(false);\n        setErrors(error);\n      }\n    },\n  });\n\n  const { errors, values, touched, handleSubmit, isSubmitting, getFieldProps, setFieldValue } = formik;\n\n  console.log('*** ', values, errors);\n\n  return (\n    <FormikProvider value={formik}>\n      <Form noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\n        <Grid container spacing={3}>\n          <Grid item xs={12}>\n            <Card>\n              <CardContent>\n                <Stack spacing={3}>\n                  <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 3, sm: 2 }}>\n                    <TextField\n                      fullWidth\n                      size=\"small\"\n                      label=\"Name\"\n                      {...getFieldProps('name')}\n                      error={Boolean(touched.name && errors.name)}\n                      helperText={touched.name && errors.name}\n                    />\n                    <Autocomplete\n                      fullWidth\n                      multiple\n                      disableCloseOnSelect\n                      size=\"small\"\n                      value={values.types}\n                      onChange={(event, newValue) => {\n                        setFieldValue('types', newValue);\n                      }}\n                      options={['Historical Data', 'App Level', 'Followers', 'Social']}\n                      renderInput={(params) => (\n                        <TextField\n                          {...params}\n                          label=\"Ticket Rules\"\n                          error={Boolean(touched.types && errors.types)}\n                          helperText={touched.types && errors.types}\n                        />\n                      )}\n                    />\n                  </Stack>\n                  <Grid container spacing={1}>\n                    {values.types.includes('Historical Data') && (\n                      <Grid item xs={12} sm={12} md={6}>\n                        <HistoricalDataRules formik={formik} />\n                      </Grid>\n                    )}\n                    {values.types.includes('App Level') && (\n                      <Grid item xs={12} sm={12} md={6}>\n                        <AppLevelRules formik={formik} />\n                      </Grid>\n                    )}\n                    {values.types.includes('Followers') && (\n                      <Grid item xs={12} sm={12} md={6}>\n                        <FollowerRules formik={formik} />\n                      </Grid>\n                    )}\n                    {values.types.includes('Social') && (\n                      <Grid item xs={12} sm={12} md={6}>\n                        <SocialNetworkRules formik={formik} />\n                      </Grid>\n                    )}\n                  </Grid>\n\n                  <Box sx={{ mt: 3, display: 'flex', justifyContent: 'flex-end' }}>\n                    <LoadingButton type=\"submit\" variant=\"contained\" loading={isSubmitting} endIcon={<SaveIcon />}>\n                      Save\n                    </LoadingButton>\n                  </Box>\n                </Stack>\n              </CardContent>\n            </Card>\n          </Grid>\n        </Grid>\n      </Form>\n    </FormikProvider>\n  );\n};\n\nHistoricalDataRules.propTypes = {\n  formik: PropTypes.object,\n};\nAppLevelRules.propTypes = {\n  formik: PropTypes.object,\n};\nFollowerRules.propTypes = {\n  formik: PropTypes.object,\n};\nSocialNetworkRules.propTypes = {\n  formik: PropTypes.object,\n};\n\nTicketRuleNewForm.propTypes = {\n  isEdit: PropTypes.bool,\n  currentTicketRule: PropTypes.object,\n};\n\nexport default TicketRuleNewForm;\n","import { useParams, useLocation } from 'react-router-dom';\n// material\nimport { Container } from '@mui/material';\n// routes\nimport { PATH_DASHBOARD } from '../routes/paths';\n// hooks\nimport useSettings from '../hooks/useSettings';\n// components\nimport Page from '../components/Page';\nimport HeaderBreadcrumbs from '../components/HeaderBreadcrumbs';\nimport TicketRuleNewForm from '../components/bonus/TicketRuleNewForm';\n\n// ----------------------------------------------------------------------\n\nexport default function TicketRuleCreate() {\n  const { themeStretch } = useSettings();\n  const { pathname } = useLocation();\n  const { name } = useParams();\n  const isEdit = pathname.includes('edit');\n\n  // TODO: will be updated with Ticket Rule\n  const currentTicketRule = {\n    name,\n  };\n\n  return (\n    <Page title=\"TicketRule: Create a new bonus\">\n      <Container maxWidth={themeStretch ? false : 'lg'}>\n        <HeaderBreadcrumbs\n          heading={!isEdit ? 'Add Ticket Rule' : 'Edit Ticket Rule'}\n          links={[{ name: 'TicketRule', href: PATH_DASHBOARD.root }, { name: !isEdit ? 'Add Ticket Rule' : name }]}\n        />\n        <TicketRuleNewForm isEdit={isEdit} currentTicketRule={currentTicketRule} />\n      </Container>\n    </Page>\n  );\n}\n","import { isString } from 'lodash';\nimport PropTypes from 'prop-types';\n// material\nimport { Box, Typography, Link, Stack } from '@mui/material';\n//\nimport { MBreadcrumbs } from './@material-extend';\n\n// ----------------------------------------------------------------------\n\nHeaderBreadcrumbs.propTypes = {\n  links: PropTypes.array,\n  action: PropTypes.node,\n  heading: PropTypes.string.isRequired,\n  moreLink: PropTypes.oneOfType([PropTypes.string, PropTypes.array]),\n  sx: PropTypes.object,\n};\n\nexport default function HeaderBreadcrumbs({ links, action, heading, moreLink = '' || [], sx, ...other }) {\n  return (\n    <Stack sx={sx} mb={5} spacing={2}>\n      <Stack direction=\"row\" alignItems=\"center\">\n        <Box sx={{ flexGrow: 1 }}>\n          <Typography variant=\"h4\" gutterBottom>\n            {heading}\n          </Typography>\n          <MBreadcrumbs links={links} {...other} />\n        </Box>\n\n        {action && <Box sx={{ flexShrink: 0 }}>{action}</Box>}\n      </Stack>\n\n      {isString(moreLink) ? (\n        <Link href={moreLink} target=\"_blank\" variant=\"body2\">\n          {moreLink}\n        </Link>\n      ) : (\n        moreLink.map((href) => (\n          <Link noWrap key={href} href={href} variant=\"body2\" target=\"_blank\" sx={{ display: 'flex' }}>\n            {href}\n          </Link>\n        ))\n      )}\n    </Stack>\n  );\n}\n","var data = {\n\t\"body\": \"<path fill=\\\"currentColor\\\" d=\\\"M19 11h-6V5a1 1 0 0 0-2 0v6H5a1 1 0 0 0 0 2h6v6a1 1 0 0 0 2 0v-6h6a1 1 0 0 0 0-2z\\\"/>\",\n\t\"width\": 24,\n\t\"height\": 24\n};\nexports.__esModule = true;\nexports.default = data;\n","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M17 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V7l-4-4zm-5 16c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3zm3-10H5V5h10v4z\"\n}), 'Save');","import { generateUtilityClass, generateUtilityClasses } from '@mui/core';\nexport function getCardContentUtilityClass(slot) {\n  return generateUtilityClass('MuiCardContent', slot);\n}\nconst cardContentClasses = generateUtilityClasses('MuiCardContent', ['root']);\nexport default cardContentClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/core';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getCardContentUtilityClass } from './cardContentClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardContentUtilityClass, classes);\n};\n\nconst CardContentRoot = styled('div', {\n  name: 'MuiCardContent',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  };\n});\nconst CardContent = /*#__PURE__*/React.forwardRef(function CardContent(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardContent'\n  });\n\n  const {\n    className,\n    component = 'div'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    component\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardContentRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default CardContent;","import { generateUtilityClass, generateUtilityClasses } from '@mui/core';\nexport function getCardHeaderUtilityClass(slot) {\n  return generateUtilityClass('MuiCardHeader', slot);\n}\nconst cardHeaderClasses = generateUtilityClasses('MuiCardHeader', ['root', 'avatar', 'action', 'content', 'title', 'subheader']);\nexport default cardHeaderClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"action\", \"avatar\", \"className\", \"component\", \"disableTypography\", \"subheader\", \"subheaderTypographyProps\", \"title\", \"titleTypographyProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/core';\nimport Typography from '../Typography';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport cardHeaderClasses, { getCardHeaderUtilityClass } from './cardHeaderClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    avatar: ['avatar'],\n    action: ['action'],\n    content: ['content'],\n    title: ['title'],\n    subheader: ['subheader']\n  };\n  return composeClasses(slots, getCardHeaderUtilityClass, classes);\n};\n\nconst CardHeaderRoot = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Root',\n  overridesResolver: (props, styles) => _extends({\n    [`& .${cardHeaderClasses.title}`]: styles.title,\n    [`& .${cardHeaderClasses.subheader}`]: styles.subheader\n  }, styles.root)\n})({\n  display: 'flex',\n  alignItems: 'center',\n  padding: 16\n});\nconst CardHeaderAvatar = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Avatar',\n  overridesResolver: (props, styles) => styles.avatar\n})({\n  display: 'flex',\n  flex: '0 0 auto',\n  marginRight: 16\n});\nconst CardHeaderAction = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Action',\n  overridesResolver: (props, styles) => styles.action\n})({\n  flex: '0 0 auto',\n  alignSelf: 'flex-start',\n  marginTop: -4,\n  marginRight: -8,\n  marginBottom: -4\n});\nconst CardHeaderContent = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Content',\n  overridesResolver: (props, styles) => styles.content\n})({\n  flex: '1 1 auto'\n});\nconst CardHeader = /*#__PURE__*/React.forwardRef(function CardHeader(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardHeader'\n  });\n\n  const {\n    action,\n    avatar,\n    className,\n    component = 'div',\n    disableTypography = false,\n    subheader: subheaderProp,\n    subheaderTypographyProps,\n    title: titleProp,\n    titleTypographyProps\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    component,\n    disableTypography\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  let title = titleProp;\n\n  if (title != null && title.type !== Typography && !disableTypography) {\n    title = /*#__PURE__*/_jsx(Typography, _extends({\n      variant: avatar ? 'body2' : 'h5',\n      className: classes.title,\n      component: \"span\",\n      display: \"block\"\n    }, titleTypographyProps, {\n      children: title\n    }));\n  }\n\n  let subheader = subheaderProp;\n\n  if (subheader != null && subheader.type !== Typography && !disableTypography) {\n    subheader = /*#__PURE__*/_jsx(Typography, _extends({\n      variant: avatar ? 'body2' : 'body1',\n      className: classes.subheader,\n      color: \"text.secondary\",\n      component: \"span\",\n      display: \"block\"\n    }, subheaderTypographyProps, {\n      children: subheader\n    }));\n  }\n\n  return /*#__PURE__*/_jsxs(CardHeaderRoot, _extends({\n    className: clsx(classes.root, className),\n    as: component,\n    ref: ref,\n    ownerState: ownerState\n  }, other, {\n    children: [avatar && /*#__PURE__*/_jsx(CardHeaderAvatar, {\n      className: classes.avatar,\n      ownerState: ownerState,\n      children: avatar\n    }), /*#__PURE__*/_jsxs(CardHeaderContent, {\n      className: classes.content,\n      ownerState: ownerState,\n      children: [title, subheader]\n    }), action && /*#__PURE__*/_jsx(CardHeaderAction, {\n      className: classes.action,\n      ownerState: ownerState,\n      children: action\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardHeader.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The action to display in the card header.\n   */\n  action: PropTypes.node,\n\n  /**\n   * The Avatar element to display.\n   */\n  avatar: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, `subheader` and `title` won't be wrapped by a Typography component.\n   * This can be useful to render an alternative Typography variant by wrapping\n   * the `title` text, and optional `subheader` text\n   * with the Typography component.\n   * @default false\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * The content of the component.\n   */\n  subheader: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the subheader\n   * (as long as disableTypography is not `true`).\n   */\n  subheaderTypographyProps: PropTypes.object,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * The content of the component.\n   */\n  title: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the title\n   * (as long as disableTypography is not `true`).\n   */\n  titleTypographyProps: PropTypes.object\n} : void 0;\nexport default CardHeader;","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');"],"sourceRoot":""}